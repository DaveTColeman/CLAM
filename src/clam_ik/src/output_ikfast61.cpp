/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-03-06 21:41:46.981584
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55;
x0=IKcos(j[0]);
x1=IKsin(j[2]);
x2=IKsin(j[1]);
x3=IKcos(j[1]);
x4=IKcos(j[2]);
x5=IKcos(j[4]);
x6=IKcos(j[3]);
x7=IKsin(j[0]);
x8=IKsin(j[3]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.0549698905825417))*(x3));
x13=((IkReal(9.98488012511589e-5))*(x2));
x14=((IkReal(0.0217202857658142))*(x2));
x15=((IkReal(0.155600000000000))*(x2));
x16=((IkReal(0.0798790410009271))*(x3));
x17=((IkReal(5.49698905825417e-6))*(x3));
x18=((IkReal(0.998488012511589))*(x3));
x19=((IkReal(0.247179770989156))*(x3));
x20=((IkReal(0.00439759124660334))*(x2));
x21=((IkReal(0.998488012511589))*(x0));
x22=((IkReal(0.998488012511589))*(x2));
x23=((IkReal(0.0549698905825417))*(x2));
x24=((IkReal(1.00000000000000))*(x8));
x25=((IkReal(1.00000000000000))*(x6));
x26=((IkReal(0.998488012511589))*(x7));
x27=((IkReal(0.0800000000000000))*(x6));
x28=((x0)*(x8));
x29=((x7)*(x8));
x30=((x1)*(x7));
x31=((x2)*(x4));
x32=((x0)*(x1));
x33=((x3)*(x4));
x34=((x1)*(x2));
x35=((x6)*(x9));
x36=((x1)*(x3));
x37=((x0)*(x6));
x38=((x6)*(x7));
x39=((x0)*(x24));
x40=((x1)*(x23));
x41=((((x1)*(x18)))+(((x4)*(((x12)+(x22))))));
x42=((((x4)*(((((IkReal(-1.00000000000000))*(x23)))+(x18)))))+(((x1)*(((((IkReal(-1.00000000000000))*(x22)))+(((IkReal(-1.00000000000000))*(x12))))))));
x43=((((IkReal(-1.00000000000000))*(x40)))+(x41));
x44=((((IkReal(-1.00000000000000))*(x41)))+(x40));
x45=((((x21)*(x34)))+(((x0)*(((((IkReal(-1.00000000000000))*(x18)*(x4)))+(((x23)*(x4)))))))+(((x12)*(x32))));
x46=((((x18)*(x32)))+(((x21)*(x31)))+(((x0)*(x12)*(x4)))+(((IkReal(-1.00000000000000))*(x23)*(x32))));
x47=((((x22)*(x30)))+(((x12)*(x30)))+(((x4)*(((((IkReal(-1.00000000000000))*(x18)*(x7)))+(((x23)*(x7))))))));
x48=((((x18)*(x30)))+(((x4)*(((((x22)*(x7)))+(((x12)*(x7)))))))+(((IkReal(-1.00000000000000))*(x23)*(x30))));
x49=((IkReal(1.00000000000000))*(x47));
x50=((x47)*(x6));
x51=((x48)*(x9));
x52=((x47)*(x8));
x53=((x45)*(x8));
x54=((((x42)*(x9)))+(((x43)*(x5)*(x6))));
x55=((((x5)*(((x29)+(((x45)*(x6)))))))+(((x46)*(x9))));
eerot[0]=((((x46)*(x5)))+(((x9)*(((((IkReal(-1.00000000000000))*(x24)*(x7)))+(((IkReal(-1.00000000000000))*(x25)*(x45))))))));
eerot[1]=((((x11)*(x55)))+(((x10)*(((((IkReal(-1.00000000000000))*(x38)))+(x53))))));
eerot[2]=((((x10)*(x55)))+(((x11)*(((((IkReal(-1.00000000000000))*(x24)*(x45)))+(((x25)*(x7))))))));
IkReal x56=((IkReal(1.00000000000000))*(x32));
IkReal x57=((x0)*(x31));
IkReal x58=((x0)*(x33));
eetrans[0]=((((x9)*(((((IkReal(-0.0800000000000000))*(x29)))+(((IkReal(-1.00000000000000))*(x27)*(x45)))))))+(((IkReal(0.247179770989156))*(x57)))+(((IkReal(-1.00000000000000))*(x14)*(x56)))+(((x19)*(x32)))+(((x0)*(x15)))+(((IkReal(0.0217202857658142))*(x58)))+(((x8)*(((((IkReal(-1.00000000000000))*(x13)*(x56)))+(((IkReal(-1.00000000000000))*(x17)*(x56)))+(((IkReal(9.98488012511589e-5))*(x58)))+(((IkReal(-5.49698905825417e-6))*(x57)))))))+(((IkReal(0.000100000000000000))*(x38)))+(((x5)*(((((IkReal(0.00439759124660334))*(x58)))+(((IkReal(0.0798790410009271))*(x57)))+(((x16)*(x32)))+(((IkReal(-1.00000000000000))*(x20)*(x56)))))))+(((IkReal(-0.000100000000000000))*(x7))));
eerot[3]=((((x9)*(((((IkReal(-1.00000000000000))*(x25)*(x47)))+(x39)))))+(((x48)*(x5))));
eerot[4]=((((x11)*(((((x5)*(((((IkReal(-1.00000000000000))*(x39)))+(x50)))))+(x51)))))+(((x10)*(((x37)+(x52))))));
eerot[5]=((((x10)*(((x51)+(((x5)*(((((IkReal(-1.00000000000000))*(x28)))+(x50)))))))))+(((x11)*(((((IkReal(-1.00000000000000))*(x0)*(x25)))+(((IkReal(-1.00000000000000))*(x24)*(x47))))))));
IkReal x59=((IkReal(1.00000000000000))*(x30));
IkReal x60=((x33)*(x7));
IkReal x61=((x31)*(x7));
eetrans[1]=((((IkReal(-0.000100000000000000))*(x37)))+(((IkReal(0.000100000000000000))*(x0)))+(((IkReal(-1.00000000000000))*(x14)*(x59)))+(((x19)*(x30)))+(((x9)*(((((IkReal(-1.00000000000000))*(x27)*(x47)))+(((IkReal(0.0800000000000000))*(x28)))))))+(((IkReal(0.0217202857658142))*(x60)))+(((x8)*(((((IkReal(9.98488012511589e-5))*(x60)))+(((IkReal(-1.00000000000000))*(x13)*(x59)))+(((IkReal(-1.00000000000000))*(x17)*(x59)))+(((IkReal(-5.49698905825417e-6))*(x61)))))))+(((x5)*(((((IkReal(0.0798790410009271))*(x61)))+(((x16)*(x30)))+(((IkReal(-1.00000000000000))*(x20)*(x59)))+(((IkReal(0.00439759124660334))*(x60)))))))+(((IkReal(0.247179770989156))*(x61)))+(((x15)*(x7))));
eerot[6]=((((x35)*(x44)))+(((x42)*(x5))));
eerot[7]=((((x11)*(x54)))+(((x10)*(x43)*(x8))));
eerot[8]=((((x10)*(x54)))+(((x11)*(x44)*(x8))));
IkReal x62=((IkReal(1.00000000000000))*(x4));
eetrans[2]=((IkReal(0.0910000000000000))+(((x8)*(((((IkReal(-1.00000000000000))*(x13)*(x62)))+(((IkReal(-1.00000000000000))*(x17)*(x62)))+(((IkReal(-9.98488012511589e-5))*(x36)))+(((IkReal(5.49698905825417e-6))*(x34)))))))+(((IkReal(-1.00000000000000))*(x14)*(x62)))+(((x19)*(x4)))+(((x5)*(((((IkReal(-0.0798790410009271))*(x34)))+(((IkReal(-1.00000000000000))*(x20)*(x62)))+(((IkReal(-0.00439759124660334))*(x36)))+(((x16)*(x4)))))))+(((IkReal(-0.0217202857658142))*(x36)))+(((x35)*(((((x1)*(x20)))+(((IkReal(-0.0798790410009271))*(x31)))+(((IkReal(-1.00000000000000))*(x1)*(x16)))+(((IkReal(-0.00439759124660334))*(x33)))))))+(((IkReal(0.155600000000000))*(x3)))+(((IkReal(-0.247179770989156))*(x34))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r01;
new_r01=r02;
new_r02=r00;
new_px=((((IkReal(-0.0800000000000000))*(r00)))+(px));
new_r10=r11;
new_r11=r12;
new_r12=r10;
new_py=((((IkReal(-0.0800000000000000))*(r10)))+(py));
new_r20=r21;
new_r21=r22;
new_r22=r20;
new_pz=((IkReal(-0.0910000000000000))+(((IkReal(-0.0800000000000000))*(r20)))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x63=((IkReal(0.000100000000000000))*(r10));
IkReal x64=((IkReal(0.000331621915422235))*(npx));
IkReal x65=((IkReal(0.00243773681853759))*(r00));
IkReal x66=((IkReal(0.000200000000000000))*(pz));
IkReal x67=((IkReal(0.000200000000000000))*(rxp0_0));
IkReal x68=((IkReal(3.31621915422235e-8))*(r10));
IkReal x69=((IkReal(0.0101533623487302))*(rxp0_1));
IkReal x70=((IkReal(0.0372786303700397))*(r20));
IkReal x71=((IkReal(0.0101533623487302))*(npx));
IkReal x72=((IkReal(0.000200000000000000))*(px));
IkReal x73=((IkReal(1.01533623487302e-6))*(r10));
IkReal x74=((IkReal(0.310868378084578))*(rxp0_1));
IkReal x75=((IkReal(0.00243773681853759))*(r20));
IkReal x76=((IkReal(0.000200000000000000))*(rxp0_2));
IkReal x77=((IkReal(0.0372786303700397))*(r00));
IkReal x78=((pp)*(r20));
IkReal x79=((IkReal(0.621736756169156))*(rxp1_1));
IkReal x80=((IkReal(2.03067246974603e-6))*(r11));
IkReal x81=((IkReal(0.0203067246974603))*(npy));
IkReal x82=((IkReal(0.00487547363707517))*(r21));
IkReal x83=((IkReal(0.000400000000000000))*(rxp1_2));
IkReal x84=((IkReal(0.0745572607400794))*(r01));
IkReal x85=((IkReal(0.000663243830844470))*(npy));
IkReal x86=((IkReal(0.0745572607400794))*(r21));
IkReal x87=((IkReal(6.63243830844470e-8))*(r11));
IkReal x88=((IkReal(0.0203067246974603))*(rxp1_1));
IkReal x89=((IkReal(0.000400000000000000))*(rxp1_0));
IkReal x90=((IkReal(0.00487547363707517))*(r01));
IkReal x91=((pp)*(r00));
IkReal x92=((IkReal(0.000200000000000000))*(r00));
IkReal x93=((IkReal(2.00000000000000))*(px));
IkReal x94=((IkReal(0.000400000000000000))*(r01));
IkReal x95=((IkReal(0.000400000000000000))*(py));
IkReal x96=((IkReal(2.03067246974603e-6))*(r00));
IkReal x97=((IkReal(0.621736756169156))*(rxp0_0));
IkReal x98=((IkReal(0.0745572607400794))*(r10));
IkReal x99=((IkReal(0.00487547363707517))*(r10));
IkReal x100=((IkReal(0.000400000000000000))*(rxp0_1));
IkReal x101=((IkReal(6.63243830844470e-8))*(r00));
IkReal x102=((IkReal(0.0203067246974603))*(rxp0_0));
IkReal x103=((IkReal(1.24347351233831))*(rxp1_0));
IkReal x104=((IkReal(0.149114521480159))*(r11));
IkReal x105=((IkReal(4.06134493949206e-6))*(r01));
IkReal x106=((IkReal(1.32648766168894e-7))*(r01));
IkReal x107=((IkReal(0.0406134493949206))*(rxp1_0));
IkReal x108=((IkReal(0.000800000000000000))*(rxp1_1));
IkReal x109=((IkReal(0.00975094727415035))*(r11));
IkReal x110=((IkReal(1.00000000000000))*(py));
IkReal x111=((IkReal(0.000200000000000000))*(r11));
IkReal x112=((IkReal(-0.000100000000000000))+(py));
IkReal x113=((IkReal(2.00000000000000))*(npx));
IkReal x114=((IkReal(1.00000000000000))*(pp));
IkReal x115=((IkReal(4.00000000000000))*(npy));
IkReal x116=((IkReal(2.00000000000000))*(pp));
IkReal x117=((IkReal(-0.000200000000000000))*(r11));
IkReal x118=((x112)+(((IkReal(-1.00000000000000))*(x63))));
IkReal x119=((pz)*(x113));
IkReal x120=((npx)*(x93));
IkReal x121=((IkReal(1.00000000000000))*(x91));
IkReal x122=((r01)*(x116));
IkReal x123=((px)*(x115));
IkReal x124=((pz)*(x115));
IkReal x125=((r21)*(x116));
IkReal x126=((IkReal(1.00000000000000))*(x78));
IkReal x127=((x92)+(((IkReal(-1.00000000000000))*(x93))));
IkReal x128=((r10)*(x116));
IkReal x129=((IkReal(4.00000000000000))*(npx)*(py));
IkReal x130=((IkReal(4.00000000000000))*(pp)*(r11));
IkReal x131=((IkReal(8.00000000000000))*(npy)*(py));
IkReal x132=((IkReal(-3.31621915422235e-8))+(x78));
IkReal x133=((IkReal(-1.01533623487302e-6))+(x91));
IkReal x134=((IkReal(-3.31621915422235e-8))+(x66));
IkReal x135=((IkReal(1.01533623487302e-6))+(x91));
IkReal x136=((IkReal(-3.31621915422235e-8))+(x64));
IkReal x137=((x112)+(x63));
IkReal x138=((((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x92))));
IkReal x139=((x101)+(x102));
IkReal x140=((x100)+(x99));
IkReal x141=((IkReal(-0.000100000000000000))+(((IkReal(-1.00000000000000))*(x110)))+(((IkReal(-1.00000000000000))*(x63))));
IkReal x142=((IkReal(-0.000100000000000000))+(((IkReal(-1.00000000000000))*(x110)))+(x63));
IkReal x143=((x68)+(x69));
IkReal x144=((x88)+(x87));
IkReal x145=((x106)+(x107));
IkReal x146=((x65)+(x67));
IkReal x147=((x64)+(x66));
IkReal x148=((x97)+(x96));
IkReal x149=((x72)+(x71));
IkReal x150=((x76)+(x75));
IkReal x151=((x74)+(x73));
IkReal x152=((x89)+(x90));
IkReal x153=((x105)+(x103));
IkReal x154=((x82)+(x83));
IkReal x155=((x108)+(x109));
IkReal x156=((x79)+(x80));
IkReal x157=((x119)+(x70));
IkReal x158=((x124)+(x86));
IkReal x159=((x129)+(x98));
IkReal x160=((x131)+(x104));
IkReal x161=((x120)+(x77));
IkReal x162=((x126)+(x64));
IkReal x163=((x123)+(x84));
IkReal x164=((x128)+(x95));
IkReal x165=((x126)+(x66));
IkReal x166=((x122)+(x81));
IkReal x167=((x152)+(x125));
IkReal x168=((x140)+(x139));
op[0]=x137;
op[1]=IkReal(0);
op[2]=x117;
op[3]=IkReal(0);
op[4]=x118;
op[5]=IkReal(0);
op[6]=IkReal(0);
op[7]=x137;
op[8]=IkReal(0);
op[9]=x117;
op[10]=IkReal(0);
op[11]=x118;
op[12]=((((IkReal(-1.00000000000000))*(x146)))+(((IkReal(-1.00000000000000))*(x162)))+(x157)+(x143)+(x134));
op[13]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x121)))+(x161)+(x151)+(x150)+(x72));
op[14]=((((IkReal(-1.00000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(x158)))+(x167)+(x85));
op[15]=((((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x163)))+(x166));
op[16]=((((IkReal(-1.00000000000000))*(x143)))+(((IkReal(-1.00000000000000))*(x157)))+(x146)+(x147)+(x132));
op[17]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x161)))+(x149)+(x133));
op[18]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x121)))+(x161)+(x150)+(x149));
op[19]=((((IkReal(-1.00000000000000))*(x147)))+(((IkReal(-1.00000000000000))*(x157)))+(x143)+(x146)+(x132));
op[20]=((((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x163)))+(x156)+(x122)+(((IkReal(-1.00000000000000))*(x81))));
op[21]=((((IkReal(-1.00000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(x167)))+(x158)+(x85));
op[22]=((((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x71)))+(x151)+(x135)+(x72));
op[23]=((((IkReal(-1.00000000000000))*(x143)))+(((IkReal(-1.00000000000000))*(x146)))+(((IkReal(-1.00000000000000))*(x165)))+(x157)+(x136));
op[24]=x138;
op[25]=IkReal(0);
op[26]=x94;
op[27]=IkReal(0);
op[28]=x127;
op[29]=IkReal(0);
op[30]=IkReal(0);
op[31]=x138;
op[32]=IkReal(0);
op[33]=x94;
op[34]=IkReal(0);
op[35]=x127;
op[36]=((IkReal(-1.00000000000000))*(x168));
op[37]=((((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x128)))+(x159)+(x95));
op[38]=((x155)+(x145));
op[39]=((((IkReal(-1.00000000000000))*(x160)))+(x153)+(x130));
op[40]=x168;
op[41]=((((IkReal(-1.00000000000000))*(x159)))+(x164)+(x148));
op[42]=((((IkReal(-1.00000000000000))*(x128)))+(x159)+(x148)+(x95));
op[43]=((x140)+(((IkReal(-1.00000000000000))*(x139))));
op[44]=((((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x160)))+(x130));
op[45]=((((IkReal(-1.00000000000000))*(x155)))+(x145));
op[46]=((((IkReal(-1.00000000000000))*(x148)))+(((IkReal(-1.00000000000000))*(x159)))+(x164));
op[47]=((((IkReal(-1.00000000000000))*(x140)))+(x139));
op[48]=x141;
op[49]=IkReal(0);
op[50]=x111;
op[51]=IkReal(0);
op[52]=x142;
op[53]=IkReal(0);
op[54]=IkReal(0);
op[55]=x141;
op[56]=IkReal(0);
op[57]=x111;
op[58]=IkReal(0);
op[59]=x142;
op[60]=((((IkReal(-1.00000000000000))*(x143)))+(((IkReal(-1.00000000000000))*(x162)))+(x157)+(x146)+(x134));
op[61]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x161)))+(x150)+(x133));
op[62]=((((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x158)))+(x144)+(x125)+(x85));
op[63]=((((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x122)))+(x163)+(x156)+(x81));
op[64]=((((IkReal(-1.00000000000000))*(x146)))+(((IkReal(-1.00000000000000))*(x157)))+(x143)+(x147)+(x132));
op[65]=((IkReal(-1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x121)))+(x161)+(x151)+(x71));
op[66]=((((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x72)))+(x151)+(x150)+(x135)+(x71));
op[67]=((((IkReal(-1.00000000000000))*(x143)))+(((IkReal(-1.00000000000000))*(x147)))+(((IkReal(-1.00000000000000))*(x146)))+(((IkReal(-1.00000000000000))*(x157)))+(x132));
op[68]=((((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x166)))+(x163));
op[69]=((((IkReal(-1.00000000000000))*(x125)))+(x152)+(x158)+(x144)+(x85));
op[70]=((IkReal(1.01533623487302e-6))+(((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x150)))+(((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x121)))+(x161));
op[71]=((((IkReal(-1.00000000000000))*(x165)))+(x157)+(x143)+(x146)+(x136));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j6array[16], cj6array[16], sj6array[16], j1array[16], cj1array[16], sj1array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj6 = zeror[ij0+1], htj1 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
IkReal x169=(htj0)*(htj0);
IkReal x170=(htj6)*(htj6);
IkReal x171=(htj1)*(htj1);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x169))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x169)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x169))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x170))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x170)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x170))))));
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x171))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x171)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x171))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj6 = 1;
_nj1 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij0]-cj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij0]-sj6array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij6[1] = 0; _ij1[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j6 = j6array[ij0]; cj6 = cj6array[ij0]; sj6 = sj6array[ij0];

    j1 = j1array[ij0]; cj1 = cj1array[ij0]; sj1 = sj1array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
cj4array[0]=((((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj0)*(r11)*(sj6)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj0))));
if( cj4array[0] >= -1-IKFAST_SINCOS_THRESH && cj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKacos(cj4array[0]);
    sj4array[0] = IKsin(j4array[0]);
    cj4array[1] = cj4array[0];
    j4array[1] = -j4array[0];
    sj4array[1] = -sj4array[0];
}
else if( isnan(cj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
for(int ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x172=(cj6)*(cj6);
IkReal x173=(cj0)*(cj0);
IkReal x174=(sj0)*(sj0);
IkReal x175=(sj6)*(sj6);
IkReal x176=((IkReal(2.00000000000000))*(r11));
IkReal x177=((cj0)*(sj0));
IkReal x178=((cj6)*(sj6));
IkReal x179=((IkReal(2.00000000000000))*(r01));
IkReal x180=((IkReal(1.00000000000000))*(x173));
IkReal x181=((IkReal(1.00000000000000))*(x174));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(x175)*(x180)*((r10)*(r10))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x175)*(x177)))+(((r00)*(x176)*(x177)*(x178)))+(((IkReal(-1.00000000000000))*(x172)*(x181)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x180)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x181)*((r02)*(r02))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x177)))+(((IkReal(-1.00000000000000))*(r10)*(x173)*(x176)*(x178)))+(((r01)*(x172)*(x176)*(x177)))+(((r10)*(x177)*(x178)*(x179)))+(((IkReal(-1.00000000000000))*(r00)*(x174)*(x178)*(x179)))+(((IkReal(-1.00000000000000))*(x175)*(x181)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x172)*(x180)*((r11)*(r11))))));
IkReal x182=(cj6)*(cj6);
IkReal x183=(cj0)*(cj0);
IkReal x184=(sj0)*(sj0);
IkReal x185=(sj6)*(sj6);
IkReal x186=((IkReal(2.00000000000000))*(r11));
IkReal x187=((cj0)*(sj0));
IkReal x188=((cj6)*(sj6));
IkReal x189=((IkReal(2.00000000000000))*(r01));
IkReal x190=((IkReal(1.00000000000000))*(x183));
IkReal x191=((IkReal(1.00000000000000))*(x184));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x184)*(x188)*(x189)))+(((IkReal(-1.00000000000000))*(x182)*(x191)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x185)*(x191)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x185)*(x187)))+(((IkReal(-1.00000000000000))*(x190)*((r12)*(r12))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x187)))+(((r00)*(x186)*(x187)*(x188)))+(((IkReal(-1.00000000000000))*(x182)*(x190)*((r11)*(r11))))+(((r10)*(x187)*(x188)*(x189)))+(((IkReal(-1.00000000000000))*(r10)*(x183)*(x186)*(x188)))+(((IkReal(-1.00000000000000))*(x185)*(x190)*((r10)*(r10))))+(((r01)*(x182)*(x186)*(x187)))+(((IkReal(-1.00000000000000))*(x191)*((r02)*(r02)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x192=((IkReal(0.248000000000000))*(sj4));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x192)*((cj1)*(cj1))))+(((IkReal(-1.00000000000000))*(x192)*((sj1)*(sj1))))));
IkReal x193=((IkReal(1.00000000000000))*(sj4));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x193)*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*(x193)*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
IkReal x194=(sj4)*(sj4);
gconst2=IKsign(((((x194)*((sj1)*(sj1))))+(((x194)*((cj1)*(cj1))))));
IkReal x195=(sj4)*(sj4);
dummyeval[0]=((((x195)*((sj1)*(sj1))))+(((x195)*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x196=((IkReal(1.00000000000000))*(cj6));
IkReal x197=((r00)*(sj0));
IkReal x198=((r11)*(sj6));
IkReal x199=((IkReal(1.00000000000000))*(cj0));
IkReal x200=((r01)*(sj0)*(sj6));
IkReal x201=((cj0)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x196)*(x197)))+(x201)+(x200)+(((IkReal(-1.00000000000000))*(x198)*(x199))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(0.000100000000000000))*(cj6)*(x197)))+(((IkReal(-1.00000000000000))*(py)*(x199)))+(((IkReal(0.000100000000000000))*(cj0)*(x198)))+(((px)*(sj0)))+(((IkReal(-0.000100000000000000))*(x201)))+(((IkReal(-0.000100000000000000))*(x200))));
evalcond[3]=((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x196))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj0)*(r00)*(x196)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x196)))+(((sj0)*(x198)))+(((cj0)*(r01)*(sj6))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x202=((IkReal(1.00000000000000))*(cj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(x202)))+(((r02)*(sj0))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x202)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x202))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x203=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(x202)))+(((r02)*(sj0)))), ((((r00)*(sj0)*(sj6)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x202)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x202)))));
j5array[0]=((IkReal(-1.00000000000000))*(x203));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x203))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x204=IKcos(j5);
IkReal x205=IKsin(j5);
IkReal x206=((IkReal(1.00000000000000))*(sj0));
IkReal x207=((cj6)*(x204));
IkReal x208=((sj6)*(x204));
evalcond[0]=((((cj0)*(r11)*(x207)))+(((IkReal(-1.00000000000000))*(r00)*(x206)*(x208)))+(((IkReal(-1.00000000000000))*(cj0)*(r12)*(x205)))+(((r02)*(sj0)*(x205)))+(((cj0)*(r10)*(x208)))+(((IkReal(-1.00000000000000))*(r01)*(x206)*(x207))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x209=(cj1)*(cj1);
IkReal x210=((r21)*(sj6));
IkReal x211=((IkReal(9.98488012511589e-5))*(cj1));
IkReal x212=((IkReal(0.247179770989156))*(sj1));
IkReal x213=((cj5)*(r22));
IkReal x214=((IkReal(5.49698905825417e-6))*(sj1));
IkReal x215=((cj6)*(r20));
IkReal x216=((IkReal(9.98488012511589e-5))*(sj1));
IkReal x217=((cj1)*(sj1));
IkReal x218=((IkReal(5.49698905825417e-6))*(cj1));
IkReal x219=((IkReal(0.0217202857658142))*(sj1));
IkReal x220=((IkReal(0.998488012511589))*(pz));
IkReal x221=((IkReal(0.0549698905825417))*(pz));
IkReal x222=((IkReal(0.247179770989156))*(cj1));
IkReal x223=((IkReal(0.0217202857658142))*(cj1));
IkReal x224=((r20)*(sj5)*(sj6));
IkReal x225=((cj6)*(r21)*(sj5));
if( IKabs(((gconst13)*(((((x214)*(x215)))+(((x210)*(x211)))+(((x222)*(x225)))+(((x222)*(x224)))+(((IkReal(-0.00855331497464349))*(x217)))+(((IkReal(0.155364734746803))*(x209)))+(((x213)*(x222)))+(((IkReal(-1.00000000000000))*(x219)*(x224)))+(((IkReal(-1.00000000000000))*(x219)*(x225)))+(((sj1)*(x221)))+(((IkReal(-1.00000000000000))*(x210)*(x214)))+(((IkReal(-1.00000000000000))*(cj1)*(x220)))+(((IkReal(-1.00000000000000))*(x211)*(x215)))+(((IkReal(-1.00000000000000))*(x213)*(x219))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(0.155364734746803))*(x217)))+(((x210)*(x218)))+(((x210)*(x216)))+(((x213)*(x223)))+(((x223)*(x225)))+(((x223)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x220)))+(((IkReal(0.00855331497464349))*(x209)))+(((x212)*(x213)))+(((IkReal(-1.00000000000000))*(cj1)*(x221)))+(((IkReal(-1.00000000000000))*(x215)*(x216)))+(((IkReal(-1.00000000000000))*(x215)*(x218)))+(((x212)*(x225)))+(((x212)*(x224))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst13)*(((((x214)*(x215)))+(((x210)*(x211)))+(((x222)*(x225)))+(((x222)*(x224)))+(((IkReal(-0.00855331497464349))*(x217)))+(((IkReal(0.155364734746803))*(x209)))+(((x213)*(x222)))+(((IkReal(-1.00000000000000))*(x219)*(x224)))+(((IkReal(-1.00000000000000))*(x219)*(x225)))+(((sj1)*(x221)))+(((IkReal(-1.00000000000000))*(x210)*(x214)))+(((IkReal(-1.00000000000000))*(cj1)*(x220)))+(((IkReal(-1.00000000000000))*(x211)*(x215)))+(((IkReal(-1.00000000000000))*(x213)*(x219)))))), ((gconst13)*(((((IkReal(0.155364734746803))*(x217)))+(((x210)*(x218)))+(((x210)*(x216)))+(((x213)*(x223)))+(((x223)*(x225)))+(((x223)*(x224)))+(((IkReal(-1.00000000000000))*(sj1)*(x220)))+(((IkReal(0.00855331497464349))*(x209)))+(((x212)*(x213)))+(((IkReal(-1.00000000000000))*(cj1)*(x221)))+(((IkReal(-1.00000000000000))*(x215)*(x216)))+(((IkReal(-1.00000000000000))*(x215)*(x218)))+(((x212)*(x225)))+(((x212)*(x224)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x226=IKsin(j3);
IkReal x227=IKcos(j3);
IkReal x228=((sj0)*(sj5));
IkReal x229=((cj6)*(r11));
IkReal x230=((r10)*(sj6));
IkReal x231=((IkReal(1.00000000000000))*(cj5));
IkReal x232=((IkReal(0.000100000000000000))*(cj0));
IkReal x233=((cj0)*(r02));
IkReal x234=((IkReal(0.000100000000000000))*(sj6));
IkReal x235=((r20)*(sj6));
IkReal x236=((cj6)*(r21));
IkReal x237=((IkReal(0.000100000000000000))*(cj6));
IkReal x238=((sj1)*(x227));
IkReal x239=((sj1)*(x226));
IkReal x240=((cj1)*(x226));
IkReal x241=((cj1)*(x227));
IkReal x242=((cj0)*(r00)*(sj6));
IkReal x243=((cj0)*(cj6)*(r01));
IkReal x244=((IkReal(0.0549698905825417))*(x239));
IkReal x245=((IkReal(0.998488012511589))*(x240));
IkReal x246=((IkReal(0.998488012511589))*(x238));
IkReal x247=((IkReal(0.0549698905825417))*(x241));
IkReal x248=((IkReal(0.998488012511589))*(x239));
IkReal x249=((IkReal(0.0549698905825417))*(x240));
IkReal x250=((IkReal(0.0549698905825417))*(x238));
IkReal x251=((IkReal(0.998488012511589))*(x241));
IkReal x252=((x250)+(x249)+(x248));
IkReal x253=((x247)+(x246)+(x245));
evalcond[0]=((((IkReal(0.0217202857658142))*(x240)))+(((IkReal(-0.247179770989156))*(x241)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.247179770989156))*(x239)))+(pz)+(((IkReal(-1.00000000000000))*(r21)*(x234)))+(((IkReal(0.0217202857658142))*(x238)))+(((r20)*(x237))));
evalcond[1]=((((cj5)*(r22)))+(x252)+(((sj5)*(x236)))+(((sj5)*(x235)))+(((IkReal(-1.00000000000000))*(x251))));
evalcond[2]=((((r22)*(sj5)))+(x253)+(((IkReal(-1.00000000000000))*(x231)*(x236)))+(((IkReal(-1.00000000000000))*(x231)*(x235)))+(((IkReal(-1.00000000000000))*(x244))));
evalcond[3]=((((cj6)*(r00)*(x232)))+(((IkReal(-0.247179770989156))*(x238)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179770989156))*(x240)))+(((IkReal(-0.0217202857658142))*(x241)))+(((IkReal(0.0217202857658142))*(x239)))+(((r10)*(sj0)*(x237)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x232)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x234)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(((sj5)*(x243)))+(((sj5)*(x242)))+(((x228)*(x230)))+(((x228)*(x229)))+(((cj5)*(x233)))+(x244)+(((IkReal(-1.00000000000000))*(x253))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj0)*(x230)*(x231)))+(((IkReal(-1.00000000000000))*(x231)*(x243)))+(((IkReal(-1.00000000000000))*(x231)*(x242)))+(((r12)*(x228)))+(((IkReal(-1.00000000000000))*(sj0)*(x229)*(x231)))+(x252)+(((sj5)*(x233)))+(((IkReal(-1.00000000000000))*(x251))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x254=((cj6)*(r21));
IkReal x255=((cj1)*(sj5));
IkReal x256=((IkReal(0.0549698905825417))*(sj1));
IkReal x257=((r22)*(sj5));
IkReal x258=((IkReal(0.998488012511589))*(sj1));
IkReal x259=((r20)*(sj6));
IkReal x260=((cj5)*(r22));
IkReal x261=((IkReal(0.998488012511589))*(cj1));
IkReal x262=((IkReal(0.0549698905825417))*(cj1)*(cj5));
IkReal x263=((sj5)*(x259));
if( IKabs(((gconst14)*(((((cj5)*(x254)*(x256)))+(((x258)*(x263)))+(((x258)*(x260)))+(((IkReal(0.0549698905825417))*(cj1)*(x260)))+(((IkReal(-1.00000000000000))*(cj5)*(x259)*(x261)))+(((IkReal(-1.00000000000000))*(cj5)*(x254)*(x261)))+(((IkReal(-1.00000000000000))*(x256)*(x257)))+(((IkReal(0.998488012511589))*(r22)*(x255)))+(((IkReal(0.0549698905825417))*(x254)*(x255)))+(((IkReal(0.0549698905825417))*(x255)*(x259)))+(((cj5)*(x256)*(x259)))+(((sj5)*(x254)*(x258))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(cj5)*(x258)*(x259)))+(((IkReal(-0.998488012511589))*(x254)*(x255)))+(((IkReal(-0.998488012511589))*(x255)*(x259)))+(((IkReal(-1.00000000000000))*(x259)*(x262)))+(((x257)*(x258)))+(((IkReal(0.0549698905825417))*(r22)*(x255)))+(((x256)*(x263)))+(((x256)*(x260)))+(((IkReal(-1.00000000000000))*(cj5)*(x254)*(x258)))+(((sj5)*(x254)*(x256)))+(((IkReal(-1.00000000000000))*(x254)*(x262)))+(((IkReal(-1.00000000000000))*(x260)*(x261))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst14)*(((((cj5)*(x254)*(x256)))+(((x258)*(x263)))+(((x258)*(x260)))+(((IkReal(0.0549698905825417))*(cj1)*(x260)))+(((IkReal(-1.00000000000000))*(cj5)*(x259)*(x261)))+(((IkReal(-1.00000000000000))*(cj5)*(x254)*(x261)))+(((IkReal(-1.00000000000000))*(x256)*(x257)))+(((IkReal(0.998488012511589))*(r22)*(x255)))+(((IkReal(0.0549698905825417))*(x254)*(x255)))+(((IkReal(0.0549698905825417))*(x255)*(x259)))+(((cj5)*(x256)*(x259)))+(((sj5)*(x254)*(x258)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(cj5)*(x258)*(x259)))+(((IkReal(-0.998488012511589))*(x254)*(x255)))+(((IkReal(-0.998488012511589))*(x255)*(x259)))+(((IkReal(-1.00000000000000))*(x259)*(x262)))+(((x257)*(x258)))+(((IkReal(0.0549698905825417))*(r22)*(x255)))+(((x256)*(x263)))+(((x256)*(x260)))+(((IkReal(-1.00000000000000))*(cj5)*(x254)*(x258)))+(((sj5)*(x254)*(x256)))+(((IkReal(-1.00000000000000))*(x254)*(x262)))+(((IkReal(-1.00000000000000))*(x260)*(x261)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x264=IKsin(j3);
IkReal x265=IKcos(j3);
IkReal x266=((sj0)*(sj5));
IkReal x267=((cj6)*(r11));
IkReal x268=((r10)*(sj6));
IkReal x269=((IkReal(1.00000000000000))*(cj5));
IkReal x270=((IkReal(0.000100000000000000))*(cj0));
IkReal x271=((cj0)*(r02));
IkReal x272=((IkReal(0.000100000000000000))*(sj6));
IkReal x273=((r20)*(sj6));
IkReal x274=((cj6)*(r21));
IkReal x275=((IkReal(0.000100000000000000))*(cj6));
IkReal x276=((sj1)*(x265));
IkReal x277=((sj1)*(x264));
IkReal x278=((cj1)*(x264));
IkReal x279=((cj1)*(x265));
IkReal x280=((cj0)*(r00)*(sj6));
IkReal x281=((cj0)*(cj6)*(r01));
IkReal x282=((IkReal(0.0549698905825417))*(x277));
IkReal x283=((IkReal(0.998488012511589))*(x278));
IkReal x284=((IkReal(0.998488012511589))*(x276));
IkReal x285=((IkReal(0.0549698905825417))*(x279));
IkReal x286=((IkReal(0.998488012511589))*(x277));
IkReal x287=((IkReal(0.0549698905825417))*(x278));
IkReal x288=((IkReal(0.0549698905825417))*(x276));
IkReal x289=((IkReal(0.998488012511589))*(x279));
IkReal x290=((x288)+(x287)+(x286));
IkReal x291=((x285)+(x284)+(x283));
evalcond[0]=((((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-0.247179770989156))*(x279)))+(pz)+(((IkReal(0.247179770989156))*(x277)))+(((IkReal(-1.00000000000000))*(r21)*(x272)))+(((r20)*(x275)))+(((IkReal(0.0217202857658142))*(x278)))+(((IkReal(0.0217202857658142))*(x276))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x274)))+(((sj5)*(x273)))+(x290)+(((IkReal(-1.00000000000000))*(x289))));
evalcond[2]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x269)*(x273)))+(((IkReal(-1.00000000000000))*(x269)*(x274)))+(x291)+(((IkReal(-1.00000000000000))*(x282))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj0)*(x272)))+(((cj6)*(r00)*(x270)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179770989156))*(x278)))+(((IkReal(-0.247179770989156))*(x276)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x270)))+(((IkReal(-0.0217202857658142))*(x279)))+(((cj0)*(px)))+(((py)*(sj0)))+(((r10)*(sj0)*(x275)))+(((IkReal(0.0217202857658142))*(x277))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(((x266)*(x268)))+(((x266)*(x267)))+(((cj5)*(x271)))+(((IkReal(-1.00000000000000))*(x291)))+(x282)+(((sj5)*(x281)))+(((sj5)*(x280))));
evalcond[5]=((((sj5)*(x271)))+(x290)+(((IkReal(-1.00000000000000))*(sj0)*(x267)*(x269)))+(((IkReal(-1.00000000000000))*(sj0)*(x268)*(x269)))+(((r12)*(x266)))+(((IkReal(-1.00000000000000))*(x289)))+(((IkReal(-1.00000000000000))*(x269)*(x280)))+(((IkReal(-1.00000000000000))*(x269)*(x281))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x292=(sj1)*(sj1);
IkReal x293=(cj1)*(cj1);
IkReal x294=((cj1)*(sj0));
IkReal x295=((IkReal(0.0217202857658142))*(py));
IkReal x296=((IkReal(0.0217202857658142))*(sj1));
IkReal x297=((IkReal(2.47179770989156e-5))*(cj6));
IkReal x298=((cj0)*(px));
IkReal x299=((cj0)*(r01));
IkReal x300=((IkReal(2.47179770989156e-5))*(sj6));
IkReal x301=((cj0)*(r00));
IkReal x302=((IkReal(2.17202857658142e-6))*(cj6));
IkReal x303=((IkReal(0.0217202857658142))*(cj1));
IkReal x304=((cj1)*(r20));
IkReal x305=((r11)*(sj0));
IkReal x306=((IkReal(0.247179770989156))*(cj1));
IkReal x307=((IkReal(0.247179770989156))*(sj1));
IkReal x308=((IkReal(2.17202857658142e-6))*(sj6));
IkReal x309=((r20)*(sj1));
IkReal x310=((sj1)*(x300));
IkReal x311=((cj1)*(x308));
IkReal x312=((r10)*(sj0)*(sj1));
if( IKabs(((gconst12)*(((((sj1)*(x305)*(x308)))+(((IkReal(0.247179770989156))*(py)*(x294)))+(((IkReal(0.00337967646516069))*(x293)))+(((IkReal(0.00337967646516069))*(x292)))+(((IkReal(-1.00000000000000))*(cj1)*(x299)*(x300)))+(((sj1)*(x299)*(x308)))+(((IkReal(-1.00000000000000))*(x296)*(x298)))+(((IkReal(-1.00000000000000))*(x297)*(x309)))+(((IkReal(-1.00000000000000))*(x302)*(x304)))+(((IkReal(-1.00000000000000))*(x302)*(x312)))+(((x298)*(x306)))+(((r10)*(x294)*(x297)))+(((IkReal(-1.00000000000000))*(pz)*(x303)))+(((IkReal(-1.00000000000000))*(pz)*(x307)))+(((cj1)*(x297)*(x301)))+(((IkReal(-1.00000000000000))*(sj1)*(x301)*(x302)))+(((r21)*(x310)))+(((r21)*(x311)))+(((IkReal(-1.00000000000000))*(sj0)*(sj1)*(x295)))+(((IkReal(-1.00000000000000))*(r11)*(x294)*(x300))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((r10)*(x294)*(x302)))+(((IkReal(-1.00000000000000))*(pz)*(x296)))+(((x297)*(x312)))+(((IkReal(-1.00000000000000))*(x302)*(x309)))+(((cj1)*(x301)*(x302)))+(((IkReal(-1.00000000000000))*(x305)*(x310)))+(((x298)*(x303)))+(((x298)*(x307)))+(((x297)*(x304)))+(((IkReal(-1.00000000000000))*(x299)*(x311)))+(((IkReal(-1.00000000000000))*(x299)*(x310)))+(((IkReal(-0.0384611723659126))*(x292)))+(((IkReal(-0.0384611723659126))*(x293)))+(((x294)*(x295)))+(((r21)*(sj1)*(x308)))+(((py)*(sj0)*(x307)))+(((pz)*(x306)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(x300)))+(((sj1)*(x297)*(x301)))+(((IkReal(-1.00000000000000))*(r11)*(x294)*(x308))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst12)*(((((sj1)*(x305)*(x308)))+(((IkReal(0.247179770989156))*(py)*(x294)))+(((IkReal(0.00337967646516069))*(x293)))+(((IkReal(0.00337967646516069))*(x292)))+(((IkReal(-1.00000000000000))*(cj1)*(x299)*(x300)))+(((sj1)*(x299)*(x308)))+(((IkReal(-1.00000000000000))*(x296)*(x298)))+(((IkReal(-1.00000000000000))*(x297)*(x309)))+(((IkReal(-1.00000000000000))*(x302)*(x304)))+(((IkReal(-1.00000000000000))*(x302)*(x312)))+(((x298)*(x306)))+(((r10)*(x294)*(x297)))+(((IkReal(-1.00000000000000))*(pz)*(x303)))+(((IkReal(-1.00000000000000))*(pz)*(x307)))+(((cj1)*(x297)*(x301)))+(((IkReal(-1.00000000000000))*(sj1)*(x301)*(x302)))+(((r21)*(x310)))+(((r21)*(x311)))+(((IkReal(-1.00000000000000))*(sj0)*(sj1)*(x295)))+(((IkReal(-1.00000000000000))*(r11)*(x294)*(x300)))))), ((gconst12)*(((((r10)*(x294)*(x302)))+(((IkReal(-1.00000000000000))*(pz)*(x296)))+(((x297)*(x312)))+(((IkReal(-1.00000000000000))*(x302)*(x309)))+(((cj1)*(x301)*(x302)))+(((IkReal(-1.00000000000000))*(x305)*(x310)))+(((x298)*(x303)))+(((x298)*(x307)))+(((x297)*(x304)))+(((IkReal(-1.00000000000000))*(x299)*(x311)))+(((IkReal(-1.00000000000000))*(x299)*(x310)))+(((IkReal(-0.0384611723659126))*(x292)))+(((IkReal(-0.0384611723659126))*(x293)))+(((x294)*(x295)))+(((r21)*(sj1)*(x308)))+(((py)*(sj0)*(x307)))+(((pz)*(x306)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(x300)))+(((sj1)*(x297)*(x301)))+(((IkReal(-1.00000000000000))*(r11)*(x294)*(x308)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x313=IKsin(j3);
IkReal x314=IKcos(j3);
IkReal x315=((IkReal(0.000100000000000000))*(sj6));
IkReal x316=((IkReal(0.000100000000000000))*(cj6));
IkReal x317=((IkReal(0.247179770989156))*(x313));
IkReal x318=((IkReal(0.0217202857658142))*(x314));
IkReal x319=((IkReal(0.0217202857658142))*(x313));
IkReal x320=((IkReal(0.247179770989156))*(x314));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x315)))+(((r20)*(x316)))+(((IkReal(-1.00000000000000))*(cj1)*(x320)))+(((cj1)*(x319)))+(((IkReal(-0.155600000000000))*(cj1)))+(((sj1)*(x317)))+(((sj1)*(x318)))+(pz));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x320)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x315)))+(((cj0)*(r00)*(x316)))+(((IkReal(-0.155600000000000))*(sj1)))+(((sj1)*(x319)))+(((IkReal(-1.00000000000000))*(cj1)*(x318)))+(((IkReal(-1.00000000000000))*(cj1)*(x317)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x315)))+(((cj0)*(px)))+(((py)*(sj0)))+(((r10)*(sj0)*(x316))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
IkReal x321=((r20)*(sj6));
IkReal x322=((cj0)*(r12));
IkReal x323=((r22)*(sj0));
IkReal x324=((cj6)*(r21));
IkReal x325=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x326=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst15=IKsign(((((x322)*(x324)))+(((cj6)*(r01)*(x323)))+(((IkReal(-1.00000000000000))*(x321)*(x326)))+(((r00)*(sj6)*(x323)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x325)))+(((IkReal(-1.00000000000000))*(x324)*(x326)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x325)))+(((x321)*(x322)))));
IkReal x327=((r20)*(sj6));
IkReal x328=((cj0)*(r12));
IkReal x329=((r22)*(sj0));
IkReal x330=((cj6)*(r21));
IkReal x331=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x332=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x331)))+(((x327)*(x328)))+(((cj6)*(r01)*(x329)))+(((r00)*(sj6)*(x329)))+(((IkReal(-1.00000000000000))*(x330)*(x332)))+(((x328)*(x330)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x331)))+(((IkReal(-1.00000000000000))*(x327)*(x332))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
IkReal x333=(cj6)*(cj6);
IkReal x334=(sj6)*(sj6);
IkReal x335=((IkReal(1.00000000000000))*(cj0));
IkReal x336=((cj6)*(sj6));
IkReal x337=((r01)*(sj0));
IkReal x338=((r00)*(sj0));
IkReal x339=((r20)*(x334));
IkReal x340=((r21)*(x333));
gconst16=IKsign(((((x337)*(x340)))+(((IkReal(-1.00000000000000))*(r11)*(x335)*(x340)))+(((x338)*(x339)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x335)))+(((IkReal(-1.00000000000000))*(r11)*(r20)*(x335)*(x336)))+(((r20)*(x336)*(x337)))+(((r21)*(x336)*(x338)))+(((IkReal(-1.00000000000000))*(r10)*(r21)*(x335)*(x336)))+(((IkReal(-1.00000000000000))*(r10)*(x335)*(x339)))+(((r02)*(r22)*(sj0)))));
IkReal x341=(cj6)*(cj6);
IkReal x342=(sj6)*(sj6);
IkReal x343=((IkReal(1.00000000000000))*(cj0));
IkReal x344=((cj6)*(sj6));
IkReal x345=((r01)*(sj0));
IkReal x346=((r00)*(sj0));
IkReal x347=((r20)*(x342));
IkReal x348=((r21)*(x341));
dummyeval[0]=((((x345)*(x348)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x343)))+(((r21)*(x344)*(x346)))+(((IkReal(-1.00000000000000))*(r10)*(x343)*(x347)))+(((IkReal(-1.00000000000000))*(r10)*(r21)*(x343)*(x344)))+(((x346)*(x347)))+(((IkReal(-1.00000000000000))*(r11)*(r20)*(x343)*(x344)))+(((IkReal(-1.00000000000000))*(r11)*(x343)*(x348)))+(((r02)*(r22)*(sj0)))+(((r20)*(x344)*(x345))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x349=((cj0)*(sj3));
IkReal x350=((IkReal(0.0549698905825417))*(r12));
IkReal x351=((cj6)*(r01));
IkReal x352=((cj0)*(cj3));
IkReal x353=((cj6)*(r11));
IkReal x354=((IkReal(0.998488012511589))*(sj1));
IkReal x355=((IkReal(0.0549698905825417))*(sj1));
IkReal x356=((cj3)*(sj0));
IkReal x357=((IkReal(0.0549698905825417))*(cj1));
IkReal x358=((r10)*(sj6));
IkReal x359=((IkReal(0.998488012511589))*(cj1));
IkReal x360=((sj0)*(sj3));
IkReal x361=((r00)*(sj6));
IkReal x362=((IkReal(0.998488012511589))*(x358));
IkReal x363=((x354)*(x360));
if( IKabs(((gconst16)*(((((x356)*(x359)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x357)*(x360)))+(((IkReal(-1.00000000000000))*(x361)*(x363)))+(((x349)*(x357)*(x358)))+(((IkReal(-1.00000000000000))*(x357)*(x360)*(x361)))+(((x351)*(x356)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x353)*(x359)))+(((x352)*(x353)*(x355)))+(((IkReal(-1.00000000000000))*(x355)*(x356)*(x361)))+(((x352)*(x355)*(x358)))+(((IkReal(-1.00000000000000))*(x351)*(x355)*(x356)))+(((x349)*(x354)*(x358)))+(((IkReal(-1.00000000000000))*(x352)*(x358)*(x359)))+(((x349)*(x353)*(x357)))+(((x349)*(x353)*(x354)))+(((IkReal(-1.00000000000000))*(x351)*(x363))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r02)*(x357)*(x360)))+(((IkReal(-1.00000000000000))*(r02)*(x363)))+(((sj1)*(x350)*(x352)))+(((cj1)*(x349)*(x350)))+(((IkReal(-1.00000000000000))*(r12)*(x352)*(x359)))+(((r12)*(x349)*(x354)))+(((IkReal(-1.00000000000000))*(r02)*(x355)*(x356)))+(((r02)*(x356)*(x359))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst16)*(((((x356)*(x359)*(x361)))+(((IkReal(-1.00000000000000))*(x351)*(x357)*(x360)))+(((IkReal(-1.00000000000000))*(x361)*(x363)))+(((x349)*(x357)*(x358)))+(((IkReal(-1.00000000000000))*(x357)*(x360)*(x361)))+(((x351)*(x356)*(x359)))+(((IkReal(-1.00000000000000))*(x352)*(x353)*(x359)))+(((x352)*(x353)*(x355)))+(((IkReal(-1.00000000000000))*(x355)*(x356)*(x361)))+(((x352)*(x355)*(x358)))+(((IkReal(-1.00000000000000))*(x351)*(x355)*(x356)))+(((x349)*(x354)*(x358)))+(((IkReal(-1.00000000000000))*(x352)*(x358)*(x359)))+(((x349)*(x353)*(x357)))+(((x349)*(x353)*(x354)))+(((IkReal(-1.00000000000000))*(x351)*(x363)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(r02)*(x357)*(x360)))+(((IkReal(-1.00000000000000))*(r02)*(x363)))+(((sj1)*(x350)*(x352)))+(((cj1)*(x349)*(x350)))+(((IkReal(-1.00000000000000))*(r12)*(x352)*(x359)))+(((r12)*(x349)*(x354)))+(((IkReal(-1.00000000000000))*(r02)*(x355)*(x356)))+(((r02)*(x356)*(x359)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x364=IKsin(j5);
IkReal x365=IKcos(j5);
IkReal x366=((cj3)*(sj1));
IkReal x367=((IkReal(1.00000000000000))*(cj0));
IkReal x368=((IkReal(0.0549698905825417))*(sj3));
IkReal x369=((r01)*(sj0));
IkReal x370=((r00)*(sj0));
IkReal x371=((r11)*(sj0));
IkReal x372=((cj1)*(cj3));
IkReal x373=((r10)*(sj0));
IkReal x374=((IkReal(0.998488012511589))*(sj3));
IkReal x375=((sj1)*(x368));
IkReal x376=((IkReal(0.998488012511589))*(x366));
IkReal x377=((cj1)*(x374));
IkReal x378=((IkReal(0.0549698905825417))*(x372));
IkReal x379=((IkReal(0.0549698905825417))*(x366));
IkReal x380=((cj1)*(x368));
IkReal x381=((sj1)*(x374));
IkReal x382=((IkReal(0.998488012511589))*(x372));
IkReal x383=((sj6)*(x364));
IkReal x384=((r12)*(x365));
IkReal x385=((r02)*(x365));
IkReal x386=((cj6)*(x364));
IkReal x387=((r12)*(x364));
IkReal x388=((sj6)*(x365));
IkReal x389=((r02)*(x364));
IkReal x390=((cj6)*(x365));
IkReal x391=((IkReal(1.00000000000000))*(x390));
IkReal x392=((x378)+(x377)+(x376));
IkReal x393=((x380)+(x381)+(x379));
evalcond[0]=((((IkReal(-1.00000000000000))*(x367)*(x384)))+(((x370)*(x383)))+(((IkReal(-1.00000000000000))*(r10)*(x367)*(x383)))+(((IkReal(-1.00000000000000))*(r11)*(x367)*(x386)))+(((sj0)*(x385)))+(((x369)*(x386))));
evalcond[1]=((((r21)*(x386)))+(x393)+(((r20)*(x383)))+(((IkReal(-1.00000000000000))*(x382)))+(((r22)*(x365))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x367)*(x387)))+(((IkReal(-1.00000000000000))*(x370)*(x388)))+(((cj0)*(r10)*(x388)))+(((cj0)*(r11)*(x390)))+(((IkReal(-1.00000000000000))*(x369)*(x391)))+(((sj0)*(x389))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r21)*(x391)))+(((IkReal(-1.00000000000000))*(x375)))+(x392)+(((IkReal(-1.00000000000000))*(r20)*(x388)))+(((r22)*(x364))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x392)))+(((x373)*(x383)))+(x375)+(((x371)*(x386)))+(((cj0)*(x385)))+(((cj0)*(r01)*(x386)))+(((sj0)*(x384)))+(((cj0)*(r00)*(x383))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x367)*(x388)))+(((IkReal(-1.00000000000000))*(x371)*(x391)))+(x393)+(((cj0)*(x389)))+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(-1.00000000000000))*(r01)*(x367)*(x390)))+(((sj0)*(x387)))+(((IkReal(-1.00000000000000))*(x373)*(x388))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x394=((cj0)*(sj3));
IkReal x395=((IkReal(0.0549698905825417))*(r12));
IkReal x396=((cj6)*(r01));
IkReal x397=((cj0)*(cj3));
IkReal x398=((r00)*(sj6));
IkReal x399=((IkReal(0.0549698905825417))*(cj1));
IkReal x400=((cj6)*(r11));
IkReal x401=((r10)*(sj6));
IkReal x402=((IkReal(0.0549698905825417))*(sj1));
IkReal x403=((IkReal(0.998488012511589))*(cj1));
IkReal x404=((sj0)*(sj3));
IkReal x405=((IkReal(0.998488012511589))*(sj1));
IkReal x406=((cj3)*(sj0));
IkReal x407=((IkReal(0.998488012511589))*(x401));
IkReal x408=((x404)*(x405));
IkReal x409=((x402)*(x406));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(r02)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(sj1)*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(r12)*(x394)*(x405)))+(((IkReal(-1.00000000000000))*(cj1)*(x394)*(x395)))+(((r12)*(x397)*(x403)))+(((r02)*(x399)*(x404)))+(((r02)*(x409)))+(((r02)*(x408))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x397)*(x400)*(x403)))+(((x397)*(x400)*(x402)))+(((IkReal(-1.00000000000000))*(x396)*(x399)*(x404)))+(((x398)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(x397)*(x401)*(x403)))+(((x397)*(x401)*(x402)))+(((IkReal(-1.00000000000000))*(x398)*(x408)))+(((IkReal(-1.00000000000000))*(x398)*(x409)))+(((x394)*(x400)*(x405)))+(((x394)*(x401)*(x405)))+(((x396)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(x396)*(x409)))+(((IkReal(-1.00000000000000))*(x396)*(x408)))+(((x394)*(x399)*(x400)))+(((x394)*(x399)*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x399)*(x404))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(r02)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(sj1)*(x395)*(x397)))+(((IkReal(-1.00000000000000))*(r12)*(x394)*(x405)))+(((IkReal(-1.00000000000000))*(cj1)*(x394)*(x395)))+(((r12)*(x397)*(x403)))+(((r02)*(x399)*(x404)))+(((r02)*(x409)))+(((r02)*(x408)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x397)*(x400)*(x403)))+(((x397)*(x400)*(x402)))+(((IkReal(-1.00000000000000))*(x396)*(x399)*(x404)))+(((x398)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(x397)*(x401)*(x403)))+(((x397)*(x401)*(x402)))+(((IkReal(-1.00000000000000))*(x398)*(x408)))+(((IkReal(-1.00000000000000))*(x398)*(x409)))+(((x394)*(x400)*(x405)))+(((x394)*(x401)*(x405)))+(((x396)*(x403)*(x406)))+(((IkReal(-1.00000000000000))*(x396)*(x409)))+(((IkReal(-1.00000000000000))*(x396)*(x408)))+(((x394)*(x399)*(x400)))+(((x394)*(x399)*(x401)))+(((IkReal(-1.00000000000000))*(x398)*(x399)*(x404)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x410=IKsin(j5);
IkReal x411=IKcos(j5);
IkReal x412=((cj3)*(sj1));
IkReal x413=((IkReal(1.00000000000000))*(cj0));
IkReal x414=((IkReal(0.0549698905825417))*(sj3));
IkReal x415=((r01)*(sj0));
IkReal x416=((r00)*(sj0));
IkReal x417=((r11)*(sj0));
IkReal x418=((cj1)*(cj3));
IkReal x419=((r10)*(sj0));
IkReal x420=((IkReal(0.998488012511589))*(sj3));
IkReal x421=((sj1)*(x414));
IkReal x422=((IkReal(0.998488012511589))*(x412));
IkReal x423=((cj1)*(x420));
IkReal x424=((IkReal(0.0549698905825417))*(x418));
IkReal x425=((IkReal(0.0549698905825417))*(x412));
IkReal x426=((cj1)*(x414));
IkReal x427=((sj1)*(x420));
IkReal x428=((IkReal(0.998488012511589))*(x418));
IkReal x429=((sj6)*(x410));
IkReal x430=((r12)*(x411));
IkReal x431=((r02)*(x411));
IkReal x432=((cj6)*(x410));
IkReal x433=((r12)*(x410));
IkReal x434=((sj6)*(x411));
IkReal x435=((r02)*(x410));
IkReal x436=((cj6)*(x411));
IkReal x437=((IkReal(1.00000000000000))*(x436));
IkReal x438=((x424)+(x423)+(x422));
IkReal x439=((x427)+(x426)+(x425));
evalcond[0]=((((IkReal(-1.00000000000000))*(x413)*(x430)))+(((sj0)*(x431)))+(((IkReal(-1.00000000000000))*(r10)*(x413)*(x429)))+(((IkReal(-1.00000000000000))*(r11)*(x413)*(x432)))+(((x415)*(x432)))+(((x416)*(x429))));
evalcond[1]=((((r20)*(x429)))+(((IkReal(-1.00000000000000))*(x428)))+(((r22)*(x411)))+(((r21)*(x432)))+(x439));
evalcond[2]=((((IkReal(-1.00000000000000))*(x413)*(x433)))+(((sj0)*(x435)))+(((IkReal(-1.00000000000000))*(x416)*(x434)))+(((cj0)*(r10)*(x434)))+(((IkReal(-1.00000000000000))*(x415)*(x437)))+(((cj0)*(r11)*(x436))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x434)))+(((IkReal(-1.00000000000000))*(x421)))+(((r22)*(x410)))+(x438)+(((IkReal(-1.00000000000000))*(r21)*(x437))));
evalcond[4]=((((sj0)*(x430)))+(((IkReal(-1.00000000000000))*(x438)))+(((cj0)*(r01)*(x432)))+(((cj0)*(r00)*(x429)))+(((x419)*(x429)))+(((cj0)*(x431)))+(x421)+(((x417)*(x432))));
evalcond[5]=((((sj0)*(x433)))+(((IkReal(-1.00000000000000))*(x428)))+(((IkReal(-1.00000000000000))*(r01)*(x413)*(x436)))+(((cj0)*(x435)))+(x439)+(((IkReal(-1.00000000000000))*(x419)*(x434)))+(((IkReal(-1.00000000000000))*(x417)*(x437)))+(((IkReal(-1.00000000000000))*(r00)*(x413)*(x434))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x440=((IkReal(1.00000000000000))*(cj6));
IkReal x441=((r00)*(sj0));
IkReal x442=((r11)*(sj6));
IkReal x443=((IkReal(1.00000000000000))*(cj0));
IkReal x444=((r01)*(sj0)*(sj6));
IkReal x445=((cj0)*(cj6)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(x445)+(x444)+(((IkReal(-1.00000000000000))*(x440)*(x441)))+(((IkReal(-1.00000000000000))*(x442)*(x443))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(0.000100000000000000))*(cj6)*(x441)))+(((IkReal(0.000100000000000000))*(cj0)*(x442)))+(((IkReal(-0.000100000000000000))*(x445)))+(((IkReal(-0.000100000000000000))*(x444)))+(((IkReal(-1.00000000000000))*(py)*(x443)))+(((px)*(sj0))));
evalcond[3]=((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x440))));
evalcond[4]=((((sj0)*(x442)))+(((cj0)*(r01)*(sj6)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x440)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x440))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(0.0615696100000000))*((cj1)*(cj1))))+(((IkReal(0.0615696100000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x446=((IkReal(1.00000000000000))*(cj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r12)*(x446)))+(((r02)*(sj0))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj0)*(sj6)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x446)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x446))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x447=IKatan2(((((IkReal(-1.00000000000000))*(r12)*(x446)))+(((r02)*(sj0)))), ((((r00)*(sj0)*(sj6)))+(((cj6)*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x446)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x446)))));
j5array[0]=((IkReal(-1.00000000000000))*(x447));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x447))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x448=IKcos(j5);
IkReal x449=IKsin(j5);
IkReal x450=((IkReal(1.00000000000000))*(sj0));
IkReal x451=((cj6)*(x448));
IkReal x452=((sj6)*(x448));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj0)*(r12)*(x449)))+(((cj0)*(r10)*(x452)))+(((IkReal(-1.00000000000000))*(r00)*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(r01)*(x450)*(x451)))+(((cj0)*(r11)*(x451)))+(((r02)*(sj0)*(x449))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x453=(cj1)*(cj1);
IkReal x454=((r21)*(sj6));
IkReal x455=((IkReal(9.98488012511589e-5))*(cj1));
IkReal x456=((IkReal(0.247179770989156))*(sj1));
IkReal x457=((cj5)*(r22));
IkReal x458=((IkReal(5.49698905825417e-6))*(sj1));
IkReal x459=((cj6)*(r20));
IkReal x460=((IkReal(9.98488012511589e-5))*(sj1));
IkReal x461=((cj1)*(sj1));
IkReal x462=((IkReal(5.49698905825417e-6))*(cj1));
IkReal x463=((IkReal(0.0217202857658142))*(sj1));
IkReal x464=((IkReal(0.998488012511589))*(pz));
IkReal x465=((IkReal(0.0549698905825417))*(pz));
IkReal x466=((IkReal(0.247179770989156))*(cj1));
IkReal x467=((IkReal(0.0217202857658142))*(cj1));
IkReal x468=((r20)*(sj5)*(sj6));
IkReal x469=((cj6)*(r21)*(sj5));
if( IKabs(((gconst18)*(((((x454)*(x455)))+(((IkReal(-1.00000000000000))*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(x463)*(x468)))+(((x466)*(x469)))+(((x466)*(x468)))+(((IkReal(0.155364734746803))*(x453)))+(((IkReal(-1.00000000000000))*(x454)*(x458)))+(((IkReal(-1.00000000000000))*(cj1)*(x464)))+(((IkReal(-1.00000000000000))*(x455)*(x459)))+(((sj1)*(x465)))+(((IkReal(-0.00855331497464349))*(x461)))+(((x458)*(x459)))+(((x457)*(x466)))+(((IkReal(-1.00000000000000))*(x457)*(x463))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((x456)*(x468)))+(((x456)*(x469)))+(((x454)*(x460)))+(((x454)*(x462)))+(((IkReal(-1.00000000000000))*(x459)*(x460)))+(((IkReal(-1.00000000000000))*(x459)*(x462)))+(((IkReal(-1.00000000000000))*(sj1)*(x464)))+(((IkReal(-1.00000000000000))*(cj1)*(x465)))+(((x467)*(x469)))+(((x467)*(x468)))+(((IkReal(0.155364734746803))*(x461)))+(((IkReal(0.00855331497464349))*(x453)))+(((x457)*(x467)))+(((x456)*(x457))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst18)*(((((x454)*(x455)))+(((IkReal(-1.00000000000000))*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(x463)*(x468)))+(((x466)*(x469)))+(((x466)*(x468)))+(((IkReal(0.155364734746803))*(x453)))+(((IkReal(-1.00000000000000))*(x454)*(x458)))+(((IkReal(-1.00000000000000))*(cj1)*(x464)))+(((IkReal(-1.00000000000000))*(x455)*(x459)))+(((sj1)*(x465)))+(((IkReal(-0.00855331497464349))*(x461)))+(((x458)*(x459)))+(((x457)*(x466)))+(((IkReal(-1.00000000000000))*(x457)*(x463)))))), ((gconst18)*(((((x456)*(x468)))+(((x456)*(x469)))+(((x454)*(x460)))+(((x454)*(x462)))+(((IkReal(-1.00000000000000))*(x459)*(x460)))+(((IkReal(-1.00000000000000))*(x459)*(x462)))+(((IkReal(-1.00000000000000))*(sj1)*(x464)))+(((IkReal(-1.00000000000000))*(cj1)*(x465)))+(((x467)*(x469)))+(((x467)*(x468)))+(((IkReal(0.155364734746803))*(x461)))+(((IkReal(0.00855331497464349))*(x453)))+(((x457)*(x467)))+(((x456)*(x457)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x470=IKsin(j3);
IkReal x471=IKcos(j3);
IkReal x472=((sj0)*(sj5));
IkReal x473=((cj6)*(r11));
IkReal x474=((r10)*(sj6));
IkReal x475=((IkReal(1.00000000000000))*(cj5));
IkReal x476=((IkReal(0.000100000000000000))*(cj0));
IkReal x477=((cj0)*(r02));
IkReal x478=((IkReal(0.000100000000000000))*(sj6));
IkReal x479=((r20)*(sj6));
IkReal x480=((cj6)*(r21));
IkReal x481=((IkReal(0.000100000000000000))*(cj6));
IkReal x482=((sj1)*(x471));
IkReal x483=((sj1)*(x470));
IkReal x484=((cj1)*(x470));
IkReal x485=((cj1)*(x471));
IkReal x486=((cj0)*(r00)*(sj6));
IkReal x487=((cj0)*(cj6)*(r01));
IkReal x488=((IkReal(0.0549698905825417))*(x483));
IkReal x489=((IkReal(0.998488012511589))*(x484));
IkReal x490=((IkReal(0.998488012511589))*(x482));
IkReal x491=((IkReal(0.0549698905825417))*(x485));
IkReal x492=((IkReal(0.998488012511589))*(x485));
IkReal x493=((IkReal(0.998488012511589))*(x483));
IkReal x494=((IkReal(0.0549698905825417))*(x484));
IkReal x495=((IkReal(0.0549698905825417))*(x482));
IkReal x496=((x489)+(x490)+(x491));
IkReal x497=((x493)+(x494)+(x495));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x478)))+(((r20)*(x481)))+(((IkReal(0.247179770989156))*(x483)))+(((IkReal(-0.247179770989156))*(x485)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.0217202857658142))*(x482)))+(((IkReal(0.0217202857658142))*(x484)))+(pz));
evalcond[1]=((((sj5)*(x479)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x492)))+(x497)+(((sj5)*(x480))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x496)))+(((IkReal(-1.00000000000000))*(x475)*(x480)))+(((IkReal(-1.00000000000000))*(x475)*(x479)))+(((r22)*(sj5)))+(x488));
evalcond[3]=((((r10)*(sj0)*(x481)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x478)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-0.247179770989156))*(x484)))+(((IkReal(-0.247179770989156))*(x482)))+(((cj6)*(r00)*(x476)))+(((IkReal(0.0217202857658142))*(x483)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-0.0217202857658142))*(x485)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x476))));
evalcond[4]=((((cj5)*(x477)))+(((cj5)*(r12)*(sj0)))+(((x472)*(x474)))+(((x472)*(x473)))+(((IkReal(-1.00000000000000))*(x496)))+(x488)+(((sj5)*(x486)))+(((sj5)*(x487))));
evalcond[5]=((((sj5)*(x477)))+(((IkReal(-1.00000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x475)*(x486)))+(((IkReal(-1.00000000000000))*(x475)*(x487)))+(((IkReal(-1.00000000000000))*(sj0)*(x474)*(x475)))+(x492)+(((r12)*(x472)))+(((IkReal(-1.00000000000000))*(sj0)*(x473)*(x475))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x498=((cj6)*(r21));
IkReal x499=((cj1)*(sj5));
IkReal x500=((IkReal(0.0549698905825417))*(sj1));
IkReal x501=((r22)*(sj5));
IkReal x502=((IkReal(0.998488012511589))*(sj1));
IkReal x503=((r20)*(sj6));
IkReal x504=((cj5)*(r22));
IkReal x505=((IkReal(0.998488012511589))*(cj1));
IkReal x506=((IkReal(0.0549698905825417))*(cj1)*(cj5));
IkReal x507=((sj5)*(x503));
if( IKabs(((gconst19)*(((((IkReal(-0.0549698905825417))*(cj1)*(x504)))+(((cj5)*(x498)*(x500)))+(((IkReal(-1.00000000000000))*(cj5)*(x503)*(x505)))+(((IkReal(0.998488012511589))*(r22)*(x499)))+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.00000000000000))*(x502)*(x507)))+(((IkReal(-0.0549698905825417))*(x499)*(x503)))+(((cj5)*(x500)*(x503)))+(((IkReal(-1.00000000000000))*(sj5)*(x498)*(x502)))+(((IkReal(-0.0549698905825417))*(x498)*(x499)))+(((IkReal(-1.00000000000000))*(cj5)*(x498)*(x505)))+(((IkReal(-1.00000000000000))*(x500)*(x501))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((IkReal(0.0549698905825417))*(r22)*(x499)))+(((IkReal(-1.00000000000000))*(cj5)*(x502)*(x503)))+(((IkReal(0.998488012511589))*(x498)*(x499)))+(((IkReal(-1.00000000000000))*(x503)*(x506)))+(((x501)*(x502)))+(((IkReal(0.998488012511589))*(x499)*(x503)))+(((IkReal(-1.00000000000000))*(sj5)*(x498)*(x500)))+(((x504)*(x505)))+(((IkReal(-1.00000000000000))*(x498)*(x506)))+(((IkReal(-1.00000000000000))*(cj5)*(x498)*(x502)))+(((IkReal(-1.00000000000000))*(x500)*(x507)))+(((IkReal(-1.00000000000000))*(x500)*(x504))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst19)*(((((IkReal(-0.0549698905825417))*(cj1)*(x504)))+(((cj5)*(x498)*(x500)))+(((IkReal(-1.00000000000000))*(cj5)*(x503)*(x505)))+(((IkReal(0.998488012511589))*(r22)*(x499)))+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.00000000000000))*(x502)*(x507)))+(((IkReal(-0.0549698905825417))*(x499)*(x503)))+(((cj5)*(x500)*(x503)))+(((IkReal(-1.00000000000000))*(sj5)*(x498)*(x502)))+(((IkReal(-0.0549698905825417))*(x498)*(x499)))+(((IkReal(-1.00000000000000))*(cj5)*(x498)*(x505)))+(((IkReal(-1.00000000000000))*(x500)*(x501)))))), ((gconst19)*(((((IkReal(0.0549698905825417))*(r22)*(x499)))+(((IkReal(-1.00000000000000))*(cj5)*(x502)*(x503)))+(((IkReal(0.998488012511589))*(x498)*(x499)))+(((IkReal(-1.00000000000000))*(x503)*(x506)))+(((x501)*(x502)))+(((IkReal(0.998488012511589))*(x499)*(x503)))+(((IkReal(-1.00000000000000))*(sj5)*(x498)*(x500)))+(((x504)*(x505)))+(((IkReal(-1.00000000000000))*(x498)*(x506)))+(((IkReal(-1.00000000000000))*(cj5)*(x498)*(x502)))+(((IkReal(-1.00000000000000))*(x500)*(x507)))+(((IkReal(-1.00000000000000))*(x500)*(x504)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x508=IKsin(j3);
IkReal x509=IKcos(j3);
IkReal x510=((sj0)*(sj5));
IkReal x511=((cj6)*(r11));
IkReal x512=((r10)*(sj6));
IkReal x513=((IkReal(1.00000000000000))*(cj5));
IkReal x514=((IkReal(0.000100000000000000))*(cj0));
IkReal x515=((cj0)*(r02));
IkReal x516=((IkReal(0.000100000000000000))*(sj6));
IkReal x517=((r20)*(sj6));
IkReal x518=((cj6)*(r21));
IkReal x519=((IkReal(0.000100000000000000))*(cj6));
IkReal x520=((sj1)*(x509));
IkReal x521=((sj1)*(x508));
IkReal x522=((cj1)*(x508));
IkReal x523=((cj1)*(x509));
IkReal x524=((cj0)*(r00)*(sj6));
IkReal x525=((cj0)*(cj6)*(r01));
IkReal x526=((IkReal(0.0549698905825417))*(x521));
IkReal x527=((IkReal(0.998488012511589))*(x522));
IkReal x528=((IkReal(0.998488012511589))*(x520));
IkReal x529=((IkReal(0.0549698905825417))*(x523));
IkReal x530=((IkReal(0.998488012511589))*(x523));
IkReal x531=((IkReal(0.998488012511589))*(x521));
IkReal x532=((IkReal(0.0549698905825417))*(x522));
IkReal x533=((IkReal(0.0549698905825417))*(x520));
IkReal x534=((x527)+(x528)+(x529));
IkReal x535=((x531)+(x533)+(x532));
evalcond[0]=((((IkReal(0.0217202857658142))*(x520)))+(((IkReal(0.0217202857658142))*(x522)))+(((IkReal(-0.247179770989156))*(x523)))+(((IkReal(-0.155600000000000))*(cj1)))+(((r20)*(x519)))+(((IkReal(0.247179770989156))*(x521)))+(pz)+(((IkReal(-1.00000000000000))*(r21)*(x516))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x530)))+(((sj5)*(x517)))+(((sj5)*(x518)))+(x535));
evalcond[2]=((((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(x513)*(x518)))+(((IkReal(-1.00000000000000))*(x513)*(x517)))+(x526));
evalcond[3]=((((r10)*(sj0)*(x519)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(0.0217202857658142))*(x521)))+(((IkReal(-0.247179770989156))*(x520)))+(((IkReal(-0.247179770989156))*(x522)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x516)))+(((cj6)*(r00)*(x514)))+(((IkReal(-0.0217202857658142))*(x523)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x514))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(((cj5)*(x515)))+(((x510)*(x511)))+(((x510)*(x512)))+(((sj5)*(x525)))+(((sj5)*(x524)))+(((IkReal(-1.00000000000000))*(x534)))+(x526));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj0)*(x511)*(x513)))+(((IkReal(-1.00000000000000))*(x535)))+(((IkReal(-1.00000000000000))*(sj0)*(x512)*(x513)))+(((sj5)*(x515)))+(x530)+(((IkReal(-1.00000000000000))*(x513)*(x524)))+(((IkReal(-1.00000000000000))*(x513)*(x525)))+(((r12)*(x510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x536=(sj1)*(sj1);
IkReal x537=(cj1)*(cj1);
IkReal x538=((IkReal(0.0217202857658142))*(cj1));
IkReal x539=((py)*(sj0));
IkReal x540=((cj0)*(px));
IkReal x541=((IkReal(0.0217202857658142))*(sj1));
IkReal x542=((cj6)*(r10));
IkReal x543=((cj0)*(r01));
IkReal x544=((r11)*(sj6));
IkReal x545=((IkReal(2.17202857658142e-6))*(sj1));
IkReal x546=((IkReal(2.47179770989156e-5))*(cj1));
IkReal x547=((IkReal(2.17202857658142e-6))*(cj1));
IkReal x548=((cj6)*(r20));
IkReal x549=((r21)*(sj6));
IkReal x550=((IkReal(2.47179770989156e-5))*(sj1));
IkReal x551=((IkReal(0.247179770989156))*(cj1));
IkReal x552=((IkReal(0.247179770989156))*(sj1));
IkReal x553=((sj6)*(x550));
IkReal x554=((sj0)*(x546));
IkReal x555=((cj0)*(cj6)*(r00));
if( IKabs(((gconst17)*(((((IkReal(0.00337967646516069))*(x536)))+(((IkReal(0.00337967646516069))*(x537)))+(((x542)*(x554)))+(((IkReal(-1.00000000000000))*(x545)*(x555)))+(((IkReal(-1.00000000000000))*(x539)*(x541)))+(((x547)*(x549)))+(((IkReal(-1.00000000000000))*(x544)*(x554)))+(((IkReal(-1.00000000000000))*(x540)*(x541)))+(((x540)*(x551)))+(((IkReal(-1.00000000000000))*(x548)*(x550)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((IkReal(-1.00000000000000))*(sj0)*(x542)*(x545)))+(((IkReal(-1.00000000000000))*(pz)*(x538)))+(((x549)*(x550)))+(((sj6)*(x543)*(x545)))+(((IkReal(-1.00000000000000))*(sj6)*(x543)*(x546)))+(((x539)*(x551)))+(((sj0)*(x544)*(x545)))+(((x546)*(x555)))+(((IkReal(-1.00000000000000))*(pz)*(x552))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-0.0384611723659126))*(x537)))+(((IkReal(-0.0384611723659126))*(x536)))+(((pz)*(x551)))+(((IkReal(-1.00000000000000))*(x545)*(x548)))+(((x540)*(x552)))+(((x547)*(x555)))+(((IkReal(-1.00000000000000))*(pz)*(x541)))+(((x550)*(x555)))+(((IkReal(-1.00000000000000))*(x543)*(x553)))+(((IkReal(-1.00000000000000))*(sj0)*(x544)*(x550)))+(((sj0)*(x542)*(x547)))+(((IkReal(-1.00000000000000))*(sj6)*(x543)*(x547)))+(((x539)*(x552)))+(((x538)*(x540)))+(((x538)*(x539)))+(((x545)*(x549)))+(((IkReal(-1.00000000000000))*(x546)*(x549)))+(((sj0)*(x542)*(x550)))+(((IkReal(-1.00000000000000))*(sj0)*(x544)*(x547)))+(((x546)*(x548))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((IkReal(0.00337967646516069))*(x536)))+(((IkReal(0.00337967646516069))*(x537)))+(((x542)*(x554)))+(((IkReal(-1.00000000000000))*(x545)*(x555)))+(((IkReal(-1.00000000000000))*(x539)*(x541)))+(((x547)*(x549)))+(((IkReal(-1.00000000000000))*(x544)*(x554)))+(((IkReal(-1.00000000000000))*(x540)*(x541)))+(((x540)*(x551)))+(((IkReal(-1.00000000000000))*(x548)*(x550)))+(((IkReal(-1.00000000000000))*(x547)*(x548)))+(((IkReal(-1.00000000000000))*(sj0)*(x542)*(x545)))+(((IkReal(-1.00000000000000))*(pz)*(x538)))+(((x549)*(x550)))+(((sj6)*(x543)*(x545)))+(((IkReal(-1.00000000000000))*(sj6)*(x543)*(x546)))+(((x539)*(x551)))+(((sj0)*(x544)*(x545)))+(((x546)*(x555)))+(((IkReal(-1.00000000000000))*(pz)*(x552)))))), ((gconst17)*(((((IkReal(-0.0384611723659126))*(x537)))+(((IkReal(-0.0384611723659126))*(x536)))+(((pz)*(x551)))+(((IkReal(-1.00000000000000))*(x545)*(x548)))+(((x540)*(x552)))+(((x547)*(x555)))+(((IkReal(-1.00000000000000))*(pz)*(x541)))+(((x550)*(x555)))+(((IkReal(-1.00000000000000))*(x543)*(x553)))+(((IkReal(-1.00000000000000))*(sj0)*(x544)*(x550)))+(((sj0)*(x542)*(x547)))+(((IkReal(-1.00000000000000))*(sj6)*(x543)*(x547)))+(((x539)*(x552)))+(((x538)*(x540)))+(((x538)*(x539)))+(((x545)*(x549)))+(((IkReal(-1.00000000000000))*(x546)*(x549)))+(((sj0)*(x542)*(x550)))+(((IkReal(-1.00000000000000))*(sj0)*(x544)*(x547)))+(((x546)*(x548)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x556=IKsin(j3);
IkReal x557=IKcos(j3);
IkReal x558=((IkReal(0.000100000000000000))*(sj6));
IkReal x559=((IkReal(0.000100000000000000))*(cj6));
IkReal x560=((IkReal(0.247179770989156))*(x556));
IkReal x561=((IkReal(0.0217202857658142))*(x557));
IkReal x562=((IkReal(0.0217202857658142))*(x556));
IkReal x563=((IkReal(0.247179770989156))*(x557));
evalcond[0]=((((cj1)*(x562)))+(((IkReal(-1.00000000000000))*(r21)*(x558)))+(((r20)*(x559)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x563)))+(pz)+(((sj1)*(x561)))+(((sj1)*(x560))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(sj0)*(x558)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x558)))+(((IkReal(-1.00000000000000))*(cj1)*(x561)))+(((IkReal(-1.00000000000000))*(cj1)*(x560)))+(((sj1)*(x562)))+(((cj0)*(r00)*(x559)))+(((IkReal(-1.00000000000000))*(sj1)*(x563)))+(((cj0)*(px)))+(((py)*(sj0)))+(((r10)*(sj0)*(x559))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
IkReal x564=((r20)*(sj6));
IkReal x565=((cj0)*(r12));
IkReal x566=((r22)*(sj0));
IkReal x567=((cj6)*(r21));
IkReal x568=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x569=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst20=IKsign(((((IkReal(-1.00000000000000))*(x564)*(x569)))+(((x565)*(x567)))+(((x564)*(x565)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x568)))+(((r00)*(sj6)*(x566)))+(((IkReal(-1.00000000000000))*(x567)*(x569)))+(((cj6)*(r01)*(x566)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x568)))));
IkReal x570=((r20)*(sj6));
IkReal x571=((cj0)*(r12));
IkReal x572=((r22)*(sj0));
IkReal x573=((cj6)*(r21));
IkReal x574=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x575=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((r00)*(sj6)*(x572)))+(((x571)*(x573)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x574)))+(((IkReal(-1.00000000000000))*(x573)*(x575)))+(((IkReal(-1.00000000000000))*(x570)*(x575)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x574)))+(((cj6)*(r01)*(x572)))+(((x570)*(x571))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst21;
IkReal x576=(cj6)*(cj6);
IkReal x577=(sj6)*(sj6);
IkReal x578=((IkReal(1.00000000000000))*(cj0));
IkReal x579=((cj6)*(sj6));
IkReal x580=((r01)*(sj0));
IkReal x581=((r00)*(sj0));
IkReal x582=((r20)*(x577));
IkReal x583=((r21)*(x576));
gconst21=IKsign(((((x581)*(x582)))+(((x580)*(x583)))+(((r20)*(x579)*(x580)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x578)))+(((r21)*(x579)*(x581)))+(((IkReal(-1.00000000000000))*(r10)*(r21)*(x578)*(x579)))+(((IkReal(-1.00000000000000))*(r11)*(x578)*(x583)))+(((IkReal(-1.00000000000000))*(r11)*(r20)*(x578)*(x579)))+(((IkReal(-1.00000000000000))*(r10)*(x578)*(x582)))+(((r02)*(r22)*(sj0)))));
IkReal x584=(cj6)*(cj6);
IkReal x585=(sj6)*(sj6);
IkReal x586=((IkReal(1.00000000000000))*(cj0));
IkReal x587=((cj6)*(sj6));
IkReal x588=((r01)*(sj0));
IkReal x589=((r00)*(sj0));
IkReal x590=((r20)*(x585));
IkReal x591=((r21)*(x584));
dummyeval[0]=((((r20)*(x587)*(x588)))+(((IkReal(-1.00000000000000))*(r11)*(r20)*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(r10)*(x586)*(x590)))+(((IkReal(-1.00000000000000))*(r10)*(r21)*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(r12)*(r22)*(x586)))+(((IkReal(-1.00000000000000))*(r11)*(x586)*(x591)))+(((x589)*(x590)))+(((x588)*(x591)))+(((r02)*(r22)*(sj0)))+(((r21)*(x587)*(x589))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x592=((cj0)*(sj3));
IkReal x593=((IkReal(0.0549698905825417))*(cj1));
IkReal x594=((cj6)*(r01));
IkReal x595=((cj0)*(cj3));
IkReal x596=((r10)*(sj6));
IkReal x597=((cj6)*(r11));
IkReal x598=((IkReal(0.998488012511589))*(sj1));
IkReal x599=((IkReal(0.0549698905825417))*(sj1));
IkReal x600=((cj3)*(sj0));
IkReal x601=((IkReal(0.998488012511589))*(cj1));
IkReal x602=((r00)*(sj6));
IkReal x603=((sj0)*(sj3));
IkReal x604=((IkReal(0.998488012511589))*(x596));
IkReal x605=((x598)*(x603));
if( IKabs(((gconst21)*(((((x595)*(x596)*(x599)))+(((x600)*(x601)*(x602)))+(((IkReal(-1.00000000000000))*(x602)*(x605)))+(((x592)*(x597)*(x598)))+(((IkReal(-1.00000000000000))*(x595)*(x596)*(x601)))+(((IkReal(-1.00000000000000))*(x594)*(x599)*(x600)))+(((IkReal(-1.00000000000000))*(x599)*(x600)*(x602)))+(((IkReal(-1.00000000000000))*(x595)*(x597)*(x601)))+(((x592)*(x596)*(x598)))+(((IkReal(-1.00000000000000))*(x593)*(x602)*(x603)))+(((x595)*(x597)*(x599)))+(((IkReal(-1.00000000000000))*(x593)*(x594)*(x603)))+(((x592)*(x593)*(x597)))+(((x592)*(x593)*(x596)))+(((x594)*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(x594)*(x605))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(r02)*(x599)*(x600)))+(((r12)*(x592)*(x593)))+(((r12)*(x592)*(x598)))+(((r12)*(x595)*(x599)))+(((r02)*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(r12)*(x595)*(x601)))+(((IkReal(-1.00000000000000))*(r02)*(x605)))+(((IkReal(-1.00000000000000))*(r02)*(x593)*(x603))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst21)*(((((x595)*(x596)*(x599)))+(((x600)*(x601)*(x602)))+(((IkReal(-1.00000000000000))*(x602)*(x605)))+(((x592)*(x597)*(x598)))+(((IkReal(-1.00000000000000))*(x595)*(x596)*(x601)))+(((IkReal(-1.00000000000000))*(x594)*(x599)*(x600)))+(((IkReal(-1.00000000000000))*(x599)*(x600)*(x602)))+(((IkReal(-1.00000000000000))*(x595)*(x597)*(x601)))+(((x592)*(x596)*(x598)))+(((IkReal(-1.00000000000000))*(x593)*(x602)*(x603)))+(((x595)*(x597)*(x599)))+(((IkReal(-1.00000000000000))*(x593)*(x594)*(x603)))+(((x592)*(x593)*(x597)))+(((x592)*(x593)*(x596)))+(((x594)*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(x594)*(x605)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(r02)*(x599)*(x600)))+(((r12)*(x592)*(x593)))+(((r12)*(x592)*(x598)))+(((r12)*(x595)*(x599)))+(((r02)*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(r12)*(x595)*(x601)))+(((IkReal(-1.00000000000000))*(r02)*(x605)))+(((IkReal(-1.00000000000000))*(r02)*(x593)*(x603)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x606=IKsin(j5);
IkReal x607=IKcos(j5);
IkReal x608=((IkReal(0.0549698905825417))*(cj3));
IkReal x609=((IkReal(1.00000000000000))*(cj0));
IkReal x610=((cj1)*(sj3));
IkReal x611=((r01)*(sj0));
IkReal x612=((r00)*(sj0));
IkReal x613=((r11)*(sj0));
IkReal x614=((sj1)*(sj3));
IkReal x615=((r10)*(sj0));
IkReal x616=((IkReal(0.998488012511589))*(cj3));
IkReal x617=((IkReal(0.0549698905825417))*(x614));
IkReal x618=((sj1)*(x616));
IkReal x619=((IkReal(0.998488012511589))*(x610));
IkReal x620=((cj1)*(x608));
IkReal x621=((cj1)*(x616));
IkReal x622=((sj1)*(x608));
IkReal x623=((IkReal(0.0549698905825417))*(x610));
IkReal x624=((IkReal(0.998488012511589))*(x614));
IkReal x625=((sj6)*(x606));
IkReal x626=((r12)*(x607));
IkReal x627=((r02)*(x607));
IkReal x628=((cj6)*(x606));
IkReal x629=((r12)*(x606));
IkReal x630=((sj6)*(x607));
IkReal x631=((r02)*(x606));
IkReal x632=((cj6)*(x607));
IkReal x633=((IkReal(1.00000000000000))*(x632));
IkReal x634=((x618)+(x619)+(x620));
IkReal x635=((x624)+(x623)+(x622));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x609)*(x625)))+(((x612)*(x625)))+(((sj0)*(x627)))+(((x611)*(x628)))+(((IkReal(-1.00000000000000))*(x609)*(x626)))+(((IkReal(-1.00000000000000))*(r11)*(x609)*(x628))));
evalcond[1]=((((r21)*(x628)))+(((IkReal(-1.00000000000000))*(x621)))+(x635)+(((r20)*(x625)))+(((r22)*(x607))));
evalcond[2]=((((cj0)*(r10)*(x630)))+(((IkReal(-1.00000000000000))*(x611)*(x633)))+(((cj0)*(r11)*(x632)))+(((sj0)*(x631)))+(((IkReal(-1.00000000000000))*(x612)*(x630)))+(((IkReal(-1.00000000000000))*(x609)*(x629))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x634)))+(((IkReal(-1.00000000000000))*(r21)*(x633)))+(x617)+(((IkReal(-1.00000000000000))*(r20)*(x630)))+(((r22)*(x606))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x634)))+(((x613)*(x628)))+(((cj0)*(x627)))+(((sj0)*(x626)))+(x617)+(((cj0)*(r00)*(x625)))+(((cj0)*(r01)*(x628)))+(((x615)*(x625))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x635)))+(((IkReal(-1.00000000000000))*(r00)*(x609)*(x630)))+(((cj0)*(x631)))+(((sj0)*(x629)))+(((IkReal(-1.00000000000000))*(x615)*(x630)))+(x621)+(((IkReal(-1.00000000000000))*(r01)*(x609)*(x632)))+(((IkReal(-1.00000000000000))*(x613)*(x633))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x636=((cj0)*(sj3));
IkReal x637=((IkReal(0.0549698905825417))*(r12));
IkReal x638=((cj6)*(r01));
IkReal x639=((cj0)*(cj3));
IkReal x640=((r00)*(sj6));
IkReal x641=((IkReal(0.0549698905825417))*(cj1));
IkReal x642=((cj6)*(r11));
IkReal x643=((r10)*(sj6));
IkReal x644=((IkReal(0.0549698905825417))*(sj1));
IkReal x645=((IkReal(0.998488012511589))*(cj1));
IkReal x646=((sj0)*(sj3));
IkReal x647=((IkReal(0.998488012511589))*(sj1));
IkReal x648=((cj3)*(sj0));
IkReal x649=((IkReal(0.998488012511589))*(x643));
IkReal x650=((x646)*(x647));
IkReal x651=((x644)*(x648));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(r02)*(x645)*(x648)))+(((IkReal(-1.00000000000000))*(cj1)*(x636)*(x637)))+(((IkReal(-1.00000000000000))*(sj1)*(x637)*(x639)))+(((IkReal(-1.00000000000000))*(r12)*(x636)*(x647)))+(((r02)*(x650)))+(((r02)*(x651)))+(((r12)*(x639)*(x645)))+(((r02)*(x641)*(x646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((x636)*(x643)*(x647)))+(((IkReal(-1.00000000000000))*(x639)*(x643)*(x645)))+(((x640)*(x645)*(x648)))+(((IkReal(-1.00000000000000))*(x640)*(x650)))+(((IkReal(-1.00000000000000))*(x640)*(x651)))+(((IkReal(-1.00000000000000))*(x639)*(x642)*(x645)))+(((x636)*(x642)*(x647)))+(((x636)*(x641)*(x642)))+(((x636)*(x641)*(x643)))+(((IkReal(-1.00000000000000))*(x638)*(x641)*(x646)))+(((IkReal(-1.00000000000000))*(x640)*(x641)*(x646)))+(((x639)*(x643)*(x644)))+(((IkReal(-1.00000000000000))*(x638)*(x650)))+(((IkReal(-1.00000000000000))*(x638)*(x651)))+(((x639)*(x642)*(x644)))+(((x638)*(x645)*(x648))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(r02)*(x645)*(x648)))+(((IkReal(-1.00000000000000))*(cj1)*(x636)*(x637)))+(((IkReal(-1.00000000000000))*(sj1)*(x637)*(x639)))+(((IkReal(-1.00000000000000))*(r12)*(x636)*(x647)))+(((r02)*(x650)))+(((r02)*(x651)))+(((r12)*(x639)*(x645)))+(((r02)*(x641)*(x646)))))), ((gconst20)*(((((x636)*(x643)*(x647)))+(((IkReal(-1.00000000000000))*(x639)*(x643)*(x645)))+(((x640)*(x645)*(x648)))+(((IkReal(-1.00000000000000))*(x640)*(x650)))+(((IkReal(-1.00000000000000))*(x640)*(x651)))+(((IkReal(-1.00000000000000))*(x639)*(x642)*(x645)))+(((x636)*(x642)*(x647)))+(((x636)*(x641)*(x642)))+(((x636)*(x641)*(x643)))+(((IkReal(-1.00000000000000))*(x638)*(x641)*(x646)))+(((IkReal(-1.00000000000000))*(x640)*(x641)*(x646)))+(((x639)*(x643)*(x644)))+(((IkReal(-1.00000000000000))*(x638)*(x650)))+(((IkReal(-1.00000000000000))*(x638)*(x651)))+(((x639)*(x642)*(x644)))+(((x638)*(x645)*(x648)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x652=IKsin(j5);
IkReal x653=IKcos(j5);
IkReal x654=((IkReal(0.0549698905825417))*(cj3));
IkReal x655=((IkReal(1.00000000000000))*(cj0));
IkReal x656=((cj1)*(sj3));
IkReal x657=((r01)*(sj0));
IkReal x658=((r00)*(sj0));
IkReal x659=((r11)*(sj0));
IkReal x660=((sj1)*(sj3));
IkReal x661=((r10)*(sj0));
IkReal x662=((IkReal(0.998488012511589))*(cj3));
IkReal x663=((IkReal(0.0549698905825417))*(x660));
IkReal x664=((sj1)*(x662));
IkReal x665=((IkReal(0.998488012511589))*(x656));
IkReal x666=((cj1)*(x654));
IkReal x667=((cj1)*(x662));
IkReal x668=((sj1)*(x654));
IkReal x669=((IkReal(0.0549698905825417))*(x656));
IkReal x670=((IkReal(0.998488012511589))*(x660));
IkReal x671=((sj6)*(x652));
IkReal x672=((r12)*(x653));
IkReal x673=((r02)*(x653));
IkReal x674=((cj6)*(x652));
IkReal x675=((r12)*(x652));
IkReal x676=((sj6)*(x653));
IkReal x677=((r02)*(x652));
IkReal x678=((cj6)*(x653));
IkReal x679=((IkReal(1.00000000000000))*(x678));
IkReal x680=((x665)+(x664)+(x666));
IkReal x681=((x669)+(x668)+(x670));
evalcond[0]=((((x658)*(x671)))+(((IkReal(-1.00000000000000))*(r10)*(x655)*(x671)))+(((IkReal(-1.00000000000000))*(r11)*(x655)*(x674)))+(((sj0)*(x673)))+(((x657)*(x674)))+(((IkReal(-1.00000000000000))*(x655)*(x672))));
evalcond[1]=((((r21)*(x674)))+(((r22)*(x653)))+(((r20)*(x671)))+(((IkReal(-1.00000000000000))*(x667)))+(x681));
evalcond[2]=((((IkReal(-1.00000000000000))*(x657)*(x679)))+(((IkReal(-1.00000000000000))*(x658)*(x676)))+(((cj0)*(r11)*(x678)))+(((sj0)*(x677)))+(((IkReal(-1.00000000000000))*(x655)*(x675)))+(((cj0)*(r10)*(x676))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x676)))+(((IkReal(-1.00000000000000))*(r21)*(x679)))+(((IkReal(-1.00000000000000))*(x680)))+(((r22)*(x652)))+(x663));
evalcond[4]=((((x661)*(x671)))+(((cj0)*(x673)))+(((IkReal(-1.00000000000000))*(x680)))+(((x659)*(x674)))+(x663)+(((sj0)*(x672)))+(((cj0)*(r00)*(x671)))+(((cj0)*(r01)*(x674))));
evalcond[5]=((((cj0)*(x677)))+(((IkReal(-1.00000000000000))*(x681)))+(((IkReal(-1.00000000000000))*(x659)*(x679)))+(((IkReal(-1.00000000000000))*(r01)*(x655)*(x678)))+(x667)+(((IkReal(-1.00000000000000))*(r00)*(x655)*(x676)))+(((sj0)*(x675)))+(((IkReal(-1.00000000000000))*(x661)*(x676))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x682=((cj0)*(sj4));
IkReal x683=((IkReal(0.0549698905825417))*(cj1));
IkReal x684=((r01)*(sj6));
IkReal x685=((IkReal(0.998488012511589))*(cj6));
IkReal x686=((r00)*(sj1));
IkReal x687=((r20)*(sj4));
IkReal x688=((cj1)*(sj4));
IkReal x689=((r10)*(sj0));
IkReal x690=((sj1)*(sj4));
IkReal x691=((r21)*(sj6));
IkReal x692=((IkReal(0.0549698905825417))*(sj1));
IkReal x693=((IkReal(0.0549698905825417))*(cj6));
IkReal x694=((IkReal(0.998488012511589))*(x691));
IkReal x695=((r11)*(sj0)*(sj6));
IkReal x696=((IkReal(0.998488012511589))*(x695));
if( IKabs(((gconst2)*(((((IkReal(-0.998488012511589))*(sj1)*(x682)*(x684)))+(((IkReal(-1.00000000000000))*(sj4)*(x683)*(x695)))+(((IkReal(-1.00000000000000))*(cj6)*(x687)*(x692)))+(((x682)*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(x682)*(x683)*(x684)))+(((IkReal(0.0549698905825417))*(x690)*(x691)))+(((cj6)*(r00)*(x682)*(x683)))+(((x685)*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(x688)*(x694)))+(((IkReal(-1.00000000000000))*(x690)*(x696)))+(((cj1)*(x685)*(x687)))+(((cj6)*(sj4)*(x683)*(x689))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(sj4)*(x683)*(x691)))+(((IkReal(0.998488012511589))*(cj1)*(x682)*(x684)))+(((cj6)*(x683)*(x687)))+(((x688)*(x696)))+(((IkReal(-1.00000000000000))*(x682)*(x684)*(x692)))+(((x682)*(x686)*(x693)))+(((IkReal(-1.00000000000000))*(x685)*(x688)*(x689)))+(((x689)*(x690)*(x693)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x682)*(x685)))+(((sj1)*(x685)*(x687)))+(((IkReal(-1.00000000000000))*(x690)*(x694)))+(((IkReal(-0.0549698905825417))*(x690)*(x695))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-0.998488012511589))*(sj1)*(x682)*(x684)))+(((IkReal(-1.00000000000000))*(sj4)*(x683)*(x695)))+(((IkReal(-1.00000000000000))*(cj6)*(x687)*(x692)))+(((x682)*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(x682)*(x683)*(x684)))+(((IkReal(0.0549698905825417))*(x690)*(x691)))+(((cj6)*(r00)*(x682)*(x683)))+(((x685)*(x689)*(x690)))+(((IkReal(-1.00000000000000))*(x688)*(x694)))+(((IkReal(-1.00000000000000))*(x690)*(x696)))+(((cj1)*(x685)*(x687)))+(((cj6)*(sj4)*(x683)*(x689)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(sj4)*(x683)*(x691)))+(((IkReal(0.998488012511589))*(cj1)*(x682)*(x684)))+(((cj6)*(x683)*(x687)))+(((x688)*(x696)))+(((IkReal(-1.00000000000000))*(x682)*(x684)*(x692)))+(((x682)*(x686)*(x693)))+(((IkReal(-1.00000000000000))*(x685)*(x688)*(x689)))+(((x689)*(x690)*(x693)))+(((IkReal(-1.00000000000000))*(cj1)*(r00)*(x682)*(x685)))+(((sj1)*(x685)*(x687)))+(((IkReal(-1.00000000000000))*(x690)*(x694)))+(((IkReal(-0.0549698905825417))*(x690)*(x695)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x697=IKsin(j3);
IkReal x698=IKcos(j3);
IkReal x699=((IkReal(0.000100000000000000))*(cj0));
IkReal x700=((cj6)*(r00));
IkReal x701=((r01)*(sj6));
IkReal x702=((IkReal(0.998488012511589))*(sj4));
IkReal x703=((r21)*(sj6));
IkReal x704=((IkReal(1.00000000000000))*(cj6));
IkReal x705=((r10)*(sj0));
IkReal x706=((IkReal(0.0549698905825417))*(sj4));
IkReal x707=((IkReal(0.000100000000000000))*(cj6));
IkReal x708=((IkReal(0.247179770989156))*(x697));
IkReal x709=((r11)*(sj0)*(sj6));
IkReal x710=((cj1)*(x697));
IkReal x711=((cj1)*(x698));
IkReal x712=((sj1)*(x698));
IkReal x713=((sj1)*(x697));
evalcond[0]=((((IkReal(-0.000100000000000000))*(x703)))+(((IkReal(0.0217202857658142))*(x712)))+(((IkReal(0.0217202857658142))*(x710)))+(((IkReal(-0.155600000000000))*(cj1)))+(((r20)*(x707)))+(((IkReal(-0.247179770989156))*(x711)))+(pz)+(((sj1)*(x708))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x706)*(x713)))+(((x702)*(x712)))+(((x702)*(x710)))+(((x706)*(x711)))+(((IkReal(-1.00000000000000))*(r20)*(x704)))+(x703));
evalcond[2]=((((x702)*(x713)))+(((IkReal(-1.00000000000000))*(x702)*(x711)))+(((x706)*(x710)))+(((x706)*(x712)))+(((cj0)*(x701)))+(((IkReal(-1.00000000000000))*(cj0)*(x700)))+(((IkReal(-1.00000000000000))*(x704)*(x705)))+(x709));
evalcond[3]=((((IkReal(-0.0217202857658142))*(x711)))+(((IkReal(-0.000100000000000000))*(x709)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(0.0217202857658142))*(x713)))+(((IkReal(-1.00000000000000))*(cj1)*(x708)))+(((IkReal(-0.247179770989156))*(x712)))+(((IkReal(-1.00000000000000))*(x699)*(x701)))+(((cj0)*(px)))+(((py)*(sj0)))+(((x705)*(x707)))+(((x699)*(x700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x714=(cj6)*(cj6);
IkReal x715=(cj0)*(cj0);
IkReal x716=(sj0)*(sj0);
IkReal x717=(sj6)*(sj6);
IkReal x718=((IkReal(2.00000000000000))*(r11));
IkReal x719=((cj0)*(sj0));
IkReal x720=((cj6)*(sj6));
IkReal x721=((IkReal(2.00000000000000))*(r01));
IkReal x722=((IkReal(1.00000000000000))*(x715));
IkReal x723=((IkReal(1.00000000000000))*(x716));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(r00)*(x716)*(x720)*(x721)))+(((IkReal(-1.00000000000000))*(x714)*(x723)*((r01)*(r01))))+(((r01)*(x714)*(x718)*(x719)))+(((IkReal(-1.00000000000000))*(r10)*(x715)*(x718)*(x720)))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x717)*(x719)))+(((IkReal(-1.00000000000000))*(x717)*(x722)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x714)*(x722)*((r11)*(r11))))+(((r00)*(x718)*(x719)*(x720)))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x719)))+(((IkReal(-1.00000000000000))*(x722)*((r12)*(r12))))+(((r10)*(x719)*(x720)*(x721)))+(((IkReal(-1.00000000000000))*(x717)*(x723)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x723)*((r02)*(r02))))));
IkReal x724=(cj6)*(cj6);
IkReal x725=(cj0)*(cj0);
IkReal x726=(sj0)*(sj0);
IkReal x727=(sj6)*(sj6);
IkReal x728=((IkReal(2.00000000000000))*(r11));
IkReal x729=((cj0)*(sj0));
IkReal x730=((cj6)*(sj6));
IkReal x731=((IkReal(2.00000000000000))*(r01));
IkReal x732=((IkReal(1.00000000000000))*(x725));
IkReal x733=((IkReal(1.00000000000000))*(x726));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x727)*(x733)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x733)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x732)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(r10)*(x725)*(x728)*(x730)))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x727)*(x729)))+(((IkReal(-1.00000000000000))*(x724)*(x733)*((r01)*(r01))))+(((r01)*(x724)*(x728)*(x729)))+(((IkReal(-1.00000000000000))*(x727)*(x732)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x724)*(x732)*((r11)*(r11))))+(((r10)*(x729)*(x730)*(x731)))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x729)))+(((IkReal(-1.00000000000000))*(r00)*(x726)*(x730)*(x731)))+(((r00)*(x728)*(x729)*(x730))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x734=((r20)*(sj6));
IkReal x735=((cj0)*(r12));
IkReal x736=((r22)*(sj0));
IkReal x737=((cj6)*(r21));
IkReal x738=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x739=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst5=IKsign(((((cj6)*(r01)*(x736)))+(((x735)*(x737)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(x734)*(x739)))+(((IkReal(-1.00000000000000))*(x737)*(x739)))+(((r00)*(sj6)*(x736)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x738)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x738)))));
IkReal x740=((r20)*(sj6));
IkReal x741=((cj0)*(r12));
IkReal x742=((r22)*(sj0));
IkReal x743=((cj6)*(r21));
IkReal x744=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x745=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((r00)*(sj6)*(x742)))+(((cj6)*(r01)*(x742)))+(((x740)*(x741)))+(((x741)*(x743)))+(((IkReal(-1.00000000000000))*(x740)*(x745)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x744)))+(((IkReal(-1.00000000000000))*(x743)*(x745)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x744))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x746=((cj0)*(sj3));
IkReal x747=((IkReal(0.0549698905825417))*(r12));
IkReal x748=((cj6)*(r01));
IkReal x749=((cj0)*(cj3));
IkReal x750=((r00)*(sj6));
IkReal x751=((IkReal(0.0549698905825417))*(cj1));
IkReal x752=((cj6)*(r11));
IkReal x753=((r10)*(sj6));
IkReal x754=((IkReal(0.0549698905825417))*(sj1));
IkReal x755=((IkReal(0.998488012511589))*(cj1));
IkReal x756=((sj0)*(sj3));
IkReal x757=((IkReal(0.998488012511589))*(sj1));
IkReal x758=((cj3)*(sj0));
IkReal x759=((IkReal(0.998488012511589))*(x753));
IkReal x760=((x756)*(x757));
IkReal x761=((x754)*(x758));
if( IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(r12)*(x746)*(x757)))+(((r12)*(x749)*(x755)))+(((IkReal(-1.00000000000000))*(sj1)*(x747)*(x749)))+(((IkReal(-1.00000000000000))*(cj1)*(x746)*(x747)))+(((r02)*(x751)*(x756)))+(((r02)*(x760)))+(((r02)*(x761)))+(((IkReal(-1.00000000000000))*(r02)*(x755)*(x758))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x746)*(x753)*(x757)))+(((IkReal(-1.00000000000000))*(x749)*(x752)*(x755)))+(((x746)*(x751)*(x752)))+(((x746)*(x751)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x761)))+(((IkReal(-1.00000000000000))*(x750)*(x760)))+(((x748)*(x755)*(x758)))+(((IkReal(-1.00000000000000))*(x749)*(x753)*(x755)))+(((x750)*(x755)*(x758)))+(((x746)*(x752)*(x757)))+(((x749)*(x753)*(x754)))+(((IkReal(-1.00000000000000))*(x750)*(x751)*(x756)))+(((x749)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(x748)*(x761)))+(((IkReal(-1.00000000000000))*(x748)*(x760)))+(((IkReal(-1.00000000000000))*(x748)*(x751)*(x756))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(((((IkReal(-1.00000000000000))*(r12)*(x746)*(x757)))+(((r12)*(x749)*(x755)))+(((IkReal(-1.00000000000000))*(sj1)*(x747)*(x749)))+(((IkReal(-1.00000000000000))*(cj1)*(x746)*(x747)))+(((r02)*(x751)*(x756)))+(((r02)*(x760)))+(((r02)*(x761)))+(((IkReal(-1.00000000000000))*(r02)*(x755)*(x758)))))), ((gconst5)*(((((x746)*(x753)*(x757)))+(((IkReal(-1.00000000000000))*(x749)*(x752)*(x755)))+(((x746)*(x751)*(x752)))+(((x746)*(x751)*(x753)))+(((IkReal(-1.00000000000000))*(x750)*(x761)))+(((IkReal(-1.00000000000000))*(x750)*(x760)))+(((x748)*(x755)*(x758)))+(((IkReal(-1.00000000000000))*(x749)*(x753)*(x755)))+(((x750)*(x755)*(x758)))+(((x746)*(x752)*(x757)))+(((x749)*(x753)*(x754)))+(((IkReal(-1.00000000000000))*(x750)*(x751)*(x756)))+(((x749)*(x752)*(x754)))+(((IkReal(-1.00000000000000))*(x748)*(x761)))+(((IkReal(-1.00000000000000))*(x748)*(x760)))+(((IkReal(-1.00000000000000))*(x748)*(x751)*(x756)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x762=IKsin(j5);
IkReal x763=IKcos(j5);
IkReal x764=((cj3)*(sj1));
IkReal x765=((IkReal(1.00000000000000))*(cj0));
IkReal x766=((IkReal(0.998488012511589))*(cj4));
IkReal x767=((r11)*(sj0));
IkReal x768=((IkReal(0.0549698905825417))*(sj3));
IkReal x769=((IkReal(0.0549698905825417))*(cj4));
IkReal x770=((cj1)*(cj3));
IkReal x771=((r01)*(sj0));
IkReal x772=((r00)*(sj0));
IkReal x773=((sj1)*(sj3));
IkReal x774=((cj1)*(sj3));
IkReal x775=((r10)*(sj0));
IkReal x776=((sj6)*(x762));
IkReal x777=((r12)*(x763));
IkReal x778=((r02)*(x763));
IkReal x779=((cj6)*(x762));
IkReal x780=((r12)*(x762));
IkReal x781=((sj6)*(x763));
IkReal x782=((r02)*(x762));
IkReal x783=((cj6)*(x763));
IkReal x784=((IkReal(1.00000000000000))*(x783));
evalcond[0]=((((x771)*(x779)))+(((x772)*(x776)))+(((sj0)*(x778)))+(((IkReal(-1.00000000000000))*(x765)*(x777)))+(((IkReal(-1.00000000000000))*(r11)*(x765)*(x779)))+(((IkReal(-1.00000000000000))*(r10)*(x765)*(x776))));
evalcond[1]=((((IkReal(-0.998488012511589))*(x770)))+(((cj1)*(x768)))+(((IkReal(0.998488012511589))*(x773)))+(((r21)*(x779)))+(((r20)*(x776)))+(((r22)*(x763)))+(((IkReal(0.0549698905825417))*(x764))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x765)*(x780)))+(((cj0)*(r11)*(x783)))+(sj4)+(((IkReal(-1.00000000000000))*(x772)*(x781)))+(((IkReal(-1.00000000000000))*(x771)*(x784)))+(((sj0)*(x782)))+(((cj0)*(r10)*(x781))));
evalcond[3]=((((x769)*(x770)))+(((IkReal(-1.00000000000000))*(r20)*(x781)))+(((x766)*(x774)))+(((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x768)))+(((IkReal(-1.00000000000000))*(r21)*(x784)))+(((r22)*(x762)))+(((x764)*(x766))));
evalcond[4]=((((IkReal(-0.998488012511589))*(x774)))+(((sj1)*(x768)))+(((x767)*(x779)))+(((sj0)*(x777)))+(((cj0)*(x778)))+(((cj0)*(r00)*(x776)))+(((IkReal(-0.998488012511589))*(x764)))+(((IkReal(-0.0549698905825417))*(x770)))+(((cj0)*(r01)*(x779)))+(((x775)*(x776))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x775)*(x781)))+(((cj1)*(cj4)*(x768)))+(((IkReal(-1.00000000000000))*(x767)*(x784)))+(((sj0)*(x780)))+(((x766)*(x773)))+(((IkReal(-1.00000000000000))*(x766)*(x770)))+(((IkReal(-1.00000000000000))*(r00)*(x765)*(x781)))+(((cj0)*(x782)))+(((x764)*(x769)))+(((IkReal(-1.00000000000000))*(r01)*(x765)*(x783))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x785=((cj0)*(sj4));
IkReal x786=((sj0)*(sj4));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x785)))+(((r02)*(x786))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x786)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x786)))+(((r10)*(sj6)*(x785)))+(((cj6)*(r11)*(x785))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x785)))+(((r02)*(x786)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x786)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x786)))+(((r10)*(sj6)*(x785)))+(((cj6)*(r11)*(x785)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x787=IKsin(j5);
IkReal x788=IKcos(j5);
IkReal x789=((cj3)*(sj1));
IkReal x790=((IkReal(1.00000000000000))*(cj0));
IkReal x791=((IkReal(0.998488012511589))*(cj4));
IkReal x792=((r11)*(sj0));
IkReal x793=((IkReal(0.0549698905825417))*(sj3));
IkReal x794=((IkReal(0.0549698905825417))*(cj4));
IkReal x795=((cj1)*(cj3));
IkReal x796=((r01)*(sj0));
IkReal x797=((r00)*(sj0));
IkReal x798=((sj1)*(sj3));
IkReal x799=((cj1)*(sj3));
IkReal x800=((r10)*(sj0));
IkReal x801=((sj6)*(x787));
IkReal x802=((r12)*(x788));
IkReal x803=((r02)*(x788));
IkReal x804=((cj6)*(x787));
IkReal x805=((r12)*(x787));
IkReal x806=((sj6)*(x788));
IkReal x807=((r02)*(x787));
IkReal x808=((cj6)*(x788));
IkReal x809=((IkReal(1.00000000000000))*(x808));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x790)*(x801)))+(((IkReal(-1.00000000000000))*(x790)*(x802)))+(((x797)*(x801)))+(((sj0)*(x803)))+(((x796)*(x804)))+(((IkReal(-1.00000000000000))*(r11)*(x790)*(x804))));
evalcond[1]=((((r21)*(x804)))+(((cj1)*(x793)))+(((IkReal(0.998488012511589))*(x798)))+(((r22)*(x788)))+(((r20)*(x801)))+(((IkReal(0.0549698905825417))*(x789)))+(((IkReal(-0.998488012511589))*(x795))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x796)*(x809)))+(sj4)+(((IkReal(-1.00000000000000))*(x790)*(x805)))+(((cj0)*(r10)*(x806)))+(((IkReal(-1.00000000000000))*(x797)*(x806)))+(((sj0)*(x807)))+(((cj0)*(r11)*(x808))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x793)))+(((IkReal(-1.00000000000000))*(r21)*(x809)))+(((r22)*(x787)))+(((x794)*(x795)))+(((IkReal(-1.00000000000000))*(r20)*(x806)))+(((x791)*(x799)))+(((x789)*(x791))));
evalcond[4]=((((IkReal(-0.0549698905825417))*(x795)))+(((sj1)*(x793)))+(((x800)*(x801)))+(((sj0)*(x802)))+(((cj0)*(r00)*(x801)))+(((cj0)*(x803)))+(((cj0)*(r01)*(x804)))+(((x792)*(x804)))+(((IkReal(-0.998488012511589))*(x799)))+(((IkReal(-0.998488012511589))*(x789))));
evalcond[5]=((((cj1)*(cj4)*(x793)))+(((IkReal(-1.00000000000000))*(r01)*(x790)*(x808)))+(((IkReal(-1.00000000000000))*(x791)*(x795)))+(((IkReal(-1.00000000000000))*(x800)*(x806)))+(((sj0)*(x805)))+(((IkReal(-1.00000000000000))*(x792)*(x809)))+(((cj0)*(x807)))+(((IkReal(-1.00000000000000))*(r00)*(x790)*(x806)))+(((x791)*(x798)))+(((x789)*(x794))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x810=(cj1)*(cj1);
IkReal x811=((IkReal(0.247179770989156))*(sj1));
IkReal x812=((r21)*(sj6));
IkReal x813=((cj1)*(sj4));
IkReal x814=((cj6)*(r20));
IkReal x815=((sj1)*(sj4));
IkReal x816=((IkReal(0.247179770989156))*(cj1));
IkReal x817=((IkReal(0.0217202857658142))*(cj1));
IkReal x818=((IkReal(0.0549698905825417))*(pz));
IkReal x819=((IkReal(0.998488012511589))*(pz));
IkReal x820=((IkReal(0.0217202857658142))*(sj1));
IkReal x821=((sj4)*(x810));
if( IKabs(((gconst1)*(((((x815)*(x819)))+(((IkReal(-1.00000000000000))*(x812)*(x820)))+(((x812)*(x816)))+(((IkReal(9.98488012511589e-5))*(x814)*(x815)))+(((IkReal(-5.49698905825417e-6))*(x812)*(x813)))+(((x814)*(x820)))+(((x813)*(x818)))+(((IkReal(-0.155364734746803))*(sj1)*(x813)))+(((IkReal(-1.00000000000000))*(x814)*(x816)))+(((IkReal(5.49698905825417e-6))*(x813)*(x814)))+(((IkReal(-9.98488012511589e-5))*(x812)*(x815)))+(((IkReal(-0.00855331497464349))*(x821))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-0.00855331497464349))*(sj1)*(x813)))+(((x815)*(x818)))+(((IkReal(-9.98488012511589e-5))*(x813)*(x814)))+(((x812)*(x817)))+(((IkReal(-1.00000000000000))*(x811)*(x814)))+(((IkReal(-5.49698905825417e-6))*(x812)*(x815)))+(((IkReal(9.98488012511589e-5))*(x812)*(x813)))+(((IkReal(-1.00000000000000))*(x814)*(x817)))+(((x811)*(x812)))+(((IkReal(-1.00000000000000))*(x813)*(x819)))+(((IkReal(0.155364734746803))*(x821)))+(((IkReal(5.49698905825417e-6))*(x814)*(x815))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((x815)*(x819)))+(((IkReal(-1.00000000000000))*(x812)*(x820)))+(((x812)*(x816)))+(((IkReal(9.98488012511589e-5))*(x814)*(x815)))+(((IkReal(-5.49698905825417e-6))*(x812)*(x813)))+(((x814)*(x820)))+(((x813)*(x818)))+(((IkReal(-0.155364734746803))*(sj1)*(x813)))+(((IkReal(-1.00000000000000))*(x814)*(x816)))+(((IkReal(5.49698905825417e-6))*(x813)*(x814)))+(((IkReal(-9.98488012511589e-5))*(x812)*(x815)))+(((IkReal(-0.00855331497464349))*(x821)))))), ((gconst1)*(((((IkReal(-0.00855331497464349))*(sj1)*(x813)))+(((x815)*(x818)))+(((IkReal(-9.98488012511589e-5))*(x813)*(x814)))+(((x812)*(x817)))+(((IkReal(-1.00000000000000))*(x811)*(x814)))+(((IkReal(-5.49698905825417e-6))*(x812)*(x815)))+(((IkReal(9.98488012511589e-5))*(x812)*(x813)))+(((IkReal(-1.00000000000000))*(x814)*(x817)))+(((x811)*(x812)))+(((IkReal(-1.00000000000000))*(x813)*(x819)))+(((IkReal(0.155364734746803))*(x821)))+(((IkReal(5.49698905825417e-6))*(x814)*(x815)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x822=IKsin(j3);
IkReal x823=IKcos(j3);
IkReal x824=((IkReal(0.000100000000000000))*(cj0));
IkReal x825=((cj6)*(r00));
IkReal x826=((r01)*(sj6));
IkReal x827=((IkReal(0.998488012511589))*(sj4));
IkReal x828=((r21)*(sj6));
IkReal x829=((IkReal(1.00000000000000))*(cj6));
IkReal x830=((r10)*(sj0));
IkReal x831=((IkReal(0.0549698905825417))*(sj4));
IkReal x832=((IkReal(0.000100000000000000))*(cj6));
IkReal x833=((IkReal(0.247179770989156))*(x822));
IkReal x834=((r11)*(sj0)*(sj6));
IkReal x835=((cj1)*(x822));
IkReal x836=((cj1)*(x823));
IkReal x837=((sj1)*(x823));
IkReal x838=((sj1)*(x822));
evalcond[0]=((((IkReal(-0.247179770989156))*(x836)))+(((IkReal(-0.000100000000000000))*(x828)))+(((IkReal(-0.155600000000000))*(cj1)))+(((r20)*(x832)))+(pz)+(((IkReal(0.0217202857658142))*(x835)))+(((IkReal(0.0217202857658142))*(x837)))+(((sj1)*(x833))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x829)))+(((x831)*(x836)))+(((x827)*(x835)))+(((x827)*(x837)))+(x828)+(((IkReal(-1.00000000000000))*(x831)*(x838))));
evalcond[2]=((((x831)*(x835)))+(((x831)*(x837)))+(((IkReal(-1.00000000000000))*(x827)*(x836)))+(((cj0)*(x826)))+(((x827)*(x838)))+(x834)+(((IkReal(-1.00000000000000))*(x829)*(x830)))+(((IkReal(-1.00000000000000))*(cj0)*(x825))));
evalcond[3]=((((IkReal(-0.247179770989156))*(x837)))+(((IkReal(-0.0217202857658142))*(x836)))+(((x824)*(x825)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x824)*(x826)))+(((x830)*(x832)))+(((IkReal(-0.000100000000000000))*(x834)))+(((IkReal(0.0217202857658142))*(x838)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(cj1)*(x833))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
IkReal x839=(cj6)*(cj6);
IkReal x840=(cj0)*(cj0);
IkReal x841=(sj0)*(sj0);
IkReal x842=(sj6)*(sj6);
IkReal x843=((IkReal(2.00000000000000))*(r11));
IkReal x844=((cj0)*(sj0));
IkReal x845=((cj6)*(sj6));
IkReal x846=((IkReal(2.00000000000000))*(r01));
IkReal x847=((IkReal(1.00000000000000))*(x840));
IkReal x848=((IkReal(1.00000000000000))*(x841));
gconst4=IKsign(((((IkReal(-1.00000000000000))*(x848)*((r02)*(r02))))+(((r10)*(x844)*(x845)*(x846)))+(((r01)*(x839)*(x843)*(x844)))+(((IkReal(-1.00000000000000))*(x847)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x839)*(x847)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x844)))+(((IkReal(-1.00000000000000))*(r00)*(x841)*(x845)*(x846)))+(((r00)*(x843)*(x844)*(x845)))+(((IkReal(-1.00000000000000))*(x839)*(x848)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x842)*(x847)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(x840)*(x843)*(x845)))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x842)*(x844)))+(((IkReal(-1.00000000000000))*(x842)*(x848)*((r00)*(r00))))));
IkReal x849=(cj6)*(cj6);
IkReal x850=(cj0)*(cj0);
IkReal x851=(sj0)*(sj0);
IkReal x852=(sj6)*(sj6);
IkReal x853=((IkReal(2.00000000000000))*(r11));
IkReal x854=((cj0)*(sj0));
IkReal x855=((cj6)*(sj6));
IkReal x856=((IkReal(2.00000000000000))*(r01));
IkReal x857=((IkReal(1.00000000000000))*(x850));
IkReal x858=((IkReal(1.00000000000000))*(x851));
dummyeval[0]=((((r00)*(x853)*(x854)*(x855)))+(((IkReal(-1.00000000000000))*(x849)*(x858)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x858)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x857)*((r12)*(r12))))+(((r10)*(x854)*(x855)*(x856)))+(((r01)*(x849)*(x853)*(x854)))+(((IkReal(-1.00000000000000))*(x852)*(x857)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(x850)*(x853)*(x855)))+(((IkReal(-1.00000000000000))*(x849)*(x857)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x852)*(x854)))+(((IkReal(-1.00000000000000))*(x852)*(x858)*((r00)*(r00))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x854)))+(((IkReal(-1.00000000000000))*(r00)*(x851)*(x855)*(x856))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x859=((r20)*(sj6));
IkReal x860=((cj0)*(r12));
IkReal x861=((r22)*(sj0));
IkReal x862=((cj6)*(r21));
IkReal x863=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x864=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst5=IKsign(((((r00)*(sj6)*(x861)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x863)))+(((IkReal(-1.00000000000000))*(x862)*(x864)))+(((x859)*(x860)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x863)))+(((cj6)*(r01)*(x861)))+(((x860)*(x862)))+(((IkReal(-1.00000000000000))*(x859)*(x864)))));
IkReal x865=((r20)*(sj6));
IkReal x866=((cj0)*(r12));
IkReal x867=((r22)*(sj0));
IkReal x868=((cj6)*(r21));
IkReal x869=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x870=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((r00)*(sj6)*(x867)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x869)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((x866)*(x868)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x869)))+(((cj6)*(r01)*(x867)))+(((x865)*(x866)))+(((IkReal(-1.00000000000000))*(x865)*(x870))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x871=((cj0)*(sj3));
IkReal x872=((IkReal(0.0549698905825417))*(r12));
IkReal x873=((cj6)*(r01));
IkReal x874=((cj0)*(cj3));
IkReal x875=((r00)*(sj6));
IkReal x876=((IkReal(0.0549698905825417))*(cj1));
IkReal x877=((cj6)*(r11));
IkReal x878=((r10)*(sj6));
IkReal x879=((IkReal(0.0549698905825417))*(sj1));
IkReal x880=((IkReal(0.998488012511589))*(cj1));
IkReal x881=((sj0)*(sj3));
IkReal x882=((IkReal(0.998488012511589))*(sj1));
IkReal x883=((cj3)*(sj0));
IkReal x884=((IkReal(0.998488012511589))*(x878));
IkReal x885=((x881)*(x882));
IkReal x886=((x879)*(x883));
if( IKabs(((gconst5)*(((((r02)*(x885)))+(((r02)*(x886)))+(((r02)*(x876)*(x881)))+(((IkReal(-1.00000000000000))*(r12)*(x871)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(r02)*(x880)*(x883)))+(((r12)*(x874)*(x880))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x871)*(x877)*(x882)))+(((IkReal(-1.00000000000000))*(x874)*(x877)*(x880)))+(((IkReal(-1.00000000000000))*(x874)*(x878)*(x880)))+(((x874)*(x878)*(x879)))+(((IkReal(-1.00000000000000))*(x873)*(x886)))+(((IkReal(-1.00000000000000))*(x873)*(x885)))+(((x874)*(x877)*(x879)))+(((IkReal(-1.00000000000000))*(x875)*(x876)*(x881)))+(((x875)*(x880)*(x883)))+(((x873)*(x880)*(x883)))+(((IkReal(-1.00000000000000))*(x873)*(x876)*(x881)))+(((x871)*(x878)*(x882)))+(((x871)*(x876)*(x877)))+(((x871)*(x876)*(x878)))+(((IkReal(-1.00000000000000))*(x875)*(x885)))+(((IkReal(-1.00000000000000))*(x875)*(x886))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(((((r02)*(x885)))+(((r02)*(x886)))+(((r02)*(x876)*(x881)))+(((IkReal(-1.00000000000000))*(r12)*(x871)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x872)*(x874)))+(((IkReal(-1.00000000000000))*(r02)*(x880)*(x883)))+(((r12)*(x874)*(x880)))))), ((gconst5)*(((((x871)*(x877)*(x882)))+(((IkReal(-1.00000000000000))*(x874)*(x877)*(x880)))+(((IkReal(-1.00000000000000))*(x874)*(x878)*(x880)))+(((x874)*(x878)*(x879)))+(((IkReal(-1.00000000000000))*(x873)*(x886)))+(((IkReal(-1.00000000000000))*(x873)*(x885)))+(((x874)*(x877)*(x879)))+(((IkReal(-1.00000000000000))*(x875)*(x876)*(x881)))+(((x875)*(x880)*(x883)))+(((x873)*(x880)*(x883)))+(((IkReal(-1.00000000000000))*(x873)*(x876)*(x881)))+(((x871)*(x878)*(x882)))+(((x871)*(x876)*(x877)))+(((x871)*(x876)*(x878)))+(((IkReal(-1.00000000000000))*(x875)*(x885)))+(((IkReal(-1.00000000000000))*(x875)*(x886)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x887=IKsin(j5);
IkReal x888=IKcos(j5);
IkReal x889=((cj3)*(sj1));
IkReal x890=((IkReal(1.00000000000000))*(cj0));
IkReal x891=((IkReal(0.998488012511589))*(cj4));
IkReal x892=((r11)*(sj0));
IkReal x893=((IkReal(0.0549698905825417))*(sj3));
IkReal x894=((IkReal(0.0549698905825417))*(cj4));
IkReal x895=((cj1)*(cj3));
IkReal x896=((r01)*(sj0));
IkReal x897=((r00)*(sj0));
IkReal x898=((sj1)*(sj3));
IkReal x899=((cj1)*(sj3));
IkReal x900=((r10)*(sj0));
IkReal x901=((sj6)*(x887));
IkReal x902=((r12)*(x888));
IkReal x903=((r02)*(x888));
IkReal x904=((cj6)*(x887));
IkReal x905=((r12)*(x887));
IkReal x906=((sj6)*(x888));
IkReal x907=((r02)*(x887));
IkReal x908=((cj6)*(x888));
IkReal x909=((IkReal(1.00000000000000))*(x908));
evalcond[0]=((((IkReal(-1.00000000000000))*(x890)*(x902)))+(((sj0)*(x903)))+(((IkReal(-1.00000000000000))*(r11)*(x890)*(x904)))+(((IkReal(-1.00000000000000))*(r10)*(x890)*(x901)))+(((x897)*(x901)))+(((x896)*(x904))));
evalcond[1]=((((r21)*(x904)))+(((r20)*(x901)))+(((IkReal(-0.998488012511589))*(x895)))+(((IkReal(0.0549698905825417))*(x889)))+(((IkReal(0.998488012511589))*(x898)))+(((cj1)*(x893)))+(((r22)*(x888))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x890)*(x905)))+(((IkReal(-1.00000000000000))*(x896)*(x909)))+(((sj0)*(x907)))+(sj4)+(((IkReal(-1.00000000000000))*(x897)*(x906)))+(((cj0)*(r11)*(x908)))+(((cj0)*(r10)*(x906))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x906)))+(((x894)*(x895)))+(((IkReal(-1.00000000000000))*(r21)*(x909)))+(((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x893)))+(((x889)*(x891)))+(((x891)*(x899)))+(((r22)*(x887))));
evalcond[4]=((((sj0)*(x902)))+(((sj1)*(x893)))+(((x892)*(x904)))+(((x900)*(x901)))+(((IkReal(-0.998488012511589))*(x899)))+(((IkReal(-0.998488012511589))*(x889)))+(((IkReal(-0.0549698905825417))*(x895)))+(((cj0)*(x903)))+(((cj0)*(r01)*(x904)))+(((cj0)*(r00)*(x901))));
evalcond[5]=((((sj0)*(x905)))+(((IkReal(-1.00000000000000))*(x900)*(x906)))+(((cj1)*(cj4)*(x893)))+(((IkReal(-1.00000000000000))*(r01)*(x890)*(x908)))+(((IkReal(-1.00000000000000))*(r00)*(x890)*(x906)))+(((IkReal(-1.00000000000000))*(x892)*(x909)))+(((x889)*(x894)))+(((cj0)*(x907)))+(((x891)*(x898)))+(((IkReal(-1.00000000000000))*(x891)*(x895))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x910=((cj0)*(sj4));
IkReal x911=((sj0)*(sj4));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x910)))+(((r02)*(x911))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r10)*(sj6)*(x910)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x911)))+(((cj6)*(r11)*(x910)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x911))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(r12)*(x910)))+(((r02)*(x911)))))), ((gconst4)*(((((r10)*(sj6)*(x910)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x911)))+(((cj6)*(r11)*(x910)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x911)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x912=IKsin(j5);
IkReal x913=IKcos(j5);
IkReal x914=((cj3)*(sj1));
IkReal x915=((IkReal(1.00000000000000))*(cj0));
IkReal x916=((IkReal(0.998488012511589))*(cj4));
IkReal x917=((r11)*(sj0));
IkReal x918=((IkReal(0.0549698905825417))*(sj3));
IkReal x919=((IkReal(0.0549698905825417))*(cj4));
IkReal x920=((cj1)*(cj3));
IkReal x921=((r01)*(sj0));
IkReal x922=((r00)*(sj0));
IkReal x923=((sj1)*(sj3));
IkReal x924=((cj1)*(sj3));
IkReal x925=((r10)*(sj0));
IkReal x926=((sj6)*(x912));
IkReal x927=((r12)*(x913));
IkReal x928=((r02)*(x913));
IkReal x929=((cj6)*(x912));
IkReal x930=((r12)*(x912));
IkReal x931=((sj6)*(x913));
IkReal x932=((r02)*(x912));
IkReal x933=((cj6)*(x913));
IkReal x934=((IkReal(1.00000000000000))*(x933));
evalcond[0]=((((IkReal(-1.00000000000000))*(r11)*(x915)*(x929)))+(((sj0)*(x928)))+(((x921)*(x929)))+(((IkReal(-1.00000000000000))*(r10)*(x915)*(x926)))+(((x922)*(x926)))+(((IkReal(-1.00000000000000))*(x915)*(x927))));
evalcond[1]=((((r21)*(x929)))+(((IkReal(-0.998488012511589))*(x920)))+(((IkReal(0.998488012511589))*(x923)))+(((r22)*(x913)))+(((r20)*(x926)))+(((IkReal(0.0549698905825417))*(x914)))+(((cj1)*(x918))));
evalcond[2]=((((cj0)*(r10)*(x931)))+(sj4)+(((sj0)*(x932)))+(((cj0)*(r11)*(x933)))+(((IkReal(-1.00000000000000))*(x922)*(x931)))+(((IkReal(-1.00000000000000))*(x921)*(x934)))+(((IkReal(-1.00000000000000))*(x915)*(x930))));
evalcond[3]=((((x919)*(x920)))+(((x916)*(x924)))+(((IkReal(-1.00000000000000))*(r21)*(x934)))+(((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x918)))+(((x914)*(x916)))+(((IkReal(-1.00000000000000))*(r20)*(x931)))+(((r22)*(x912))));
evalcond[4]=((((IkReal(-0.0549698905825417))*(x920)))+(((IkReal(-0.998488012511589))*(x914)))+(((sj0)*(x927)))+(((cj0)*(x928)))+(((cj0)*(r00)*(x926)))+(((IkReal(-0.998488012511589))*(x924)))+(((x917)*(x929)))+(((cj0)*(r01)*(x929)))+(((x925)*(x926)))+(((sj1)*(x918))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x925)*(x931)))+(((x916)*(x923)))+(((cj1)*(cj4)*(x918)))+(((sj0)*(x930)))+(((cj0)*(x932)))+(((x914)*(x919)))+(((IkReal(-1.00000000000000))*(r01)*(x915)*(x933)))+(((IkReal(-1.00000000000000))*(x916)*(x920)))+(((IkReal(-1.00000000000000))*(x917)*(x934)))+(((IkReal(-1.00000000000000))*(r00)*(x915)*(x931))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x935=((cj0)*(sj4));
IkReal x936=((sj0)*(sj4));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x935)))+(((r02)*(x936))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r10)*(sj6)*(x935)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x936)))+(((cj6)*(r11)*(x935)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x936))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(r12)*(x935)))+(((r02)*(x936)))))), ((gconst3)*(((((r10)*(sj6)*(x935)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x936)))+(((cj6)*(r11)*(x935)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x936)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x937=IKsin(j5);
IkReal x938=IKcos(j5);
IkReal x939=((cj6)*(r11));
IkReal x940=((r10)*(sj6));
IkReal x941=((cj6)*(r01));
IkReal x942=((IkReal(1.00000000000000))*(r12));
IkReal x943=((r00)*(sj6));
IkReal x944=((cj0)*(x938));
IkReal x945=((sj0)*(x937));
IkReal x946=((sj0)*(x938));
IkReal x947=((IkReal(1.00000000000000))*(cj0)*(x937));
evalcond[0]=((((r02)*(x946)))+(((IkReal(-1.00000000000000))*(x939)*(x947)))+(((IkReal(-1.00000000000000))*(x942)*(x944)))+(((x941)*(x945)))+(((x943)*(x945)))+(((IkReal(-1.00000000000000))*(x940)*(x947))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x943)*(x946)))+(sj4)+(((r02)*(x945)))+(((IkReal(-1.00000000000000))*(x941)*(x946)))+(((IkReal(-1.00000000000000))*(cj0)*(x937)*(x942)))+(((x939)*(x944)))+(((x940)*(x944))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x948=((IkReal(1.00000000000000))*(sj4));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x948)*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*(x948)*((cj1)*(cj1))))));
IkReal x949=((IkReal(1.00000000000000))*(sj4));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x949)*((cj1)*(cj1))))+(((IkReal(-1.00000000000000))*(x949)*((sj1)*(sj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x950=((sj0)*(sj6));
IkReal x951=((cj0)*(sj6));
IkReal x952=((IkReal(1.00000000000000))*(cj5));
IkReal x953=((r02)*(sj0));
IkReal x954=((IkReal(0.000100000000000000))*(cj6));
IkReal x955=((IkReal(1.00000000000000))*(cj6));
IkReal x956=((cj0)*(r10));
IkReal x957=((IkReal(1.00000000000000))*(cj0));
IkReal x958=((cj0)*(r11));
IkReal x959=((cj6)*(r01)*(sj0));
IkReal x960=((sj0)*(x955));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x960)))+(((r01)*(x950)))+(((IkReal(-1.00000000000000))*(r11)*(x951)))+(((cj6)*(x956))));
evalcond[2]=((IkReal(0.000100000000000000))+(((IkReal(-1.00000000000000))*(py)*(x957)))+(((IkReal(0.000100000000000000))*(r11)*(x951)))+(((px)*(sj0)))+(((IkReal(-1.00000000000000))*(x954)*(x956)))+(((r00)*(sj0)*(x954)))+(((IkReal(-0.000100000000000000))*(r01)*(x950))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj5)*(x955)*(x958)))+(((cj5)*(x953)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x951)))+(((IkReal(-1.00000000000000))*(cj0)*(r12)*(x952)))+(((r00)*(sj5)*(x950)))+(((sj5)*(x959))));
evalcond[4]=((((cj5)*(r10)*(x951)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x957)))+(((IkReal(-1.00000000000000))*(r00)*(x950)*(x952)))+(((cj5)*(cj6)*(x958)))+(((sj5)*(x953)))+(((IkReal(-1.00000000000000))*(x952)*(x959))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r20)*(x955)))+(((r21)*(sj6))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r10)*(x960)))+(((r01)*(x951)))+(((r11)*(x950)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x955))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x961=(cj1)*(cj1);
IkReal x962=((r21)*(sj6));
IkReal x963=((IkReal(9.98488012511589e-5))*(cj1));
IkReal x964=((IkReal(0.247179770989156))*(sj1));
IkReal x965=((cj5)*(r22));
IkReal x966=((IkReal(5.49698905825417e-6))*(sj1));
IkReal x967=((cj6)*(r20));
IkReal x968=((IkReal(9.98488012511589e-5))*(sj1));
IkReal x969=((cj1)*(sj1));
IkReal x970=((IkReal(5.49698905825417e-6))*(cj1));
IkReal x971=((IkReal(0.0217202857658142))*(sj1));
IkReal x972=((IkReal(0.998488012511589))*(pz));
IkReal x973=((IkReal(0.0549698905825417))*(pz));
IkReal x974=((IkReal(0.247179770989156))*(cj1));
IkReal x975=((IkReal(0.0217202857658142))*(cj1));
IkReal x976=((r20)*(sj5)*(sj6));
IkReal x977=((cj6)*(r21)*(sj5));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x965)*(x971)))+(((IkReal(-1.00000000000000))*(cj1)*(x972)))+(((IkReal(-1.00000000000000))*(x962)*(x966)))+(((IkReal(-1.00000000000000))*(x963)*(x967)))+(((IkReal(-0.00855331497464349))*(x969)))+(((x962)*(x963)))+(((IkReal(-1.00000000000000))*(x971)*(x976)))+(((IkReal(-1.00000000000000))*(x971)*(x977)))+(((x965)*(x974)))+(((sj1)*(x973)))+(((x974)*(x977)))+(((x974)*(x976)))+(((x966)*(x967)))+(((IkReal(0.155364734746803))*(x961))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((x975)*(x976)))+(((x975)*(x977)))+(((IkReal(-1.00000000000000))*(cj1)*(x973)))+(((x962)*(x968)))+(((IkReal(-1.00000000000000))*(x967)*(x968)))+(((x962)*(x970)))+(((x965)*(x975)))+(((IkReal(-1.00000000000000))*(x967)*(x970)))+(((x964)*(x965)))+(((IkReal(0.00855331497464349))*(x961)))+(((IkReal(-1.00000000000000))*(sj1)*(x972)))+(((x964)*(x976)))+(((x964)*(x977)))+(((IkReal(0.155364734746803))*(x969))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x965)*(x971)))+(((IkReal(-1.00000000000000))*(cj1)*(x972)))+(((IkReal(-1.00000000000000))*(x962)*(x966)))+(((IkReal(-1.00000000000000))*(x963)*(x967)))+(((IkReal(-0.00855331497464349))*(x969)))+(((x962)*(x963)))+(((IkReal(-1.00000000000000))*(x971)*(x976)))+(((IkReal(-1.00000000000000))*(x971)*(x977)))+(((x965)*(x974)))+(((sj1)*(x973)))+(((x974)*(x977)))+(((x974)*(x976)))+(((x966)*(x967)))+(((IkReal(0.155364734746803))*(x961)))))), ((gconst8)*(((((x975)*(x976)))+(((x975)*(x977)))+(((IkReal(-1.00000000000000))*(cj1)*(x973)))+(((x962)*(x968)))+(((IkReal(-1.00000000000000))*(x967)*(x968)))+(((x962)*(x970)))+(((x965)*(x975)))+(((IkReal(-1.00000000000000))*(x967)*(x970)))+(((x964)*(x965)))+(((IkReal(0.00855331497464349))*(x961)))+(((IkReal(-1.00000000000000))*(sj1)*(x972)))+(((x964)*(x976)))+(((x964)*(x977)))+(((IkReal(0.155364734746803))*(x969)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x978=IKsin(j3);
IkReal x979=IKcos(j3);
IkReal x980=((sj0)*(sj5));
IkReal x981=((cj6)*(r11));
IkReal x982=((r10)*(sj6));
IkReal x983=((IkReal(1.00000000000000))*(cj5));
IkReal x984=((IkReal(0.000100000000000000))*(cj0));
IkReal x985=((cj0)*(r02));
IkReal x986=((IkReal(0.000100000000000000))*(sj6));
IkReal x987=((r20)*(sj6));
IkReal x988=((cj6)*(r21));
IkReal x989=((IkReal(0.000100000000000000))*(cj6));
IkReal x990=((sj1)*(x979));
IkReal x991=((sj1)*(x978));
IkReal x992=((cj1)*(x978));
IkReal x993=((cj1)*(x979));
IkReal x994=((cj0)*(r00)*(sj6));
IkReal x995=((cj0)*(cj6)*(r01));
IkReal x996=((IkReal(0.0549698905825417))*(x991));
IkReal x997=((IkReal(0.998488012511589))*(x992));
IkReal x998=((IkReal(0.998488012511589))*(x990));
IkReal x999=((IkReal(0.0549698905825417))*(x993));
IkReal x1000=((IkReal(0.998488012511589))*(x991));
IkReal x1001=((IkReal(0.0549698905825417))*(x992));
IkReal x1002=((IkReal(0.0549698905825417))*(x990));
IkReal x1003=((IkReal(0.998488012511589))*(x993));
IkReal x1004=((x1002)+(x1001)+(x1000));
IkReal x1005=((x997)+(x999)+(x998));
evalcond[0]=((((IkReal(-1.00000000000000))*(r21)*(x986)))+(((IkReal(0.0217202857658142))*(x992)))+(((IkReal(0.0217202857658142))*(x990)))+(((IkReal(0.247179770989156))*(x991)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-0.247179770989156))*(x993)))+(pz)+(((r20)*(x989))));
evalcond[1]=((((cj5)*(r22)))+(x1004)+(((IkReal(-1.00000000000000))*(x1003)))+(((sj5)*(x988)))+(((sj5)*(x987))));
evalcond[2]=((x1005)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x996)))+(((IkReal(-1.00000000000000))*(x983)*(x988)))+(((IkReal(-1.00000000000000))*(x983)*(x987))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x984)))+(((IkReal(0.0217202857658142))*(x991)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x986)))+(((IkReal(-0.247179770989156))*(x992)))+(((IkReal(-0.247179770989156))*(x990)))+(((IkReal(-0.0217202857658142))*(x993)))+(((cj6)*(r00)*(x984)))+(((r10)*(sj0)*(x989)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(((cj5)*(x985)))+(((IkReal(-1.00000000000000))*(x1005)))+(((sj5)*(x995)))+(((sj5)*(x994)))+(((x980)*(x981)))+(((x980)*(x982)))+(x996));
evalcond[5]=((x1004)+(((IkReal(-1.00000000000000))*(x1003)))+(((r12)*(x980)))+(((IkReal(-1.00000000000000))*(sj0)*(x982)*(x983)))+(((IkReal(-1.00000000000000))*(sj0)*(x981)*(x983)))+(((IkReal(-1.00000000000000))*(x983)*(x995)))+(((IkReal(-1.00000000000000))*(x983)*(x994)))+(((sj5)*(x985))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1006=((cj6)*(r21));
IkReal x1007=((cj1)*(sj5));
IkReal x1008=((IkReal(0.0549698905825417))*(sj1));
IkReal x1009=((r22)*(sj5));
IkReal x1010=((IkReal(0.998488012511589))*(sj1));
IkReal x1011=((r20)*(sj6));
IkReal x1012=((cj5)*(r22));
IkReal x1013=((IkReal(0.998488012511589))*(cj1));
IkReal x1014=((IkReal(0.0549698905825417))*(cj1)*(cj5));
IkReal x1015=((sj5)*(x1011));
if( IKabs(((gconst9)*(((((IkReal(0.0549698905825417))*(x1006)*(x1007)))+(((IkReal(0.0549698905825417))*(cj1)*(x1012)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((sj5)*(x1006)*(x1010)))+(((IkReal(0.0549698905825417))*(x1007)*(x1011)))+(((IkReal(0.998488012511589))*(r22)*(x1007)))+(((cj5)*(x1008)*(x1011)))+(((IkReal(-1.00000000000000))*(cj5)*(x1006)*(x1013)))+(((cj5)*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(cj5)*(x1011)*(x1013)))+(((x1010)*(x1015)))+(((x1010)*(x1012))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(x1011)*(x1014)))+(((x1009)*(x1010)))+(((IkReal(-0.998488012511589))*(x1007)*(x1011)))+(((sj5)*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(x1006)*(x1014)))+(((IkReal(-0.998488012511589))*(x1006)*(x1007)))+(((IkReal(-1.00000000000000))*(cj5)*(x1010)*(x1011)))+(((IkReal(-1.00000000000000))*(cj5)*(x1006)*(x1010)))+(((x1008)*(x1015)))+(((x1008)*(x1012)))+(((IkReal(0.0549698905825417))*(r22)*(x1007))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst9)*(((((IkReal(0.0549698905825417))*(x1006)*(x1007)))+(((IkReal(0.0549698905825417))*(cj1)*(x1012)))+(((IkReal(-1.00000000000000))*(x1008)*(x1009)))+(((sj5)*(x1006)*(x1010)))+(((IkReal(0.0549698905825417))*(x1007)*(x1011)))+(((IkReal(0.998488012511589))*(r22)*(x1007)))+(((cj5)*(x1008)*(x1011)))+(((IkReal(-1.00000000000000))*(cj5)*(x1006)*(x1013)))+(((cj5)*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(cj5)*(x1011)*(x1013)))+(((x1010)*(x1015)))+(((x1010)*(x1012)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(x1011)*(x1014)))+(((x1009)*(x1010)))+(((IkReal(-0.998488012511589))*(x1007)*(x1011)))+(((sj5)*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(x1006)*(x1014)))+(((IkReal(-0.998488012511589))*(x1006)*(x1007)))+(((IkReal(-1.00000000000000))*(cj5)*(x1010)*(x1011)))+(((IkReal(-1.00000000000000))*(cj5)*(x1006)*(x1010)))+(((x1008)*(x1015)))+(((x1008)*(x1012)))+(((IkReal(0.0549698905825417))*(r22)*(x1007)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1016=IKsin(j3);
IkReal x1017=IKcos(j3);
IkReal x1018=((sj0)*(sj5));
IkReal x1019=((cj6)*(r11));
IkReal x1020=((r10)*(sj6));
IkReal x1021=((IkReal(1.00000000000000))*(cj5));
IkReal x1022=((IkReal(0.000100000000000000))*(cj0));
IkReal x1023=((cj0)*(r02));
IkReal x1024=((IkReal(0.000100000000000000))*(sj6));
IkReal x1025=((r20)*(sj6));
IkReal x1026=((cj6)*(r21));
IkReal x1027=((IkReal(0.000100000000000000))*(cj6));
IkReal x1028=((sj1)*(x1017));
IkReal x1029=((sj1)*(x1016));
IkReal x1030=((cj1)*(x1016));
IkReal x1031=((cj1)*(x1017));
IkReal x1032=((cj0)*(r00)*(sj6));
IkReal x1033=((cj0)*(cj6)*(r01));
IkReal x1034=((IkReal(0.0549698905825417))*(x1029));
IkReal x1035=((IkReal(0.998488012511589))*(x1030));
IkReal x1036=((IkReal(0.998488012511589))*(x1028));
IkReal x1037=((IkReal(0.0549698905825417))*(x1031));
IkReal x1038=((IkReal(0.998488012511589))*(x1029));
IkReal x1039=((IkReal(0.0549698905825417))*(x1030));
IkReal x1040=((IkReal(0.0549698905825417))*(x1028));
IkReal x1041=((IkReal(0.998488012511589))*(x1031));
IkReal x1042=((x1040)+(x1038)+(x1039));
IkReal x1043=((x1036)+(x1037)+(x1035));
evalcond[0]=((((r20)*(x1027)))+(((IkReal(0.0217202857658142))*(x1030)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r21)*(x1024)))+(pz)+(((IkReal(-0.247179770989156))*(x1031)))+(((IkReal(0.0217202857658142))*(x1028)))+(((IkReal(0.247179770989156))*(x1029))));
evalcond[1]=((((cj5)*(r22)))+(x1042)+(((sj5)*(x1026)))+(((sj5)*(x1025)))+(((IkReal(-1.00000000000000))*(x1041))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1034)))+(x1043)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1021)*(x1025)))+(((IkReal(-1.00000000000000))*(x1021)*(x1026))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1022)))+(((IkReal(-0.0217202857658142))*(x1031)))+(((r10)*(sj0)*(x1027)))+(((IkReal(-0.155600000000000))*(sj1)))+(((cj6)*(r00)*(x1022)))+(((IkReal(-0.247179770989156))*(x1030)))+(((IkReal(0.0217202857658142))*(x1029)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-0.247179770989156))*(x1028)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1024))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(x1034)+(((cj5)*(x1023)))+(((x1018)*(x1020)))+(((sj5)*(x1033)))+(((sj5)*(x1032)))+(((x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(x1043))));
evalcond[5]=((x1042)+(((IkReal(-1.00000000000000))*(x1021)*(x1033)))+(((IkReal(-1.00000000000000))*(x1021)*(x1032)))+(((r12)*(x1018)))+(((IkReal(-1.00000000000000))*(sj0)*(x1019)*(x1021)))+(((IkReal(-1.00000000000000))*(sj0)*(x1020)*(x1021)))+(((sj5)*(x1023)))+(((IkReal(-1.00000000000000))*(x1041))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1044=((sj0)*(sj6));
IkReal x1045=((cj0)*(sj6));
IkReal x1046=((IkReal(1.00000000000000))*(cj5));
IkReal x1047=((r02)*(sj0));
IkReal x1048=((IkReal(0.000100000000000000))*(cj6));
IkReal x1049=((IkReal(1.00000000000000))*(cj6));
IkReal x1050=((cj0)*(r10));
IkReal x1051=((IkReal(1.00000000000000))*(cj0));
IkReal x1052=((cj0)*(r11));
IkReal x1053=((cj6)*(r01)*(sj0));
IkReal x1054=((sj0)*(x1049));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x1054)))+(((IkReal(-1.00000000000000))*(r11)*(x1045)))+(((cj6)*(x1050)))+(((r01)*(x1044))));
evalcond[2]=((IkReal(0.000100000000000000))+(((r00)*(sj0)*(x1048)))+(((IkReal(0.000100000000000000))*(r11)*(x1045)))+(((IkReal(-0.000100000000000000))*(r01)*(x1044)))+(((IkReal(-1.00000000000000))*(py)*(x1051)))+(((IkReal(-1.00000000000000))*(x1048)*(x1050)))+(((px)*(sj0))));
evalcond[3]=((((sj5)*(x1053)))+(((r00)*(sj5)*(x1044)))+(((IkReal(-1.00000000000000))*(sj5)*(x1049)*(x1052)))+(((IkReal(-1.00000000000000))*(cj0)*(r12)*(x1046)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1045)))+(((cj5)*(x1047))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1046)*(x1053)))+(((sj5)*(x1047)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x1051)))+(((IkReal(-1.00000000000000))*(r00)*(x1044)*(x1046)))+(((cj5)*(r10)*(x1045)))+(((cj5)*(cj6)*(x1052))));
evalcond[5]=((((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(r20)*(x1049))));
evalcond[6]=((((r11)*(x1044)))+(((IkReal(-1.00000000000000))*(r10)*(x1054)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x1049)))+(((r01)*(x1045))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(0.00810000000000000))*((cj1)*(cj1))))+(((IkReal(0.00810000000000000))*((sj1)*(sj1))))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1055=(cj1)*(cj1);
IkReal x1056=((cj6)*(r20));
IkReal x1057=((IkReal(5.49698905825417e-6))*(cj1));
IkReal x1058=((r21)*(sj6));
IkReal x1059=((IkReal(9.98488012511589e-5))*(cj1));
IkReal x1060=((IkReal(0.247179770989156))*(sj1));
IkReal x1061=((cj5)*(r22));
IkReal x1062=((IkReal(5.49698905825417e-6))*(sj1));
IkReal x1063=((IkReal(9.98488012511589e-5))*(sj1));
IkReal x1064=((cj1)*(sj1));
IkReal x1065=((IkReal(0.0217202857658142))*(sj1));
IkReal x1066=((IkReal(0.998488012511589))*(pz));
IkReal x1067=((IkReal(0.0549698905825417))*(pz));
IkReal x1068=((IkReal(0.247179770989156))*(cj1));
IkReal x1069=((IkReal(0.0217202857658142))*(cj1));
IkReal x1070=((r20)*(sj5)*(sj6));
IkReal x1071=((cj6)*(r21)*(sj5));
if( IKabs(((gconst10)*(((((x1068)*(x1070)))+(((x1068)*(x1071)))+(((x1056)*(x1062)))+(((x1061)*(x1068)))+(((IkReal(0.155364734746803))*(x1055)))+(((IkReal(-1.00000000000000))*(x1058)*(x1062)))+(((IkReal(-1.00000000000000))*(cj1)*(x1066)))+(((IkReal(-1.00000000000000))*(x1061)*(x1065)))+(((IkReal(-0.00855331497464349))*(x1064)))+(((sj1)*(x1067)))+(((IkReal(-1.00000000000000))*(x1056)*(x1059)))+(((IkReal(-1.00000000000000))*(x1065)*(x1070)))+(((IkReal(-1.00000000000000))*(x1065)*(x1071)))+(((x1058)*(x1059))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x1069)*(x1071)))+(((x1069)*(x1070)))+(((IkReal(0.00855331497464349))*(x1055)))+(((IkReal(0.155364734746803))*(x1064)))+(((x1061)*(x1069)))+(((x1060)*(x1061)))+(((x1060)*(x1070)))+(((x1060)*(x1071)))+(((IkReal(-1.00000000000000))*(sj1)*(x1066)))+(((IkReal(-1.00000000000000))*(cj1)*(x1067)))+(((x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(x1056)*(x1063)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((x1058)*(x1063))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst10)*(((((x1068)*(x1070)))+(((x1068)*(x1071)))+(((x1056)*(x1062)))+(((x1061)*(x1068)))+(((IkReal(0.155364734746803))*(x1055)))+(((IkReal(-1.00000000000000))*(x1058)*(x1062)))+(((IkReal(-1.00000000000000))*(cj1)*(x1066)))+(((IkReal(-1.00000000000000))*(x1061)*(x1065)))+(((IkReal(-0.00855331497464349))*(x1064)))+(((sj1)*(x1067)))+(((IkReal(-1.00000000000000))*(x1056)*(x1059)))+(((IkReal(-1.00000000000000))*(x1065)*(x1070)))+(((IkReal(-1.00000000000000))*(x1065)*(x1071)))+(((x1058)*(x1059)))))), ((gconst10)*(((((x1069)*(x1071)))+(((x1069)*(x1070)))+(((IkReal(0.00855331497464349))*(x1055)))+(((IkReal(0.155364734746803))*(x1064)))+(((x1061)*(x1069)))+(((x1060)*(x1061)))+(((x1060)*(x1070)))+(((x1060)*(x1071)))+(((IkReal(-1.00000000000000))*(sj1)*(x1066)))+(((IkReal(-1.00000000000000))*(cj1)*(x1067)))+(((x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(x1056)*(x1063)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((x1058)*(x1063)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1072=IKsin(j3);
IkReal x1073=IKcos(j3);
IkReal x1074=((sj0)*(sj5));
IkReal x1075=((cj6)*(r11));
IkReal x1076=((r10)*(sj6));
IkReal x1077=((IkReal(1.00000000000000))*(cj5));
IkReal x1078=((IkReal(0.000100000000000000))*(cj0));
IkReal x1079=((cj0)*(r02));
IkReal x1080=((IkReal(0.000100000000000000))*(sj6));
IkReal x1081=((r20)*(sj6));
IkReal x1082=((cj6)*(r21));
IkReal x1083=((IkReal(0.000100000000000000))*(cj6));
IkReal x1084=((sj1)*(x1073));
IkReal x1085=((sj1)*(x1072));
IkReal x1086=((cj1)*(x1072));
IkReal x1087=((cj1)*(x1073));
IkReal x1088=((cj0)*(r00)*(sj6));
IkReal x1089=((cj0)*(cj6)*(r01));
IkReal x1090=((IkReal(0.0549698905825417))*(x1085));
IkReal x1091=((IkReal(0.998488012511589))*(x1086));
IkReal x1092=((IkReal(0.998488012511589))*(x1084));
IkReal x1093=((IkReal(0.0549698905825417))*(x1087));
IkReal x1094=((IkReal(0.998488012511589))*(x1087));
IkReal x1095=((IkReal(0.998488012511589))*(x1085));
IkReal x1096=((IkReal(0.0549698905825417))*(x1086));
IkReal x1097=((IkReal(0.0549698905825417))*(x1084));
IkReal x1098=((x1091)+(x1092)+(x1093));
IkReal x1099=((x1095)+(x1096)+(x1097));
evalcond[0]=((((IkReal(-0.247179770989156))*(x1087)))+(((IkReal(-1.00000000000000))*(r21)*(x1080)))+(((IkReal(0.0217202857658142))*(x1086)))+(((IkReal(0.0217202857658142))*(x1084)))+(((r20)*(x1083)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(0.247179770989156))*(x1085))));
evalcond[1]=((((cj5)*(r22)))+(((sj5)*(x1082)))+(((sj5)*(x1081)))+(x1099)+(((IkReal(-1.00000000000000))*(x1094))));
evalcond[2]=((x1090)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1098)))+(((IkReal(-1.00000000000000))*(x1077)*(x1082)))+(((IkReal(-1.00000000000000))*(x1077)*(x1081))));
evalcond[3]=((((IkReal(-0.247179770989156))*(x1084)))+(((IkReal(-0.247179770989156))*(x1086)))+(((IkReal(0.0217202857658142))*(x1085)))+(((r10)*(sj0)*(x1083)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1078)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1080)))+(((cj6)*(r00)*(x1078)))+(((IkReal(-0.0217202857658142))*(x1087)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(((x1074)*(x1076)))+(((x1074)*(x1075)))+(((sj5)*(x1089)))+(((sj5)*(x1088)))+(x1090)+(((IkReal(-1.00000000000000))*(x1098)))+(((cj5)*(x1079))));
evalcond[5]=((x1094)+(((IkReal(-1.00000000000000))*(sj0)*(x1076)*(x1077)))+(((r12)*(x1074)))+(((IkReal(-1.00000000000000))*(x1099)))+(((sj5)*(x1079)))+(((IkReal(-1.00000000000000))*(x1077)*(x1088)))+(((IkReal(-1.00000000000000))*(x1077)*(x1089)))+(((IkReal(-1.00000000000000))*(sj0)*(x1075)*(x1077))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1100=((cj6)*(r21));
IkReal x1101=((cj1)*(sj5));
IkReal x1102=((IkReal(0.0549698905825417))*(sj1));
IkReal x1103=((r22)*(sj5));
IkReal x1104=((IkReal(0.998488012511589))*(sj1));
IkReal x1105=((r20)*(sj6));
IkReal x1106=((cj5)*(r22));
IkReal x1107=((IkReal(0.998488012511589))*(cj1));
IkReal x1108=((IkReal(0.0549698905825417))*(cj1)*(cj5));
IkReal x1109=((sj5)*(x1105));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1105)*(x1107)))+(((IkReal(-0.0549698905825417))*(cj1)*(x1106)))+(((IkReal(-0.0549698905825417))*(x1100)*(x1101)))+(((IkReal(-1.00000000000000))*(cj5)*(x1100)*(x1107)))+(((IkReal(0.998488012511589))*(r22)*(x1101)))+(((cj5)*(x1100)*(x1102)))+(((IkReal(-1.00000000000000))*(x1104)*(x1109)))+(((IkReal(-1.00000000000000))*(x1104)*(x1106)))+(((IkReal(-1.00000000000000))*(sj5)*(x1100)*(x1104)))+(((cj5)*(x1102)*(x1105)))+(((IkReal(-1.00000000000000))*(x1102)*(x1103)))+(((IkReal(-0.0549698905825417))*(x1101)*(x1105))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1100)*(x1104)))+(((IkReal(-1.00000000000000))*(x1100)*(x1108)))+(((IkReal(-1.00000000000000))*(cj5)*(x1104)*(x1105)))+(((IkReal(0.998488012511589))*(x1101)*(x1105)))+(((IkReal(0.0549698905825417))*(r22)*(x1101)))+(((x1103)*(x1104)))+(((IkReal(-1.00000000000000))*(sj5)*(x1100)*(x1102)))+(((IkReal(0.998488012511589))*(x1100)*(x1101)))+(((IkReal(-1.00000000000000))*(x1102)*(x1106)))+(((IkReal(-1.00000000000000))*(x1102)*(x1109)))+(((x1106)*(x1107)))+(((IkReal(-1.00000000000000))*(x1105)*(x1108))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1105)*(x1107)))+(((IkReal(-0.0549698905825417))*(cj1)*(x1106)))+(((IkReal(-0.0549698905825417))*(x1100)*(x1101)))+(((IkReal(-1.00000000000000))*(cj5)*(x1100)*(x1107)))+(((IkReal(0.998488012511589))*(r22)*(x1101)))+(((cj5)*(x1100)*(x1102)))+(((IkReal(-1.00000000000000))*(x1104)*(x1109)))+(((IkReal(-1.00000000000000))*(x1104)*(x1106)))+(((IkReal(-1.00000000000000))*(sj5)*(x1100)*(x1104)))+(((cj5)*(x1102)*(x1105)))+(((IkReal(-1.00000000000000))*(x1102)*(x1103)))+(((IkReal(-0.0549698905825417))*(x1101)*(x1105)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(cj5)*(x1100)*(x1104)))+(((IkReal(-1.00000000000000))*(x1100)*(x1108)))+(((IkReal(-1.00000000000000))*(cj5)*(x1104)*(x1105)))+(((IkReal(0.998488012511589))*(x1101)*(x1105)))+(((IkReal(0.0549698905825417))*(r22)*(x1101)))+(((x1103)*(x1104)))+(((IkReal(-1.00000000000000))*(sj5)*(x1100)*(x1102)))+(((IkReal(0.998488012511589))*(x1100)*(x1101)))+(((IkReal(-1.00000000000000))*(x1102)*(x1106)))+(((IkReal(-1.00000000000000))*(x1102)*(x1109)))+(((x1106)*(x1107)))+(((IkReal(-1.00000000000000))*(x1105)*(x1108)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1110=IKsin(j3);
IkReal x1111=IKcos(j3);
IkReal x1112=((sj0)*(sj5));
IkReal x1113=((cj6)*(r11));
IkReal x1114=((r10)*(sj6));
IkReal x1115=((IkReal(1.00000000000000))*(cj5));
IkReal x1116=((IkReal(0.000100000000000000))*(cj0));
IkReal x1117=((cj0)*(r02));
IkReal x1118=((IkReal(0.000100000000000000))*(sj6));
IkReal x1119=((r20)*(sj6));
IkReal x1120=((cj6)*(r21));
IkReal x1121=((IkReal(0.000100000000000000))*(cj6));
IkReal x1122=((sj1)*(x1111));
IkReal x1123=((sj1)*(x1110));
IkReal x1124=((cj1)*(x1110));
IkReal x1125=((cj1)*(x1111));
IkReal x1126=((cj0)*(r00)*(sj6));
IkReal x1127=((cj0)*(cj6)*(r01));
IkReal x1128=((IkReal(0.0549698905825417))*(x1123));
IkReal x1129=((IkReal(0.998488012511589))*(x1124));
IkReal x1130=((IkReal(0.998488012511589))*(x1122));
IkReal x1131=((IkReal(0.0549698905825417))*(x1125));
IkReal x1132=((IkReal(0.998488012511589))*(x1125));
IkReal x1133=((IkReal(0.998488012511589))*(x1123));
IkReal x1134=((IkReal(0.0549698905825417))*(x1124));
IkReal x1135=((IkReal(0.0549698905825417))*(x1122));
IkReal x1136=((x1129)+(x1131)+(x1130));
IkReal x1137=((x1133)+(x1135)+(x1134));
evalcond[0]=((((IkReal(0.0217202857658142))*(x1124)))+(((IkReal(0.0217202857658142))*(x1122)))+(((IkReal(-1.00000000000000))*(r21)*(x1118)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((IkReal(-0.247179770989156))*(x1125)))+(((IkReal(0.247179770989156))*(x1123)))+(((r20)*(x1121))));
evalcond[1]=((((cj5)*(r22)))+(x1137)+(((IkReal(-1.00000000000000))*(x1132)))+(((sj5)*(x1120)))+(((sj5)*(x1119))));
evalcond[2]=((x1128)+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1136)))+(((IkReal(-1.00000000000000))*(x1115)*(x1120)))+(((IkReal(-1.00000000000000))*(x1115)*(x1119))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1118)))+(((cj6)*(r00)*(x1116)))+(((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1116)))+(((IkReal(0.0217202857658142))*(x1123)))+(((IkReal(-0.155600000000000))*(sj1)))+(((r10)*(sj0)*(x1121)))+(((IkReal(-0.0217202857658142))*(x1125)))+(((IkReal(-0.247179770989156))*(x1124)))+(((IkReal(-0.247179770989156))*(x1122)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[4]=((((cj5)*(r12)*(sj0)))+(x1128)+(((x1112)*(x1114)))+(((x1112)*(x1113)))+(((cj5)*(x1117)))+(((IkReal(-1.00000000000000))*(x1136)))+(((sj5)*(x1127)))+(((sj5)*(x1126))));
evalcond[5]=((x1132)+(((IkReal(-1.00000000000000))*(sj0)*(x1113)*(x1115)))+(((IkReal(-1.00000000000000))*(x1137)))+(((r12)*(x1112)))+(((IkReal(-1.00000000000000))*(sj0)*(x1114)*(x1115)))+(((sj5)*(x1117)))+(((IkReal(-1.00000000000000))*(x1115)*(x1127)))+(((IkReal(-1.00000000000000))*(x1115)*(x1126))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1138=(cj1)*(cj1);
IkReal x1139=((r21)*(sj6));
IkReal x1140=((IkReal(9.98488012511589e-5))*(cj1));
IkReal x1141=((IkReal(0.247179770989156))*(sj1));
IkReal x1142=((cj5)*(r22));
IkReal x1143=((IkReal(5.49698905825417e-6))*(sj1));
IkReal x1144=((cj6)*(r20));
IkReal x1145=((IkReal(9.98488012511589e-5))*(sj1));
IkReal x1146=((cj1)*(sj1));
IkReal x1147=((IkReal(5.49698905825417e-6))*(cj1));
IkReal x1148=((IkReal(0.0217202857658142))*(sj1));
IkReal x1149=((IkReal(0.998488012511589))*(pz));
IkReal x1150=((IkReal(0.0549698905825417))*(pz));
IkReal x1151=((IkReal(0.247179770989156))*(cj1));
IkReal x1152=((IkReal(0.0217202857658142))*(cj1));
IkReal x1153=((r20)*(sj5)*(sj6));
IkReal x1154=((cj6)*(r21)*(sj5));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x1140)*(x1144)))+(((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(cj1)*(x1149)))+(((x1142)*(x1151)))+(((IkReal(0.155364734746803))*(x1138)))+(((x1151)*(x1154)))+(((x1151)*(x1153)))+(((IkReal(-1.00000000000000))*(x1148)*(x1153)))+(((IkReal(-1.00000000000000))*(x1148)*(x1154)))+(((x1139)*(x1140)))+(((sj1)*(x1150)))+(((IkReal(-1.00000000000000))*(x1139)*(x1143)))+(((IkReal(-1.00000000000000))*(x1142)*(x1148)))+(((IkReal(-0.00855331497464349))*(x1146))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((x1142)*(x1152)))+(((x1141)*(x1154)))+(((x1141)*(x1153)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(cj1)*(x1150)))+(((x1152)*(x1153)))+(((x1152)*(x1154)))+(((IkReal(0.155364734746803))*(x1146)))+(((x1139)*(x1145)))+(((x1139)*(x1147)))+(((IkReal(-1.00000000000000))*(sj1)*(x1149)))+(((IkReal(-1.00000000000000))*(x1144)*(x1147)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((IkReal(0.00855331497464349))*(x1138))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x1140)*(x1144)))+(((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(cj1)*(x1149)))+(((x1142)*(x1151)))+(((IkReal(0.155364734746803))*(x1138)))+(((x1151)*(x1154)))+(((x1151)*(x1153)))+(((IkReal(-1.00000000000000))*(x1148)*(x1153)))+(((IkReal(-1.00000000000000))*(x1148)*(x1154)))+(((x1139)*(x1140)))+(((sj1)*(x1150)))+(((IkReal(-1.00000000000000))*(x1139)*(x1143)))+(((IkReal(-1.00000000000000))*(x1142)*(x1148)))+(((IkReal(-0.00855331497464349))*(x1146)))))), ((gconst7)*(((((x1142)*(x1152)))+(((x1141)*(x1154)))+(((x1141)*(x1153)))+(((x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(cj1)*(x1150)))+(((x1152)*(x1153)))+(((x1152)*(x1154)))+(((IkReal(0.155364734746803))*(x1146)))+(((x1139)*(x1145)))+(((x1139)*(x1147)))+(((IkReal(-1.00000000000000))*(sj1)*(x1149)))+(((IkReal(-1.00000000000000))*(x1144)*(x1147)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((IkReal(0.00855331497464349))*(x1138)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1155=IKsin(j3);
IkReal x1156=IKcos(j3);
IkReal x1157=((r11)*(sj0));
IkReal x1158=((cj6)*(sj5));
IkReal x1159=((cj0)*(r01));
IkReal x1160=((r10)*(sj0));
IkReal x1161=((sj5)*(sj6));
IkReal x1162=((IkReal(0.998488012511589))*(cj4));
IkReal x1163=((IkReal(0.000100000000000000))*(sj6));
IkReal x1164=((cj0)*(r00));
IkReal x1165=((cj0)*(r02));
IkReal x1166=((IkReal(0.998488012511589))*(sj4));
IkReal x1167=((IkReal(1.00000000000000))*(cj6));
IkReal x1168=((IkReal(0.0549698905825417))*(cj4));
IkReal x1169=((IkReal(0.0549698905825417))*(sj4));
IkReal x1170=((IkReal(0.000100000000000000))*(cj6));
IkReal x1171=((r12)*(sj0));
IkReal x1172=((sj1)*(x1156));
IkReal x1173=((sj1)*(x1155));
IkReal x1174=((cj5)*(x1167));
IkReal x1175=((cj1)*(x1155));
IkReal x1176=((cj1)*(x1156));
IkReal x1177=((IkReal(1.00000000000000))*(cj5)*(sj6));
evalcond[0]=((((IkReal(0.247179770989156))*(x1173)))+(((r20)*(x1170)))+(((IkReal(-1.00000000000000))*(r21)*(x1163)))+(((IkReal(-0.155600000000000))*(cj1)))+(((IkReal(0.0217202857658142))*(x1175)))+(((IkReal(0.0217202857658142))*(x1172)))+(pz)+(((IkReal(-0.247179770989156))*(x1176))));
evalcond[1]=((((cj5)*(r22)))+(((r20)*(x1161)))+(((IkReal(0.0549698905825417))*(x1175)))+(((IkReal(0.0549698905825417))*(x1172)))+(((IkReal(-0.998488012511589))*(x1176)))+(((IkReal(0.998488012511589))*(x1173)))+(((r21)*(x1158))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(x1167)))+(((x1166)*(x1175)))+(((x1166)*(x1172)))+(((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(x1169)*(x1173)))+(((x1169)*(x1176))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r21)*(x1174)))+(((IkReal(-1.00000000000000))*(r20)*(x1177)))+(((IkReal(-1.00000000000000))*(x1168)*(x1173)))+(((x1168)*(x1176)))+(((r22)*(sj5)))+(((x1162)*(x1175)))+(((x1162)*(x1172))));
evalcond[4]=((((x1166)*(x1173)))+(((IkReal(-1.00000000000000))*(x1164)*(x1167)))+(((IkReal(-1.00000000000000))*(x1160)*(x1167)))+(((sj6)*(x1157)))+(((sj6)*(x1159)))+(((IkReal(-1.00000000000000))*(x1166)*(x1176)))+(((x1169)*(x1175)))+(((x1169)*(x1172))));
evalcond[5]=((((x1164)*(x1170)))+(((IkReal(-0.0217202857658142))*(x1176)))+(((IkReal(-1.00000000000000))*(x1159)*(x1163)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(0.0217202857658142))*(x1173)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(-1.00000000000000))*(x1157)*(x1163)))+(((IkReal(-0.247179770989156))*(x1175)))+(((IkReal(-0.247179770989156))*(x1172)))+(((x1160)*(x1170))));
evalcond[6]=((((IkReal(-0.0549698905825417))*(x1176)))+(((x1158)*(x1159)))+(((IkReal(0.0549698905825417))*(x1173)))+(((cj5)*(x1165)))+(((cj5)*(x1171)))+(((IkReal(-0.998488012511589))*(x1175)))+(((IkReal(-0.998488012511589))*(x1172)))+(((x1160)*(x1161)))+(((x1157)*(x1158)))+(((x1161)*(x1164))));
evalcond[7]=((((x1168)*(x1175)))+(((x1168)*(x1172)))+(((IkReal(-1.00000000000000))*(x1159)*(x1174)))+(((IkReal(-1.00000000000000))*(x1162)*(x1176)))+(((x1162)*(x1173)))+(((IkReal(-1.00000000000000))*(x1164)*(x1177)))+(((IkReal(-1.00000000000000))*(x1157)*(x1174)))+(((sj5)*(x1171)))+(((IkReal(-1.00000000000000))*(x1160)*(x1177)))+(((sj5)*(x1165))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1178=((sj4)*(sj5));
IkReal x1179=((IkReal(0.0549698905825417))*(cj6));
IkReal x1180=((r20)*(sj1));
IkReal x1181=((r21)*(sj6));
IkReal x1182=((IkReal(0.998488012511589))*(sj1));
IkReal x1183=((IkReal(0.0549698905825417))*(cj1));
IkReal x1184=((cj1)*(r21));
IkReal x1185=((cj1)*(r20));
IkReal x1186=((IkReal(0.998488012511589))*(cj6));
IkReal x1187=((IkReal(0.998488012511589))*(cj1));
IkReal x1188=((IkReal(0.0549698905825417))*(sj1));
IkReal x1189=((IkReal(0.998488012511589))*(x1180));
IkReal x1190=((cj5)*(r22)*(sj4));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x1181)*(x1188)))+(((x1182)*(x1190)))+(((x1183)*(x1190)))+(((x1179)*(x1180)))+(((sj6)*(x1178)*(x1189)))+(((x1181)*(x1187)))+(((r20)*(sj6)*(x1178)*(x1183)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))+(((x1178)*(x1179)*(x1184)))+(((cj6)*(r21)*(x1178)*(x1182))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(0.0549698905825417))*(sj6)*(x1178)*(x1180)))+(((x1188)*(x1190)))+(((IkReal(-1.00000000000000))*(x1179)*(x1185)))+(((IkReal(-1.00000000000000))*(x1178)*(x1184)*(x1186)))+(((IkReal(-0.998488012511589))*(sj6)*(x1178)*(x1185)))+(((IkReal(-1.00000000000000))*(x1187)*(x1190)))+(((IkReal(-1.00000000000000))*(x1180)*(x1186)))+(((r21)*(sj1)*(x1178)*(x1179)))+(((x1181)*(x1183)))+(((x1181)*(x1182))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x1181)*(x1188)))+(((x1182)*(x1190)))+(((x1183)*(x1190)))+(((x1179)*(x1180)))+(((sj6)*(x1178)*(x1189)))+(((x1181)*(x1187)))+(((r20)*(sj6)*(x1178)*(x1183)))+(((IkReal(-1.00000000000000))*(x1185)*(x1186)))+(((x1178)*(x1179)*(x1184)))+(((cj6)*(r21)*(x1178)*(x1182)))))), ((gconst6)*(((((IkReal(0.0549698905825417))*(sj6)*(x1178)*(x1180)))+(((x1188)*(x1190)))+(((IkReal(-1.00000000000000))*(x1179)*(x1185)))+(((IkReal(-1.00000000000000))*(x1178)*(x1184)*(x1186)))+(((IkReal(-0.998488012511589))*(sj6)*(x1178)*(x1185)))+(((IkReal(-1.00000000000000))*(x1187)*(x1190)))+(((IkReal(-1.00000000000000))*(x1180)*(x1186)))+(((r21)*(sj1)*(x1178)*(x1179)))+(((x1181)*(x1183)))+(((x1181)*(x1182)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x1191=IKsin(j3);
IkReal x1192=IKcos(j3);
IkReal x1193=((r11)*(sj0));
IkReal x1194=((cj6)*(sj5));
IkReal x1195=((cj0)*(r01));
IkReal x1196=((r10)*(sj0));
IkReal x1197=((sj5)*(sj6));
IkReal x1198=((IkReal(0.998488012511589))*(cj4));
IkReal x1199=((IkReal(0.000100000000000000))*(sj6));
IkReal x1200=((cj0)*(r00));
IkReal x1201=((cj0)*(r02));
IkReal x1202=((IkReal(0.998488012511589))*(sj4));
IkReal x1203=((IkReal(1.00000000000000))*(cj6));
IkReal x1204=((IkReal(0.0549698905825417))*(cj4));
IkReal x1205=((IkReal(0.0549698905825417))*(sj4));
IkReal x1206=((IkReal(0.000100000000000000))*(cj6));
IkReal x1207=((r12)*(sj0));
IkReal x1208=((sj1)*(x1192));
IkReal x1209=((sj1)*(x1191));
IkReal x1210=((cj5)*(x1203));
IkReal x1211=((cj1)*(x1191));
IkReal x1212=((cj1)*(x1192));
IkReal x1213=((IkReal(1.00000000000000))*(cj5)*(sj6));
evalcond[0]=((((IkReal(0.247179770989156))*(x1209)))+(((IkReal(-0.247179770989156))*(x1212)))+(((IkReal(0.0217202857658142))*(x1208)))+(((IkReal(-0.155600000000000))*(cj1)))+(((r20)*(x1206)))+(pz)+(((IkReal(0.0217202857658142))*(x1211)))+(((IkReal(-1.00000000000000))*(r21)*(x1199))));
evalcond[1]=((((cj5)*(r22)))+(((IkReal(0.0549698905825417))*(x1211)))+(((IkReal(0.998488012511589))*(x1209)))+(((IkReal(0.0549698905825417))*(x1208)))+(((r21)*(x1194)))+(((IkReal(-0.998488012511589))*(x1212)))+(((r20)*(x1197))));
evalcond[2]=((((r21)*(sj6)))+(((x1202)*(x1208)))+(((IkReal(-1.00000000000000))*(x1205)*(x1209)))+(((x1205)*(x1212)))+(((IkReal(-1.00000000000000))*(r20)*(x1203)))+(((x1202)*(x1211))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1204)*(x1209)))+(((r22)*(sj5)))+(((x1204)*(x1212)))+(((x1198)*(x1211)))+(((IkReal(-1.00000000000000))*(r20)*(x1213)))+(((IkReal(-1.00000000000000))*(r21)*(x1210)))+(((x1198)*(x1208))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(x1202)*(x1212)))+(((x1202)*(x1209)))+(((IkReal(-1.00000000000000))*(x1200)*(x1203)))+(((sj6)*(x1193)))+(((sj6)*(x1195)))+(((x1205)*(x1208)))+(((x1205)*(x1211))));
evalcond[5]=((((IkReal(-0.247179770989156))*(x1208)))+(((IkReal(-0.247179770989156))*(x1211)))+(((IkReal(-1.00000000000000))*(x1193)*(x1199)))+(((IkReal(0.0217202857658142))*(x1209)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x1195)*(x1199)))+(((x1200)*(x1206)))+(((IkReal(-0.0217202857658142))*(x1212)))+(((cj0)*(px)))+(((py)*(sj0)))+(((x1196)*(x1206))));
evalcond[6]=((((cj5)*(x1207)))+(((cj5)*(x1201)))+(((x1194)*(x1195)))+(((IkReal(0.0549698905825417))*(x1209)))+(((IkReal(-0.998488012511589))*(x1208)))+(((IkReal(-0.0549698905825417))*(x1212)))+(((x1197)*(x1200)))+(((x1196)*(x1197)))+(((IkReal(-0.998488012511589))*(x1211)))+(((x1193)*(x1194))));
evalcond[7]=((((x1204)*(x1208)))+(((IkReal(-1.00000000000000))*(x1200)*(x1213)))+(((x1204)*(x1211)))+(((IkReal(-1.00000000000000))*(x1198)*(x1212)))+(((IkReal(-1.00000000000000))*(x1196)*(x1213)))+(((sj5)*(x1207)))+(((sj5)*(x1201)))+(((IkReal(-1.00000000000000))*(x1195)*(x1210)))+(((x1198)*(x1209)))+(((IkReal(-1.00000000000000))*(x1193)*(x1210))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1214=(sj1)*(sj1);
IkReal x1215=(cj1)*(cj1);
IkReal x1216=((cj1)*(sj0));
IkReal x1217=((IkReal(0.0217202857658142))*(py));
IkReal x1218=((IkReal(0.0217202857658142))*(sj1));
IkReal x1219=((IkReal(2.47179770989156e-5))*(cj6));
IkReal x1220=((cj0)*(px));
IkReal x1221=((cj0)*(r01));
IkReal x1222=((IkReal(2.47179770989156e-5))*(sj6));
IkReal x1223=((cj0)*(r00));
IkReal x1224=((IkReal(2.17202857658142e-6))*(cj6));
IkReal x1225=((IkReal(0.0217202857658142))*(cj1));
IkReal x1226=((cj1)*(r20));
IkReal x1227=((r11)*(sj0));
IkReal x1228=((IkReal(0.247179770989156))*(cj1));
IkReal x1229=((IkReal(0.247179770989156))*(sj1));
IkReal x1230=((IkReal(2.17202857658142e-6))*(sj6));
IkReal x1231=((r20)*(sj1));
IkReal x1232=((sj1)*(x1222));
IkReal x1233=((cj1)*(x1230));
IkReal x1234=((r10)*(sj0)*(sj1));
if( IKabs(((gconst0)*(((((IkReal(0.247179770989156))*(py)*(x1216)))+(((sj1)*(x1227)*(x1230)))+(((IkReal(-1.00000000000000))*(cj1)*(x1221)*(x1222)))+(((r10)*(x1216)*(x1219)))+(((IkReal(-1.00000000000000))*(x1224)*(x1226)))+(((IkReal(-1.00000000000000))*(x1224)*(x1234)))+(((IkReal(-1.00000000000000))*(x1218)*(x1220)))+(((IkReal(0.00337967646516069))*(x1214)))+(((IkReal(0.00337967646516069))*(x1215)))+(((IkReal(-1.00000000000000))*(r11)*(x1216)*(x1222)))+(((IkReal(-1.00000000000000))*(pz)*(x1229)))+(((IkReal(-1.00000000000000))*(pz)*(x1225)))+(((x1220)*(x1228)))+(((IkReal(-1.00000000000000))*(sj0)*(sj1)*(x1217)))+(((cj1)*(x1219)*(x1223)))+(((sj1)*(x1221)*(x1230)))+(((IkReal(-1.00000000000000))*(sj1)*(x1223)*(x1224)))+(((r21)*(x1233)))+(((r21)*(x1232)))+(((IkReal(-1.00000000000000))*(x1219)*(x1231))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r21)*(sj1)*(x1230)))+(((r10)*(x1216)*(x1224)))+(((x1219)*(x1234)))+(((IkReal(-1.00000000000000))*(x1224)*(x1231)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(x1222)))+(((x1219)*(x1226)))+(((pz)*(x1228)))+(((py)*(sj0)*(x1229)))+(((cj1)*(x1223)*(x1224)))+(((sj1)*(x1219)*(x1223)))+(((IkReal(-1.00000000000000))*(x1221)*(x1233)))+(((IkReal(-1.00000000000000))*(x1221)*(x1232)))+(((IkReal(-1.00000000000000))*(r11)*(x1216)*(x1230)))+(((IkReal(-1.00000000000000))*(x1227)*(x1232)))+(((IkReal(-0.0384611723659126))*(x1214)))+(((IkReal(-0.0384611723659126))*(x1215)))+(((x1220)*(x1229)))+(((x1220)*(x1225)))+(((x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(pz)*(x1218))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst0)*(((((IkReal(0.247179770989156))*(py)*(x1216)))+(((sj1)*(x1227)*(x1230)))+(((IkReal(-1.00000000000000))*(cj1)*(x1221)*(x1222)))+(((r10)*(x1216)*(x1219)))+(((IkReal(-1.00000000000000))*(x1224)*(x1226)))+(((IkReal(-1.00000000000000))*(x1224)*(x1234)))+(((IkReal(-1.00000000000000))*(x1218)*(x1220)))+(((IkReal(0.00337967646516069))*(x1214)))+(((IkReal(0.00337967646516069))*(x1215)))+(((IkReal(-1.00000000000000))*(r11)*(x1216)*(x1222)))+(((IkReal(-1.00000000000000))*(pz)*(x1229)))+(((IkReal(-1.00000000000000))*(pz)*(x1225)))+(((x1220)*(x1228)))+(((IkReal(-1.00000000000000))*(sj0)*(sj1)*(x1217)))+(((cj1)*(x1219)*(x1223)))+(((sj1)*(x1221)*(x1230)))+(((IkReal(-1.00000000000000))*(sj1)*(x1223)*(x1224)))+(((r21)*(x1233)))+(((r21)*(x1232)))+(((IkReal(-1.00000000000000))*(x1219)*(x1231)))))), ((gconst0)*(((((r21)*(sj1)*(x1230)))+(((r10)*(x1216)*(x1224)))+(((x1219)*(x1234)))+(((IkReal(-1.00000000000000))*(x1224)*(x1231)))+(((IkReal(-1.00000000000000))*(cj1)*(r21)*(x1222)))+(((x1219)*(x1226)))+(((pz)*(x1228)))+(((py)*(sj0)*(x1229)))+(((cj1)*(x1223)*(x1224)))+(((sj1)*(x1219)*(x1223)))+(((IkReal(-1.00000000000000))*(x1221)*(x1233)))+(((IkReal(-1.00000000000000))*(x1221)*(x1232)))+(((IkReal(-1.00000000000000))*(r11)*(x1216)*(x1230)))+(((IkReal(-1.00000000000000))*(x1227)*(x1232)))+(((IkReal(-0.0384611723659126))*(x1214)))+(((IkReal(-0.0384611723659126))*(x1215)))+(((x1220)*(x1229)))+(((x1220)*(x1225)))+(((x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(pz)*(x1218)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1235=IKsin(j3);
IkReal x1236=IKcos(j3);
IkReal x1237=((IkReal(0.000100000000000000))*(sj6));
IkReal x1238=((IkReal(0.000100000000000000))*(cj6));
IkReal x1239=((IkReal(0.247179770989156))*(x1235));
IkReal x1240=((IkReal(0.0217202857658142))*(x1236));
IkReal x1241=((IkReal(0.0217202857658142))*(x1235));
IkReal x1242=((IkReal(0.247179770989156))*(x1236));
evalcond[0]=((((sj1)*(x1239)))+(((r20)*(x1238)))+(((cj1)*(x1241)))+(((IkReal(-1.00000000000000))*(cj1)*(x1242)))+(((IkReal(-1.00000000000000))*(r21)*(x1237)))+(((IkReal(-0.155600000000000))*(cj1)))+(pz)+(((sj1)*(x1240))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1242)))+(((IkReal(-1.00000000000000))*(cj1)*(x1240)))+(((IkReal(-1.00000000000000))*(cj0)*(r01)*(x1237)))+(((IkReal(-0.155600000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(r11)*(sj0)*(x1237)))+(((IkReal(-1.00000000000000))*(cj1)*(x1239)))+(((sj1)*(x1241)))+(((cj0)*(px)))+(((py)*(sj0)))+(((cj0)*(r00)*(x1238)))+(((r10)*(sj0)*(x1238))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst22;
IkReal x1243=((r20)*(sj6));
IkReal x1244=((cj0)*(r12));
IkReal x1245=((r22)*(sj0));
IkReal x1246=((cj6)*(r21));
IkReal x1247=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1248=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst22=IKsign(((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1247)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1247)))+(((IkReal(-1.00000000000000))*(x1243)*(x1248)))+(((cj6)*(r01)*(x1245)))+(((x1244)*(x1246)))+(((x1243)*(x1244)))+(((IkReal(-1.00000000000000))*(x1246)*(x1248)))+(((r00)*(sj6)*(x1245)))));
IkReal x1249=((r20)*(sj6));
IkReal x1250=((cj0)*(r12));
IkReal x1251=((r22)*(sj0));
IkReal x1252=((cj6)*(r21));
IkReal x1253=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1254=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1249)*(x1254)))+(((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((r00)*(sj6)*(x1251)))+(((x1250)*(x1252)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1253)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1253)))+(((x1249)*(x1250)))+(((cj6)*(r01)*(x1251))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x1255=(cj0)*(cj0);
IkReal x1256=(sj0)*(sj0);
IkReal x1257=((r01)*(r12));
IkReal x1258=((IkReal(1.00000000000000))*(r02));
IkReal x1259=((r00)*(r12));
IkReal x1260=((cj6)*(x1255));
IkReal x1261=((sj6)*(x1255));
IkReal x1262=((cj6)*(x1256));
IkReal x1263=((sj6)*(x1256));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x1258)*(x1260)))+(((IkReal(-1.00000000000000))*(r11)*(x1258)*(x1262)))+(((IkReal(-1.00000000000000))*(r10)*(x1258)*(x1261)))+(((IkReal(-1.00000000000000))*(r10)*(x1258)*(x1263)))+(((x1259)*(x1261)))+(((x1259)*(x1263)))+(((x1257)*(x1260)))+(((x1257)*(x1262)))));
IkReal x1264=(cj0)*(cj0);
IkReal x1265=(sj0)*(sj0);
IkReal x1266=((r01)*(r12));
IkReal x1267=((IkReal(1.00000000000000))*(r02));
IkReal x1268=((r00)*(r12));
IkReal x1269=((cj6)*(x1264));
IkReal x1270=((sj6)*(x1264));
IkReal x1271=((cj6)*(x1265));
IkReal x1272=((sj6)*(x1265));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r11)*(x1267)*(x1271)))+(((IkReal(-1.00000000000000))*(r10)*(x1267)*(x1272)))+(((IkReal(-1.00000000000000))*(r10)*(x1267)*(x1270)))+(((IkReal(-1.00000000000000))*(r11)*(x1267)*(x1269)))+(((x1266)*(x1271)))+(((x1266)*(x1269)))+(((x1268)*(x1270)))+(((x1268)*(x1272))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(18.1642714207750))*(cj1)*(sj3)))+(((IkReal(-1.00000000000000))*(sj1)*(sj3)))+(((IkReal(18.1642714207750))*(cj3)*(sj1)))+(((cj1)*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1273=((IkReal(1.00000000000000))*(sj6));
if( IKabs(((((IKabs(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1273))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1273)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj0))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1273)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1273)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj0)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3))))) != 0)?((IkReal)1/(((((IkReal(-0.0549698905825417))*(sj1)*(sj3)))+(((IkReal(0.998488012511589))*(cj3)*(sj1)))+(((IkReal(0.998488012511589))*(cj1)*(sj3)))+(((IkReal(0.0549698905825417))*(cj1)*(cj3)))))):(IkReal)1.0e30))*(((((cj6)*(r20)))+(((IkReal(-1.00000000000000))*(r21)*(x1273)))))), ((((IkReal(-1.00000000000000))*(cj0)*(r11)*(x1273)))+(((r01)*(sj0)*(sj6)))+(((cj0)*(cj6)*(r10)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(sj0)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1274=IKsin(j4);
IkReal x1275=((IkReal(0.998488012511589))*(cj3));
IkReal x1276=((IkReal(0.0549698905825417))*(sj3));
IkReal x1277=((sj0)*(sj6));
IkReal x1278=((cj6)*(r10));
IkReal x1279=((IkReal(1.00000000000000))*(cj6));
IkReal x1280=((IkReal(0.998488012511589))*(sj3));
IkReal x1281=((IkReal(0.0549698905825417))*(cj3));
IkReal x1282=((cj0)*(sj6));
IkReal x1283=((cj1)*(x1274));
IkReal x1284=((sj1)*(x1274));
evalcond[0]=((((cj0)*(x1278)))+(((IkReal(-1.00000000000000))*(r11)*(x1282)))+(((r01)*(x1277)))+(((IkReal(-1.00000000000000))*(IKcos(j4))))+(((IkReal(-1.00000000000000))*(r00)*(sj0)*(x1279))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1276)*(x1284)))+(((r21)*(sj6)))+(((x1275)*(x1284)))+(((x1280)*(x1283)))+(((x1281)*(x1283)))+(((IkReal(-1.00000000000000))*(r20)*(x1279))));
evalcond[2]=((((r11)*(x1277)))+(((IkReal(-1.00000000000000))*(x1275)*(x1283)))+(((r01)*(x1282)))+(((x1276)*(x1283)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)*(x1279)))+(((x1280)*(x1284)))+(((IkReal(-1.00000000000000))*(sj0)*(x1278)))+(((x1281)*(x1284))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
IkReal x1285=(cj6)*(cj6);
IkReal x1286=(cj0)*(cj0);
IkReal x1287=(sj0)*(sj0);
IkReal x1288=(sj6)*(sj6);
IkReal x1289=((IkReal(2.00000000000000))*(r11));
IkReal x1290=((cj0)*(sj0));
IkReal x1291=((cj6)*(sj6));
IkReal x1292=((IkReal(2.00000000000000))*(r01));
IkReal x1293=((IkReal(1.00000000000000))*(x1286));
IkReal x1294=((IkReal(1.00000000000000))*(x1287));
gconst24=IKsign(((((r00)*(x1289)*(x1290)*(x1291)))+(((IkReal(-1.00000000000000))*(x1288)*(x1293)*((r10)*(r10))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x1288)*(x1290)))+(((IkReal(-1.00000000000000))*(x1293)*((r12)*(r12))))+(((IkReal(-1.00000000000000))*(x1285)*(x1294)*((r01)*(r01))))+(((r10)*(x1290)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(r10)*(x1286)*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(x1294)*((r02)*(r02))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x1290)))+(((IkReal(-1.00000000000000))*(x1288)*(x1294)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(x1287)*(x1291)*(x1292)))+(((r01)*(x1285)*(x1289)*(x1290)))+(((IkReal(-1.00000000000000))*(x1285)*(x1293)*((r11)*(r11))))));
IkReal x1295=(cj6)*(cj6);
IkReal x1296=(cj0)*(cj0);
IkReal x1297=(sj0)*(sj0);
IkReal x1298=(sj6)*(sj6);
IkReal x1299=((IkReal(2.00000000000000))*(r11));
IkReal x1300=((cj0)*(sj0));
IkReal x1301=((cj6)*(sj6));
IkReal x1302=((IkReal(2.00000000000000))*(r01));
IkReal x1303=((IkReal(1.00000000000000))*(x1296));
IkReal x1304=((IkReal(1.00000000000000))*(x1297));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(x1297)*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(r10)*(x1296)*(x1299)*(x1301)))+(((r01)*(x1295)*(x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(x1295)*(x1304)*((r01)*(r01))))+(((r10)*(x1300)*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(x1304)*((r02)*(r02))))+(((IkReal(-1.00000000000000))*(x1298)*(x1304)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1295)*(x1303)*((r11)*(r11))))+(((IkReal(2.00000000000000))*(r00)*(r10)*(x1298)*(x1300)))+(((IkReal(-1.00000000000000))*(x1303)*((r12)*(r12))))+(((IkReal(2.00000000000000))*(r02)*(r12)*(x1300)))+(((r00)*(x1299)*(x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(x1298)*(x1303)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst25;
IkReal x1305=((r20)*(sj6));
IkReal x1306=((cj0)*(r12));
IkReal x1307=((r22)*(sj0));
IkReal x1308=((cj6)*(r21));
IkReal x1309=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1310=((IkReal(1.00000000000000))*(r02)*(sj0));
gconst25=IKsign(((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1309)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1309)))+(((x1306)*(x1308)))+(((IkReal(-1.00000000000000))*(x1308)*(x1310)))+(((x1305)*(x1306)))+(((r00)*(sj6)*(x1307)))+(((IkReal(-1.00000000000000))*(x1305)*(x1310)))+(((cj6)*(r01)*(x1307)))));
IkReal x1311=((r20)*(sj6));
IkReal x1312=((cj0)*(r12));
IkReal x1313=((r22)*(sj0));
IkReal x1314=((cj6)*(r21));
IkReal x1315=((IkReal(1.00000000000000))*(cj0)*(r22));
IkReal x1316=((IkReal(1.00000000000000))*(r02)*(sj0));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1311)*(x1316)))+(((x1311)*(x1312)))+(((cj6)*(r01)*(x1313)))+(((IkReal(-1.00000000000000))*(x1314)*(x1316)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1315)))+(((r00)*(sj6)*(x1313)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1315)))+(((x1312)*(x1314))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1317=((cj0)*(sj3));
IkReal x1318=((IkReal(0.0549698905825417))*(r12));
IkReal x1319=((cj6)*(r01));
IkReal x1320=((cj0)*(cj3));
IkReal x1321=((r00)*(sj6));
IkReal x1322=((IkReal(0.0549698905825417))*(cj1));
IkReal x1323=((cj6)*(r11));
IkReal x1324=((r10)*(sj6));
IkReal x1325=((IkReal(0.0549698905825417))*(sj1));
IkReal x1326=((IkReal(0.998488012511589))*(cj1));
IkReal x1327=((sj0)*(sj3));
IkReal x1328=((IkReal(0.998488012511589))*(sj1));
IkReal x1329=((cj3)*(sj0));
IkReal x1330=((IkReal(0.998488012511589))*(x1324));
IkReal x1331=((x1327)*(x1328));
IkReal x1332=((x1325)*(x1329));
if( IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(sj1)*(x1318)*(x1320)))+(((IkReal(-1.00000000000000))*(r02)*(x1326)*(x1329)))+(((IkReal(-1.00000000000000))*(r12)*(x1317)*(x1328)))+(((r02)*(x1331)))+(((r02)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(x1317)*(x1318)))+(((r02)*(x1322)*(x1327)))+(((r12)*(x1320)*(x1326))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((x1317)*(x1323)*(x1328)))+(((x1321)*(x1326)*(x1329)))+(((IkReal(-1.00000000000000))*(x1319)*(x1332)))+(((IkReal(-1.00000000000000))*(x1319)*(x1331)))+(((IkReal(-1.00000000000000))*(x1319)*(x1322)*(x1327)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)*(x1327)))+(((IkReal(-1.00000000000000))*(x1320)*(x1324)*(x1326)))+(((IkReal(-1.00000000000000))*(x1320)*(x1323)*(x1326)))+(((x1320)*(x1324)*(x1325)))+(((x1319)*(x1326)*(x1329)))+(((x1320)*(x1323)*(x1325)))+(((x1317)*(x1324)*(x1328)))+(((x1317)*(x1322)*(x1324)))+(((x1317)*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(x1321)*(x1331)))+(((IkReal(-1.00000000000000))*(x1321)*(x1332))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst25)*(((((IkReal(-1.00000000000000))*(sj1)*(x1318)*(x1320)))+(((IkReal(-1.00000000000000))*(r02)*(x1326)*(x1329)))+(((IkReal(-1.00000000000000))*(r12)*(x1317)*(x1328)))+(((r02)*(x1331)))+(((r02)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(x1317)*(x1318)))+(((r02)*(x1322)*(x1327)))+(((r12)*(x1320)*(x1326)))))), ((gconst25)*(((((x1317)*(x1323)*(x1328)))+(((x1321)*(x1326)*(x1329)))+(((IkReal(-1.00000000000000))*(x1319)*(x1332)))+(((IkReal(-1.00000000000000))*(x1319)*(x1331)))+(((IkReal(-1.00000000000000))*(x1319)*(x1322)*(x1327)))+(((IkReal(-1.00000000000000))*(x1321)*(x1322)*(x1327)))+(((IkReal(-1.00000000000000))*(x1320)*(x1324)*(x1326)))+(((IkReal(-1.00000000000000))*(x1320)*(x1323)*(x1326)))+(((x1320)*(x1324)*(x1325)))+(((x1319)*(x1326)*(x1329)))+(((x1320)*(x1323)*(x1325)))+(((x1317)*(x1324)*(x1328)))+(((x1317)*(x1322)*(x1324)))+(((x1317)*(x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(x1321)*(x1331)))+(((IkReal(-1.00000000000000))*(x1321)*(x1332)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1333=IKsin(j5);
IkReal x1334=IKcos(j5);
IkReal x1335=((cj3)*(sj1));
IkReal x1336=((IkReal(1.00000000000000))*(cj0));
IkReal x1337=((IkReal(0.998488012511589))*(cj4));
IkReal x1338=((r11)*(sj0));
IkReal x1339=((IkReal(0.0549698905825417))*(sj3));
IkReal x1340=((IkReal(0.0549698905825417))*(cj4));
IkReal x1341=((cj1)*(cj3));
IkReal x1342=((r01)*(sj0));
IkReal x1343=((r00)*(sj0));
IkReal x1344=((sj1)*(sj3));
IkReal x1345=((cj1)*(sj3));
IkReal x1346=((r10)*(sj0));
IkReal x1347=((sj6)*(x1333));
IkReal x1348=((r12)*(x1334));
IkReal x1349=((r02)*(x1334));
IkReal x1350=((cj6)*(x1333));
IkReal x1351=((r12)*(x1333));
IkReal x1352=((sj6)*(x1334));
IkReal x1353=((r02)*(x1333));
IkReal x1354=((cj6)*(x1334));
IkReal x1355=((IkReal(1.00000000000000))*(x1354));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1336)*(x1348)))+(((IkReal(-1.00000000000000))*(r10)*(x1336)*(x1347)))+(((sj0)*(x1349)))+(((IkReal(-1.00000000000000))*(r11)*(x1336)*(x1350)))+(((x1342)*(x1350)))+(((x1343)*(x1347))));
evalcond[1]=((((IkReal(0.0549698905825417))*(x1335)))+(((IkReal(-0.998488012511589))*(x1341)))+(((cj1)*(x1339)))+(((r22)*(x1334)))+(((IkReal(0.998488012511589))*(x1344)))+(((r20)*(x1347)))+(((r21)*(x1350))));
evalcond[2]=((sj4)+(((IkReal(-1.00000000000000))*(x1336)*(x1351)))+(((sj0)*(x1353)))+(((cj0)*(r11)*(x1354)))+(((IkReal(-1.00000000000000))*(x1343)*(x1352)))+(((cj0)*(r10)*(x1352)))+(((IkReal(-1.00000000000000))*(x1342)*(x1355))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1352)))+(((IkReal(-1.00000000000000))*(r21)*(x1355)))+(((x1335)*(x1337)))+(((x1340)*(x1341)))+(((x1337)*(x1345)))+(((r22)*(x1333)))+(((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x1339))));
evalcond[4]=((((sj0)*(x1348)))+(((IkReal(-0.0549698905825417))*(x1341)))+(((cj0)*(r01)*(x1350)))+(((x1346)*(x1347)))+(((cj0)*(r00)*(x1347)))+(((IkReal(-0.998488012511589))*(x1345)))+(((cj0)*(x1349)))+(((sj1)*(x1339)))+(((x1338)*(x1350)))+(((IkReal(-0.998488012511589))*(x1335))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1338)*(x1355)))+(((IkReal(-1.00000000000000))*(x1346)*(x1352)))+(((sj0)*(x1351)))+(((cj1)*(cj4)*(x1339)))+(((x1337)*(x1344)))+(((IkReal(-1.00000000000000))*(r00)*(x1336)*(x1352)))+(((x1335)*(x1340)))+(((cj0)*(x1353)))+(((IkReal(-1.00000000000000))*(r01)*(x1336)*(x1354)))+(((IkReal(-1.00000000000000))*(x1337)*(x1341))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1356=((cj0)*(sj4));
IkReal x1357=((sj0)*(sj4));
if( IKabs(((gconst24)*(((((r02)*(x1357)))+(((IkReal(-1.00000000000000))*(r12)*(x1356))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((r10)*(sj6)*(x1356)))+(((cj6)*(r11)*(x1356)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1357)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1357))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst24)*(((((r02)*(x1357)))+(((IkReal(-1.00000000000000))*(r12)*(x1356)))))), ((gconst24)*(((((r10)*(sj6)*(x1356)))+(((cj6)*(r11)*(x1356)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1357)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1357)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[6];
IkReal x1358=IKsin(j5);
IkReal x1359=IKcos(j5);
IkReal x1360=((cj3)*(sj1));
IkReal x1361=((IkReal(1.00000000000000))*(cj0));
IkReal x1362=((IkReal(0.998488012511589))*(cj4));
IkReal x1363=((r11)*(sj0));
IkReal x1364=((IkReal(0.0549698905825417))*(sj3));
IkReal x1365=((IkReal(0.0549698905825417))*(cj4));
IkReal x1366=((cj1)*(cj3));
IkReal x1367=((r01)*(sj0));
IkReal x1368=((r00)*(sj0));
IkReal x1369=((sj1)*(sj3));
IkReal x1370=((cj1)*(sj3));
IkReal x1371=((r10)*(sj0));
IkReal x1372=((sj6)*(x1358));
IkReal x1373=((r12)*(x1359));
IkReal x1374=((r02)*(x1359));
IkReal x1375=((cj6)*(x1358));
IkReal x1376=((r12)*(x1358));
IkReal x1377=((sj6)*(x1359));
IkReal x1378=((r02)*(x1358));
IkReal x1379=((cj6)*(x1359));
IkReal x1380=((IkReal(1.00000000000000))*(x1379));
evalcond[0]=((((x1367)*(x1375)))+(((IkReal(-1.00000000000000))*(r11)*(x1361)*(x1375)))+(((x1368)*(x1372)))+(((IkReal(-1.00000000000000))*(x1361)*(x1373)))+(((sj0)*(x1374)))+(((IkReal(-1.00000000000000))*(r10)*(x1361)*(x1372))));
evalcond[1]=((((r22)*(x1359)))+(((cj1)*(x1364)))+(((IkReal(-0.998488012511589))*(x1366)))+(((IkReal(0.0549698905825417))*(x1360)))+(((r21)*(x1375)))+(((IkReal(0.998488012511589))*(x1369)))+(((r20)*(x1372))));
evalcond[2]=((sj4)+(((cj0)*(r11)*(x1379)))+(((IkReal(-1.00000000000000))*(x1367)*(x1380)))+(((cj0)*(r10)*(x1377)))+(((IkReal(-1.00000000000000))*(x1361)*(x1376)))+(((sj0)*(x1378)))+(((IkReal(-1.00000000000000))*(x1368)*(x1377))));
evalcond[3]=((((r22)*(x1358)))+(((IkReal(-1.00000000000000))*(r20)*(x1377)))+(((x1360)*(x1362)))+(((IkReal(-1.00000000000000))*(r21)*(x1380)))+(((x1365)*(x1366)))+(((x1362)*(x1370)))+(((IkReal(-1.00000000000000))*(cj4)*(sj1)*(x1364))));
evalcond[4]=((((IkReal(-0.998488012511589))*(x1370)))+(((IkReal(-0.0549698905825417))*(x1366)))+(((sj1)*(x1364)))+(((IkReal(-0.998488012511589))*(x1360)))+(((x1371)*(x1372)))+(((cj0)*(r01)*(x1375)))+(((cj0)*(r00)*(x1372)))+(((cj0)*(x1374)))+(((sj0)*(x1373)))+(((x1363)*(x1375))));
evalcond[5]=((((cj1)*(cj4)*(x1364)))+(((x1360)*(x1365)))+(((IkReal(-1.00000000000000))*(x1371)*(x1377)))+(((IkReal(-1.00000000000000))*(r01)*(x1361)*(x1379)))+(((IkReal(-1.00000000000000))*(r00)*(x1361)*(x1377)))+(((IkReal(-1.00000000000000))*(x1362)*(x1366)))+(((cj0)*(x1378)))+(((sj0)*(x1376)))+(((IkReal(-1.00000000000000))*(x1363)*(x1380)))+(((x1362)*(x1369))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1381=((IkReal(0.0549698905825417))*(cj1));
IkReal x1382=((cj0)*(sj3));
IkReal x1383=((r12)*(sj1));
IkReal x1384=((IkReal(0.998488012511589))*(sj1));
IkReal x1385=((r10)*(sj6));
IkReal x1386=((IkReal(0.998488012511589))*(cj1));
IkReal x1387=((cj0)*(cj3));
IkReal x1388=((cj3)*(sj0));
IkReal x1389=((cj6)*(r01));
IkReal x1390=((IkReal(0.0549698905825417))*(sj1));
IkReal x1391=((sj0)*(sj3));
IkReal x1392=((cj6)*(r11));
IkReal x1393=((r00)*(sj6));
IkReal x1394=((x1388)*(x1393));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r02)*(x1384)*(x1388)))+(((r12)*(x1382)*(x1386)))+(((IkReal(-0.0549698905825417))*(x1382)*(x1383)))+(((r02)*(x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(x1381)*(x1388)))+(((r12)*(x1381)*(x1387)))+(((IkReal(-1.00000000000000))*(r02)*(x1386)*(x1391)))+(((IkReal(0.998488012511589))*(x1383)*(x1387))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(x1389)*(x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(x1382)*(x1386)*(x1392)))+(((IkReal(-1.00000000000000))*(x1381)*(x1385)*(x1387)))+(((x1382)*(x1390)*(x1392)))+(((IkReal(-1.00000000000000))*(x1382)*(x1385)*(x1386)))+(((IkReal(-1.00000000000000))*(x1384)*(x1387)*(x1392)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)*(x1387)))+(((x1386)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(x1381)*(x1387)*(x1392)))+(((IkReal(-1.00000000000000))*(x1390)*(x1391)*(x1393)))+(((x1384)*(x1388)*(x1389)))+(((x1386)*(x1389)*(x1391)))+(((x1384)*(x1394)))+(((x1381)*(x1388)*(x1389)))+(((x1382)*(x1385)*(x1390)))+(((x1381)*(x1394))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r02)*(x1384)*(x1388)))+(((r12)*(x1382)*(x1386)))+(((IkReal(-0.0549698905825417))*(x1382)*(x1383)))+(((r02)*(x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(x1381)*(x1388)))+(((r12)*(x1381)*(x1387)))+(((IkReal(-1.00000000000000))*(r02)*(x1386)*(x1391)))+(((IkReal(0.998488012511589))*(x1383)*(x1387)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(x1389)*(x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(x1382)*(x1386)*(x1392)))+(((IkReal(-1.00000000000000))*(x1381)*(x1385)*(x1387)))+(((x1382)*(x1390)*(x1392)))+(((IkReal(-1.00000000000000))*(x1382)*(x1385)*(x1386)))+(((IkReal(-1.00000000000000))*(x1384)*(x1387)*(x1392)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)*(x1387)))+(((x1386)*(x1391)*(x1393)))+(((IkReal(-1.00000000000000))*(x1381)*(x1387)*(x1392)))+(((IkReal(-1.00000000000000))*(x1390)*(x1391)*(x1393)))+(((x1384)*(x1388)*(x1389)))+(((x1386)*(x1389)*(x1391)))+(((x1384)*(x1394)))+(((x1381)*(x1388)*(x1389)))+(((x1382)*(x1385)*(x1390)))+(((x1381)*(x1394)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1395=IKsin(j5);
IkReal x1396=IKcos(j5);
IkReal x1397=((IkReal(0.0549698905825417))*(cj3));
IkReal x1398=((IkReal(1.00000000000000))*(cj0));
IkReal x1399=((IkReal(0.0549698905825417))*(sj3));
IkReal x1400=((IkReal(0.998488012511589))*(sj3));
IkReal x1401=((IkReal(0.998488012511589))*(cj3));
IkReal x1402=((sj6)*(x1395));
IkReal x1403=((r12)*(x1396));
IkReal x1404=((r02)*(x1396));
IkReal x1405=((cj6)*(x1395));
evalcond[0]=((((r00)*(sj0)*(x1402)))+(((IkReal(-1.00000000000000))*(r11)*(x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(r10)*(x1398)*(x1402)))+(((IkReal(-1.00000000000000))*(x1398)*(x1403)))+(((sj0)*(x1404)))+(((r01)*(sj0)*(x1405))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1401)))+(((sj1)*(x1400)))+(((r20)*(x1402)))+(((sj1)*(x1397)))+(((r21)*(x1405)))+(((r22)*(x1396)))+(((cj1)*(x1399))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)*(x1401)))+(((IkReal(-1.00000000000000))*(cj1)*(x1400)))+(((r10)*(sj0)*(x1402)))+(((cj0)*(r01)*(x1405)))+(((cj0)*(r00)*(x1402)))+(((cj0)*(x1404)))+(((sj1)*(x1399)))+(((sj0)*(x1403)))+(((r11)*(sj0)*(x1405)))+(((IkReal(-1.00000000000000))*(cj1)*(x1397))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1406=((cj0)*(cj6));
IkReal x1407=((IkReal(1.00000000000000))*(cj5));
IkReal x1408=((r01)*(sj0));
IkReal x1409=((cj0)*(sj6));
IkReal x1410=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1407)*(x1409)))+(((cj5)*(cj6)*(x1408)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)*(x1407)))+(((cj0)*(r12)*(sj5)))+(((cj5)*(sj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj6)*(x1408)))+(((IkReal(-1.00000000000000))*(cj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r11)*(x1409)))+(((r10)*(x1406))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1407)*(x1409)))+(((cj5)*(cj6)*(x1408)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)*(x1407)))+(((cj0)*(r12)*(sj5)))+(((cj5)*(sj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))))+IKsqr(((((sj6)*(x1408)))+(((IkReal(-1.00000000000000))*(cj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r11)*(x1409)))+(((r10)*(x1406)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(x1407)*(x1409)))+(((cj5)*(cj6)*(x1408)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)*(x1407)))+(((cj0)*(r12)*(sj5)))+(((cj5)*(sj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))), ((((sj6)*(x1408)))+(((IkReal(-1.00000000000000))*(cj6)*(x1410)))+(((IkReal(-1.00000000000000))*(r11)*(x1409)))+(((r10)*(x1406)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1411=IKsin(j4);
IkReal x1412=IKcos(j4);
IkReal x1413=((IkReal(0.998488012511589))*(sj3));
IkReal x1414=((r11)*(sj0));
IkReal x1415=((IkReal(1.00000000000000))*(cj5));
IkReal x1416=((cj6)*(sj0));
IkReal x1417=((r02)*(sj5));
IkReal x1418=((IkReal(1.00000000000000))*(r00));
IkReal x1419=((cj0)*(sj6));
IkReal x1420=((IkReal(0.0549698905825417))*(cj3));
IkReal x1421=((sj0)*(sj6));
IkReal x1422=((IkReal(0.998488012511589))*(cj3));
IkReal x1423=((IkReal(0.0549698905825417))*(sj3));
IkReal x1424=((cj0)*(cj6));
IkReal x1425=((r12)*(sj5));
IkReal x1426=((sj1)*(x1412));
IkReal x1427=((cj1)*(x1412));
IkReal x1428=((cj1)*(x1411));
IkReal x1429=((sj1)*(x1411));
evalcond[0]=((((r01)*(x1421)))+(((IkReal(-1.00000000000000))*(x1416)*(x1418)))+(((r10)*(x1424)))+(((IkReal(-1.00000000000000))*(r11)*(x1419)))+(((IkReal(-1.00000000000000))*(x1412))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj0)*(x1425)))+(((IkReal(-1.00000000000000))*(r01)*(x1415)*(x1416)))+(((IkReal(-1.00000000000000))*(r00)*(x1415)*(x1421)))+(x1411)+(((cj5)*(r10)*(x1419)))+(((cj5)*(r11)*(x1424)))+(((sj0)*(x1417))));
evalcond[2]=((((x1420)*(x1428)))+(((x1422)*(x1429)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)))+(((r21)*(sj6)))+(((IkReal(-1.00000000000000))*(x1423)*(x1429)))+(((x1413)*(x1428))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1415)))+(((x1420)*(x1427)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1415)))+(((x1422)*(x1426)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(x1423)*(x1426)))+(((x1413)*(x1427))));
evalcond[4]=((((x1420)*(x1429)))+(((x1423)*(x1428)))+(((IkReal(-1.00000000000000))*(r10)*(x1416)))+(((IkReal(-1.00000000000000))*(x1418)*(x1424)))+(((r01)*(x1419)))+(((sj6)*(x1414)))+(((IkReal(-1.00000000000000))*(x1422)*(x1428)))+(((x1413)*(x1429))));
evalcond[5]=((((x1420)*(x1426)))+(((IkReal(-1.00000000000000))*(cj6)*(x1414)*(x1415)))+(((x1423)*(x1427)))+(((cj0)*(x1417)))+(((IkReal(-1.00000000000000))*(x1422)*(x1427)))+(((IkReal(-1.00000000000000))*(r01)*(x1415)*(x1424)))+(((IkReal(-1.00000000000000))*(r10)*(x1415)*(x1421)))+(((IkReal(-1.00000000000000))*(r00)*(x1415)*(x1419)))+(((sj0)*(x1425)))+(((x1413)*(x1426))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1430=((cj0)*(sj3));
IkReal x1431=((IkReal(0.0549698905825417))*(r12));
IkReal x1432=((cj6)*(r01));
IkReal x1433=((cj0)*(cj3));
IkReal x1434=((r00)*(sj6));
IkReal x1435=((IkReal(0.0549698905825417))*(cj1));
IkReal x1436=((cj6)*(r11));
IkReal x1437=((r10)*(sj6));
IkReal x1438=((IkReal(0.0549698905825417))*(sj1));
IkReal x1439=((IkReal(0.998488012511589))*(cj1));
IkReal x1440=((sj0)*(sj3));
IkReal x1441=((IkReal(0.998488012511589))*(sj1));
IkReal x1442=((cj3)*(sj0));
IkReal x1443=((IkReal(0.998488012511589))*(x1437));
IkReal x1444=((x1440)*(x1441));
IkReal x1445=((x1438)*(x1442));
if( IKabs(((gconst22)*(((((r02)*(x1435)*(x1440)))+(((r12)*(x1433)*(x1439)))+(((IkReal(-1.00000000000000))*(sj1)*(x1431)*(x1433)))+(((r02)*(x1444)))+(((r02)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1430)*(x1431)))+(((IkReal(-1.00000000000000))*(r12)*(x1430)*(x1441)))+(((IkReal(-1.00000000000000))*(r02)*(x1439)*(x1442))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst22)*(((((x1430)*(x1435)*(x1436)))+(((x1430)*(x1435)*(x1437)))+(((x1432)*(x1439)*(x1442)))+(((IkReal(-1.00000000000000))*(x1433)*(x1437)*(x1439)))+(((IkReal(-1.00000000000000))*(x1434)*(x1444)))+(((IkReal(-1.00000000000000))*(x1434)*(x1445)))+(((IkReal(-1.00000000000000))*(x1433)*(x1436)*(x1439)))+(((x1430)*(x1437)*(x1441)))+(((IkReal(-1.00000000000000))*(x1432)*(x1445)))+(((IkReal(-1.00000000000000))*(x1432)*(x1444)))+(((x1434)*(x1439)*(x1442)))+(((x1430)*(x1436)*(x1441)))+(((IkReal(-1.00000000000000))*(x1434)*(x1435)*(x1440)))+(((IkReal(-1.00000000000000))*(x1432)*(x1435)*(x1440)))+(((x1433)*(x1437)*(x1438)))+(((x1433)*(x1436)*(x1438))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst22)*(((((r02)*(x1435)*(x1440)))+(((r12)*(x1433)*(x1439)))+(((IkReal(-1.00000000000000))*(sj1)*(x1431)*(x1433)))+(((r02)*(x1444)))+(((r02)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1430)*(x1431)))+(((IkReal(-1.00000000000000))*(r12)*(x1430)*(x1441)))+(((IkReal(-1.00000000000000))*(r02)*(x1439)*(x1442)))))), ((gconst22)*(((((x1430)*(x1435)*(x1436)))+(((x1430)*(x1435)*(x1437)))+(((x1432)*(x1439)*(x1442)))+(((IkReal(-1.00000000000000))*(x1433)*(x1437)*(x1439)))+(((IkReal(-1.00000000000000))*(x1434)*(x1444)))+(((IkReal(-1.00000000000000))*(x1434)*(x1445)))+(((IkReal(-1.00000000000000))*(x1433)*(x1436)*(x1439)))+(((x1430)*(x1437)*(x1441)))+(((IkReal(-1.00000000000000))*(x1432)*(x1445)))+(((IkReal(-1.00000000000000))*(x1432)*(x1444)))+(((x1434)*(x1439)*(x1442)))+(((x1430)*(x1436)*(x1441)))+(((IkReal(-1.00000000000000))*(x1434)*(x1435)*(x1440)))+(((IkReal(-1.00000000000000))*(x1432)*(x1435)*(x1440)))+(((x1433)*(x1437)*(x1438)))+(((x1433)*(x1436)*(x1438)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1446=IKsin(j5);
IkReal x1447=IKcos(j5);
IkReal x1448=((IkReal(0.0549698905825417))*(cj3));
IkReal x1449=((IkReal(1.00000000000000))*(cj0));
IkReal x1450=((IkReal(0.0549698905825417))*(sj3));
IkReal x1451=((IkReal(0.998488012511589))*(sj3));
IkReal x1452=((IkReal(0.998488012511589))*(cj3));
IkReal x1453=((sj6)*(x1446));
IkReal x1454=((r12)*(x1447));
IkReal x1455=((r02)*(x1447));
IkReal x1456=((cj6)*(x1446));
evalcond[0]=((((r00)*(sj0)*(x1453)))+(((IkReal(-1.00000000000000))*(r11)*(x1449)*(x1456)))+(((sj0)*(x1455)))+(((IkReal(-1.00000000000000))*(x1449)*(x1454)))+(((r01)*(sj0)*(x1456)))+(((IkReal(-1.00000000000000))*(r10)*(x1449)*(x1453))));
evalcond[1]=((((cj1)*(x1450)))+(((r22)*(x1447)))+(((sj1)*(x1448)))+(((r20)*(x1453)))+(((IkReal(-1.00000000000000))*(cj1)*(x1452)))+(((r21)*(x1456)))+(((sj1)*(x1451))));
evalcond[2]=((((r10)*(sj0)*(x1453)))+(((cj0)*(r00)*(x1453)))+(((cj0)*(r01)*(x1456)))+(((IkReal(-1.00000000000000))*(cj1)*(x1451)))+(((cj0)*(x1455)))+(((IkReal(-1.00000000000000))*(cj1)*(x1448)))+(((sj0)*(x1454)))+(((sj1)*(x1450)))+(((IkReal(-1.00000000000000))*(sj1)*(x1452)))+(((r11)*(sj0)*(x1456))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1457=((cj0)*(cj6));
IkReal x1458=((IkReal(1.00000000000000))*(cj5));
IkReal x1459=((r01)*(sj0));
IkReal x1460=((cj0)*(sj6));
IkReal x1461=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r10)*(x1458)*(x1460)))+(((cj5)*(cj6)*(x1459)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(sj6)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1457)*(x1458))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(x1457)))+(((IkReal(-1.00000000000000))*(r11)*(x1460)))+(((sj6)*(x1459)))+(((IkReal(-1.00000000000000))*(cj6)*(x1461))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r10)*(x1458)*(x1460)))+(((cj5)*(cj6)*(x1459)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(sj6)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1457)*(x1458)))))+IKsqr(((((r10)*(x1457)))+(((IkReal(-1.00000000000000))*(r11)*(x1460)))+(((sj6)*(x1459)))+(((IkReal(-1.00000000000000))*(cj6)*(x1461)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r10)*(x1458)*(x1460)))+(((cj5)*(cj6)*(x1459)))+(((cj0)*(r12)*(sj5)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(sj5)))+(((cj5)*(sj6)*(x1461)))+(((IkReal(-1.00000000000000))*(r11)*(x1457)*(x1458)))), ((((r10)*(x1457)))+(((IkReal(-1.00000000000000))*(r11)*(x1460)))+(((sj6)*(x1459)))+(((IkReal(-1.00000000000000))*(cj6)*(x1461)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1462=IKsin(j4);
IkReal x1463=IKcos(j4);
IkReal x1464=((IkReal(0.998488012511589))*(sj3));
IkReal x1465=((r11)*(sj0));
IkReal x1466=((IkReal(1.00000000000000))*(cj5));
IkReal x1467=((cj6)*(sj0));
IkReal x1468=((r02)*(sj5));
IkReal x1469=((IkReal(1.00000000000000))*(r00));
IkReal x1470=((cj0)*(sj6));
IkReal x1471=((IkReal(0.0549698905825417))*(cj3));
IkReal x1472=((sj0)*(sj6));
IkReal x1473=((IkReal(0.998488012511589))*(cj3));
IkReal x1474=((IkReal(0.0549698905825417))*(sj3));
IkReal x1475=((cj0)*(cj6));
IkReal x1476=((r12)*(sj5));
IkReal x1477=((sj1)*(x1463));
IkReal x1478=((cj1)*(x1463));
IkReal x1479=((cj1)*(x1462));
IkReal x1480=((sj1)*(x1462));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1467)*(x1469)))+(((r10)*(x1475)))+(((IkReal(-1.00000000000000))*(r11)*(x1470)))+(((r01)*(x1472)))+(((IkReal(-1.00000000000000))*(x1463))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1466)*(x1467)))+(((IkReal(-1.00000000000000))*(r00)*(x1466)*(x1472)))+(((cj5)*(r10)*(x1470)))+(((cj5)*(r11)*(x1475)))+(x1462)+(((sj0)*(x1468)))+(((IkReal(-1.00000000000000))*(cj0)*(x1476))));
evalcond[2]=((((x1471)*(x1479)))+(((IkReal(-1.00000000000000))*(cj6)*(r20)))+(((r21)*(sj6)))+(((x1473)*(x1480)))+(((IkReal(-1.00000000000000))*(x1474)*(x1480)))+(((x1464)*(x1479))));
evalcond[3]=((((x1471)*(x1478)))+(((r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj6)*(x1466)))+(((IkReal(-1.00000000000000))*(x1474)*(x1477)))+(((x1473)*(x1477)))+(((x1464)*(x1478)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1466))));
evalcond[4]=((((x1471)*(x1480)))+(((IkReal(-1.00000000000000))*(r10)*(x1467)))+(((x1474)*(x1479)))+(((IkReal(-1.00000000000000))*(x1469)*(x1475)))+(((sj6)*(x1465)))+(((x1464)*(x1480)))+(((r01)*(x1470)))+(((IkReal(-1.00000000000000))*(x1473)*(x1479))));
evalcond[5]=((((x1471)*(x1477)))+(((sj0)*(x1476)))+(((cj0)*(x1468)))+(((x1474)*(x1478)))+(((IkReal(-1.00000000000000))*(r00)*(x1466)*(x1470)))+(((IkReal(-1.00000000000000))*(r10)*(x1466)*(x1472)))+(((IkReal(-1.00000000000000))*(cj6)*(x1465)*(x1466)))+(((IkReal(-1.00000000000000))*(r01)*(x1466)*(x1475)))+(((x1464)*(x1477)))+(((IkReal(-1.00000000000000))*(x1473)*(x1478))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j3;
vinfos[2].indices[0] = _ij3[0];
vinfos[2].indices[1] = _ij3[1];
vinfos[2].maxsolutions = _nj3;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j4;
vinfos[3].indices[0] = _ij4[0];
vinfos[3].indices[1] = _ij4[1];
vinfos[3].maxsolutions = _nj4;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j5;
vinfos[4].indices[0] = _ij5[0];
vinfos[4].indices[1] = _ij5[1];
vinfos[4].maxsolutions = _nj5;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j6;
vinfos[5].indices[0] = _ij6[0];
vinfos[5].indices[1] = _ij6[1];
vinfos[5].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - clam (1ff78e7effdbc3cf09fedbdc7cd4beb6)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
